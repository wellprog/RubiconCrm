
gantt = {version:"4.1.0"}; gantt.event = function(b, c, a){if (b.addEventListener){b.addEventListener(c, a, false)} else{if (b.attachEvent){b.attachEvent("on" + c, a)}}}; gantt.eventRemove = function(b, c, a){if (b.removeEventListener){b.removeEventListener(c, a, false)} else{if (b.detachEvent){b.detachEvent("on" + c, a)}}}; gantt._eventable = function(a){a._silent_mode = false; a._silentStart = function(){this._silent_mode = true}; a._silentEnd = function(){this._silent_mode = false}; a.attachEvent = function(c, b, d){c = "ev_" + c.toLowerCase(); if (!this[c]){this[c] = new this._eventCatcher(d || this)}return(c + ":" + this[c].addEvent(b))}; a.callEvent = function(b, c){if (this._silent_mode){return true}b = "ev_" + b.toLowerCase(); if (this[b]){return this[b].apply(this, c)}return true}; a.checkEvent = function(b){return(!!this["ev_" + b.toLowerCase()])}; a._eventCatcher = function(c){var b = []; var d = function(){var f = true; for (var e = 0; e < b.length; e++){if (b[e]){var g = b[e].apply(c, arguments); f = f && g}}return f}; d.addEvent = function(e){if (typeof (e) == "function"){return b.push(e) - 1}return false}; d.removeEvent = function(e){b[e] = null}; return d}; a.detachEvent = function(c){if (c){var b = c.split(":"); this[b[0]].removeEvent(b[1])}}; a.detachAllEvents = function(){for (var b in this){if (b.indexOf("ev_") === 0){delete this[b]}}}; a = null}; gantt.copy = function(b){var d, c, a; if (b && typeof b == "object"){a = {}; c = [Array, Date, Number, String, Boolean]; for (d = 0; d < c.length; d++){if (b instanceof c[d]){a = d?new c[d](b):new c[d]()}}for (d in b){if (Object.prototype.hasOwnProperty.apply(b, [d])){a[d] = gantt.copy(b[d])}}}return a || b}; gantt.mixin = function(d, c, b){for (var a in c){if ((!d[a] || b)){d[a] = c[a]}}return d}; gantt.defined = function(a){return typeof (a) != "undefined"}; gantt.uid = function(){if (!this._seed){this._seed = (new Date()).valueOf()}this._seed++; return this._seed}; gantt.bind = function(b, a){if (b.bind){return b.bind(a)} else{return function(){return b.apply(a, arguments)}}}; (function(){function a(h){var i = false, f = false; if (window.getComputedStyle){var g = window.getComputedStyle(h, null); i = g.display; f = g.visibility} else{if (h.currentStyle){i = h.currentStyle.display; f = h.currentStyle.visibility}}return(i != "none" && f != "hidden")}function b(f){return !isNaN(f.getAttribute("tabindex")) && (f.getAttribute("tabindex") * 1 >= 0)}function e(g){var f = {a:true, area:true}; if (f[g.nodeName.loLowerCase()]){return !!g.getAttribute("href")}return true}function d(f){var g = {input:true, select:true, textarea:true, button:true, object:true}; if (g[f.nodeName.toLowerCase()]){return !f.hasAttribute("disabled")}return true}gantt._getFocusableNodes = function c(f){var g = f.querySelectorAll(["a[href]", "area[href]", "input", "select", "textarea", "button", "iframe", "object", "embed", "[tabindex]", "[contenteditable]"].join(", ")); var l = Array.prototype.slice.call(g, 0); for (var h = 0; h < l.length; h++){var j = l[h]; var k = (b(j) || d(j) || e(j)) && a(j); if (!k){l.splice(h, 1); h--}}return l}})(); gantt._get_position = function(d){var j = 0, c = 0; if (d.getBoundingClientRect){var g = d.getBoundingClientRect(); var h = document.body; var b = document.documentElement; var a = window.pageYOffset || b.scrollTop || h.scrollTop; var e = window.pageXOffset || b.scrollLeft || h.scrollLeft; var f = b.clientTop || h.clientTop || 0; var i = b.clientLeft || h.clientLeft || 0; j = g.top + a - f; c = g.left + e - i; return{y:Math.round(j), x:Math.round(c), width:d.offsetWidth, height:d.offsetHeight}} else{while (d){j = j + parseInt(d.offsetTop, 10); c = c + parseInt(d.offsetLeft, 10); d = d.offsetParent}return{y:j, x:c, width:d.offsetWidth, height:d.offsetHeight}}}; gantt._detectScrollSize = function(){var b = document.createElement("div"); b.style.cssText = "visibility:hidden;position:absolute;left:-1000px;width:100px;padding:0px;margin:0px;height:110px;min-height:100px;overflow-y:scroll;"; document.body.appendChild(b); var a = b.offsetWidth - b.clientWidth; document.body.removeChild(b); return a}; if (window.dhtmlx){if (!dhtmlx.attaches){dhtmlx.attaches = {}}dhtmlx.attaches.attachGantt = function(f, a, b){var e = document.createElement("DIV"); b = b || window.gantt; e.id = "gantt_" + b.uid(); e.style.width = "100%"; e.style.height = "100%"; e.cmp = "grid"; document.body.appendChild(e); this.attachObject(e.id); this.dataType = "gantt"; this.dataObj = b; var d = this.vs[this.av]; d.grid = b; b.init(e.id, f, a); e.firstChild.style.border = "none"; d.gridId = e.id; d.gridObj = e; var c = "_viewRestore"; return this.vs[this[c]()].grid}}if (typeof (window.dhtmlXCellObject) != "undefined"){dhtmlXCellObject.prototype.attachGantt = function(e, a, b){b = b || window.gantt; var d = document.createElement("DIV"); d.id = "gantt_" + b.uid(); d.style.width = "100%"; d.style.height = "100%"; d.cmp = "grid"; document.body.appendChild(d); this.attachObject(d.id); this.dataType = "gantt"; this.dataObj = b; b.init(d.id, e, a); d.firstChild.style.border = "none"; var c = "_viewRestore"; d = null; this.callEvent("_onContentAttach", []); return this.dataObj}}gantt._eventable(gantt); if (!gantt.config){gantt.config = {}}if (!gantt.config){gantt.config = {}}if (!gantt.templates){gantt.templates = {}}(function(){gantt.mixin(gantt.config, {links:{finish_to_start:"0", start_to_start:"1", finish_to_finish:"2", start_to_finish:"3"}, types:{task:"task", project:"project", milestone:"milestone"}, duration_unit:"day", work_time:false, correct_work_time:false, skip_off_time:false, autosize:false, autosize_min_width:0, show_links:true, show_task_cells:true, static_background:false, branch_loading:false, show_loading:false, show_chart:true, show_grid:true, min_duration:60 * 60 * 1000, xml_date:"%d-%m-%Y %H:%i", api_date:"%d-%m-%Y %H:%i", start_on_monday:true, server_utc:false, show_progress:true, fit_tasks:false, select_task:true, scroll_on_click:true, preserve_scroll:true, readonly:false, date_grid:"%Y-%m-%d", drag_links:true, drag_progress:true, drag_resize:true, drag_move:true, drag_mode:{resize:"resize", progress:"progress", move:"move", ignore:"ignore"}, round_dnd_dates:true, link_wrapper_width:20, root_id:0, autofit:false, columns:[{name:"text", tree:true, width:"*", resize:true}, {name:"start_date", align:"center", resize:true}, {name:"duration", align:"center"}, {name:"add", width:"44"}], step:1, scale_unit:"day", scale_offset_minimal:true, subscales:[], inherit_scale_class:false, time_step:60, duration_step:1, date_scale:"%d %M", task_date:"%d %F %Y", time_picker:"%H:%i", task_attribute:"task_id", link_attribute:"link_id", layer_attribute:"data-layer", buttons_left:["gantt_save_btn", "gantt_cancel_btn"], _migrate_buttons:{dhx_save_btn:"gantt_save_btn", dhx_cancel_btn:"gantt_cancel_btn", dhx_delete_btn:"gantt_delete_btn"}, buttons_right:["gantt_delete_btn"], lightbox:{sections:[{name:"description", height:70, map_to:"text", type:"textarea", focus:true}, {name:"time", type:"duration", map_to:"auto"}], project_sections:[{name:"description", height:70, map_to:"text", type:"textarea", focus:true}, {name:"type", type:"typeselect", map_to:"type"}, {name:"time", type:"duration", readonly:true, map_to:"auto"}], milestone_sections:[{name:"description", height:70, map_to:"text", type:"textarea", focus:true}, {name:"type", type:"typeselect", map_to:"type"}, {name:"time", type:"duration", single_date:true, map_to:"auto"}]}, drag_lightbox:true, sort:false, details_on_create:true, details_on_dblclick:true, initial_scroll:true, task_scroll_offset:100, order_branch:false, order_branch_free:false, task_height:"full", min_column_width:70, min_grid_column_width:70, grid_resizer_column_attribute:"column_index", grid_resizer_attribute:"grid_resizer", keep_grid_width:false, grid_resize:false, show_unscheduled:true, readonly_property:"readonly", editable_property:"editable", type_renderers:{}, open_tree_initially:false, optimize_render:true, prevent_default_scroll:false, show_errors:true, wai_aria_attributes:true, smart_scales:true}); gantt.keys = {edit_save:13, edit_cancel:27}; gantt._init_template = function(b, a, c){var d = this._reg_templates || {}; c = c || b; if (this.config[b] && d[c] != this.config[b]){if (!(a && this.templates[c])){this.templates[c] = this.date.date_to_str(this.config[b]); d[c] = this.config[b]}}this._reg_templates = d}; gantt._init_templates = function(){var e = gantt.locale.labels; e.gantt_save_btn = e.icon_save; e.gantt_cancel_btn = e.icon_cancel; e.gantt_delete_btn = e.icon_delete; var a = this.date.date_to_str; var b = this.config; gantt._init_template("date_scale", true); gantt._init_template("date_grid", true, "grid_date_format"); gantt._init_template("task_date", true); gantt.mixin(this.templates, {xml_date:this.date.str_to_date(b.xml_date, b.server_utc), xml_format:a(b.xml_date, b.server_utc), api_date:this.date.str_to_date(b.api_date), progress_text:function(f, c, d){return""}, grid_header_class:function(d, c){return""}, task_text:function(f, c, d){return d.text}, task_class:function(f, c, d){return""}, grid_row_class:function(f, c, d){return""}, task_row_class:function(f, c, d){return""}, task_cell_class:function(d, c){return""}, scale_cell_class:function(c){return""}, scale_row_class:function(c){return""}, grid_indent:function(c){return"<div class='gantt_tree_indent'></div>"}, grid_folder:function(c){return"<div class='gantt_tree_icon gantt_folder_" + (c.$open?"open":"closed") + "'></div>"}, grid_file:function(c){return"<div class='gantt_tree_icon gantt_file'></div>"}, grid_open:function(c){return"<div class='gantt_tree_icon gantt_" + (c.$open?"close":"open") + "'></div>"}, grid_blank:function(c){return"<div class='gantt_tree_icon gantt_blank'></div>"}, date_grid:function(c, d){if (d && gantt.isUnscheduledTask(d) && gantt.config.show_unscheduled){return gantt.templates.task_unscheduled_time(d)} else{return gantt.templates.grid_date_format(c)}}, task_time:function(f, c, d){if (gantt.isUnscheduledTask(d) && gantt.config.show_unscheduled){return gantt.templates.task_unscheduled_time(d)} else{return gantt.templates.task_date(f) + " - " + gantt.templates.task_date(c)}}, task_unscheduled_time:function(c){return""}, time_picker:a(b.time_picker), link_class:function(c){return""}, link_description:function(c){var f = gantt.getTask(c.source), d = gantt.getTask(c.target); return"<b>" + f.text + "</b> &ndash;  <b>" + d.text + "</b>"}, drag_link:function(i, d, h, c){i = gantt.getTask(i); var g = gantt.locale.labels; var f = "<b>" + i.text + "</b> " + (d?g.link_start:g.link_end) + "<br/>"; if (h){h = gantt.getTask(h); f += "<b> " + h.text + "</b> " + (c?g.link_start:g.link_end) + "<br/>"}return f}, drag_link_class:function(i, d, h, c){var f = ""; if (i && h){var g = gantt.isLinkAllowed(i, h, d, c); f = " " + (g?"gantt_link_allow":"gantt_link_deny")}return"gantt_link_tooltip" + f}, tooltip_date_format:gantt.date.date_to_str("%Y-%m-%d"), tooltip_text:function(f, c, d){return"<b>Task:</b> " + d.text + "<br/><b>Start date:</b> " + gantt.templates.tooltip_date_format(f) + "<br/><b>End date:</b> " + gantt.templates.tooltip_date_format(c)}}); this.callEvent("onTemplatesReady", [])}})(); gantt._click = {}; gantt._dbl_click = {}; gantt._context_menu = {}; gantt._on_click = function(d){d = d || window.event; var b = d.target || d.srcElement; var f = gantt.locate(d); var c = true; if (f !== null){c = !gantt.checkEvent("onTaskClick") || gantt.callEvent("onTaskClick", [f, d])} else{gantt.callEvent("onEmptyClick", [d])}if (c){var a = gantt._find_ev_handler(d, b, gantt._click, f); if (!a){return}if (f && gantt.getTask(f) && gantt.config.select_task){gantt.selectTask(f)}}}; gantt._on_contextmenu = function(c){c = c || window.event; var f = c.target || c.srcElement, b = gantt.locate(f), d = gantt.locate(f, gantt.config.link_attribute); var a = !gantt.checkEvent("onContextMenu") || gantt.callEvent("onContextMenu", [b, d, c]); if (!a){if (c.preventDefault){c.preventDefault()} else{c.returnValue = false}}return a}; gantt._find_ev_handler = function(h, a, g, j){var d = true; while (a){var c = gantt._getClassName(a); if (c){c = c.split(" "); for (var b = 0; b < c.length; b++){if (!c[b]){continue}if (g[c[b]]){var f = g[c[b]].call(gantt, h, j, a); d = d && !(typeof f != "undefined" && f !== true)}}}a = a.parentNode}return d}; gantt._on_dblclick = function(d){d = d || window.event; var b = d.target || d.srcElement; var f = gantt.locate(d); var c = !gantt.checkEvent("onTaskDblClick") || gantt.callEvent("onTaskDblClick", [f, d]); if (c){var a = gantt._find_ev_handler(d, b, gantt._dbl_click, f); if (!a){return}if (f !== null && gantt.getTask(f)){if (c && gantt.config.details_on_dblclick){gantt.showLightbox(f)}}}}; gantt._on_mousemove = function(a){if (gantt.checkEvent("onMouseMove")){var b = gantt.locate(a); gantt._last_move_event = a; gantt.callEvent("onMouseMove", [b, a])}}; gantt._DnD = function _DnD(b, a){this._obj = b; if (a){this._settings = a}gantt._eventable(this); this.initEventAccessor(); this._drag_start_timer = null; gantt.attachEvent("onGanttScroll", gantt.bind(function(d, c){this.clearDragTimer()}, this)); gantt.event(b, this._evs.down, gantt.bind(function(c){a.original_target = {target:c.target || c.srcElement}; if (gantt.config.touch){this.clearDragTimer(); this._drag_start_timer = setTimeout(gantt.bind(function(){this.dragStart(b, c)}, this), gantt.config.touch_drag)} else{this.dragStart(b, c)}}, this)); gantt.event(document.body, this._evs.up, gantt.bind(function(c){this.clearDragTimer()}, this))}; gantt._DnD.prototype = {traceDragEvents:function(e){var c = gantt.bind(function(f){return this.dragMove(e, f)}, this); var a = gantt.bind(function(f){return this.dragScroll(e, f)}, this); var b = gantt.bind(function(f){if (f && f.preventDefault){f.preventDefault()}(f || event).cancelBubble = true; if (gantt.defined(this.config.updates_per_second)){if (!gantt._checkTimeout(this, this.config.updates_per_second)){return true}}return c(f)}, this); var d = gantt.bind(function(f){gantt.eventRemove(document.body, this._evs.move, b); gantt.eventRemove(document.body, this._evs.up, d); return this.dragEnd(e)}, this); gantt.event(document.body, this._evs.move, b); gantt.event(document.body, this._evs.up, d)}, checkPositionChange:function(d){var b = d.x - this.config.pos.x; var a = d.y - this.config.pos.y; var c = Math.sqrt(Math.pow(Math.abs(b), 2) + Math.pow(Math.abs(a), 2)); if (c > this.config.sensitivity){return true} else{return false}}, initDnDMarker:function(){var a = this.config.marker = document.createElement("div"); a.className = "gantt_drag_marker"; a.innerHTML = "Dragging object"; document.body.appendChild(a)}, backupEventTarget:function(b){if (!gantt.config.touch){return}var c = this.eventAccessor(b); var a = c.target || c.srcElement; var d = a.cloneNode(true); this.config.original_target = {target:d}; this.config.backup_element = a; a.parentNode.appendChild(d); a.style.display = "none"; document.body.appendChild(a)}, initEventAccessor:function(){var a = this._evs = {move:"mousemove", down:"mousedown", up:"mouseup"}; this.eventAccessor = function(b){return b}; if (gantt.config.touch){if (window.navigator.msPointerEnabled){a.move = "MSPointerMove"; a.down = "MSPointerDown"; a.up = "MSPointerUp"; this.eventAccessor = function(b){if (b.pointerType == b.MSPOINTER_TYPE_MOUSE){return null}return b}} else{a.move = "touchmove"; a.down = "touchstart"; a.up = "touchend"; this.eventAccessor = function(b){if (b.touches && b.touches.length > 1){return null}if (b.touches[0]){return{target:document.elementFromPoint(b.touches[0].clientX, b.touches[0].clientY), pageX:b.touches[0].pageX, pageY:b.touches[0].pageY, clientX:b.touches[0].clientX, clientY:b.touches[0].clientY}} else{return b}}}}}, clearDragTimer:function(){if (this._drag_start_timer){clearTimeout(this._drag_start_timer); this._drag_start_timer = null}}, dragStart:function(b, a){this.config = {obj:b, marker:null, started:false, pos:this.getPosition(a), sensitivity:4}; if (this._settings){gantt.mixin(this.config, this._settings, true)}this.traceDragEvents(b); gantt._prevent_touch_scroll = true; document.body.className += " gantt_noselect"; if (gantt.config.touch){this.dragMove(b, a)}}, dragMove:function(c, b){var a = this.eventAccessor(b); if (!a){return}if (!this.config.marker && !this.config.started){var d = this.getPosition(a); if (gantt.config.touch || this.checkPositionChange(d)){this.config.started = true; this.config.ignore = false; if (this.callEvent("onBeforeDragStart", [c, this.config.original_target]) === false){this.config.ignore = true; return true}this.backupEventTarget(b); this.initDnDMarker(); gantt._touch_feedback(); this.callEvent("onAfterDragStart", [c, this.config.original_target])} else{this.config.ignore = true}}if (!this.config.ignore){a.pos = this.getPosition(a); this.config.marker.style.left = a.pos.x + "px"; this.config.marker.style.top = a.pos.y + "px"; this.callEvent("onDragMove", [c, a]); return false}}, dragEnd:function(b){var a = this.config.backup_element; if (a && a.parentNode){a.parentNode.removeChild(a)}gantt._prevent_touch_scroll = false; if (this.config.marker){this.config.marker.parentNode.removeChild(this.config.marker); this.config.marker = null; this.callEvent("onDragEnd", [])}document.body.className = document.body.className.replace(" gantt_noselect", "")}, getPosition:function(b){var a = 0, c = 0; b = b || window.event; if (b.pageX || b.pageY){a = b.pageX; c = b.pageY} else{if (b.clientX || b.clientY){a = b.clientX + document.body.scrollLeft + document.documentElement.scrollLeft; c = b.clientY + document.body.scrollTop + document.documentElement.scrollTop}}return{x:a, y:c}}}; gantt._init_grid = function(){this._click.gantt_close = this.bind(function(b, c, a){this.close(c); return false}, this); this._click.gantt_open = this.bind(function(b, c, a){this.open(c); return false}, this); this._click.gantt_row = this.bind(function(c, d, a){if (d !== null){var b = this.getTask(d); if (this.config.scroll_on_click){this.showDate(b.start_date)}this.callEvent("onTaskRowClick", [d, a])}}, this); this._click.gantt_grid_head_cell = this.bind(function(h, j, a){var g = a.getAttribute("column_id"); if (!this.callEvent("onGridHeaderClick", [g, h])){return}if (g == "add"){this._click.gantt_add(h, this.config.root_id); return}if (this.config.sort){var f = g, b; for (var d = 0; this.config.columns.length; d++){if (this.config.columns[d].name == g){b = this.config.columns[d]; break}}if (b && b.sort !== undefined && b.sort !== true){f = b.sort; if (!f){return}}var c = (this._sort && this._sort.direction && this._sort.name == g)?this._sort.direction:"desc"; c = (c == "desc")?"asc":"desc"; this._sort = {name:g, direction:c}; this.sort(f, c == "desc")}}, this); if (!this.config.sort && this.config.order_branch){this._init_dnd()}this._click.gantt_add = this.bind(function(c, d, a){if (this.config.readonly){return}var b = {}; this.createTask(b, d?d:this.config.root_id); return false}, this); if (this._init_resize){this._init_resize()}}; gantt._render_grid = function(){this._calc_grid_width(); if (this._is_grid_visible()){this._render_grid_header()}}; gantt._calc_grid_width = function(){var e = this.getGridColumns(); var b = 0; var a = []; var c = []; for (var f = 0; f < e.length; f++){var k = parseInt(e[f].width, 10); if (window.isNaN(k)){k = 50; a.push(f)}c[f] = k; b += k}if (this.config.autofit || a.length){var h = this._get_grid_width() - b; var d = h / (a.length > 0?a.length:(c.length > 0?c.length:1)); if (a.length > 0){var j = h / (a.length?a.length:1); for (var f = 0; f < a.length; f++){var g = a[f]; c[g] += j}} else{var j = h / (c.length?c.length:1); for (var f = 0; f < c.length; f++){c[f] += j}}for (var f = 0; f < c.length; f++){e[f].width = c[f]}} else{this.config.grid_width = b}}; gantt._render_grid_header = function(){var e = this.getGridColumns(); var o = []; var b = 0, j = this.locale.labels; var c = this.config.scale_height - 2; for (var h = 0; h < e.length; h++){var n = h == e.length - 1; var d = e[h]; var g = d.width * 1; if (n && this._get_grid_width() > b + g){d.width = g = this._get_grid_width() - b}b += g; var f = (this._sort && d.name == this._sort.name)?("<div class='gantt_sort gantt_" + this._sort.direction + "'></div>"):""; var p = ["gantt_grid_head_cell", ("gantt_grid_head_" + d.name), (n?"gantt_last_cell":""), this.templates.grid_header_class(d.name, d)].join(" "); var a = "width:" + (g - (n?1:0)) + "px;"; var k = (d.label || j["column_" + d.name]); k = k || ""; var l = this._waiAria.gridScaleCellAttrString(d, k); var m = "<div class='" + p + "' style='" + a + "' " + l + " column_id='" + d.name + "'>" + k + f + "</div>"; o.push(m)}this.$grid_scale.style.height = (this.config.scale_height - 1) + "px"; this.$grid_scale.style.lineHeight = c + "px"; this.$grid_scale.style.width = (b - 1) + "px"; this.$grid_scale.innerHTML = o.join("")}; gantt._render_grid_item = function(s){if (!gantt._is_grid_visible()){return null}var c = this.getGridColumns(); var e = []; var m = 0; var t; for (var q = 0; q < c.length; q++){var h = q == c.length - 1; var g = c[q]; var b; var n; var d; if (g.name == "add"){var f = this._waiAria.gridAddButtonAttrString(g); n = "<div " + f + " class='gantt_add'></div>"; d = ""} else{if (g.template){n = g.template(s)} else{n = s[g.name]}if (n instanceof Date){n = this.templates.date_grid(n, s)}d = n; n = "<div class='gantt_tree_content'>" + n + "</div>"}var k = "gantt_cell" + (h?" gantt_last_cell":""); var l = ""; if (g.tree){for (var o = 0; o < s.$level; o++){l += this.templates.grid_indent(s)}t = this._has_children(s.id); if (t){l += this.templates.grid_open(s); l += this.templates.grid_folder(s)} else{l += this.templates.grid_blank(s); l += this.templates.grid_file(s)}}var r = "width:" + (g.width - (h?1:0)) + "px;"; if (this.defined(g.align)){r += "text-align:" + g.align + ";"}var f = this._waiAria.gridCellAttrString(g, d); b = "<div class='" + k + "' style='" + r + "' " + f + ">" + l + n + "</div>"; e.push(b)}var k = gantt.getGlobalTaskIndex(s.id) % 2 === 0?"":" odd"; k += (s.$transparent)?" gantt_transparent":""; k += (s.$dataprocessor_class?" " + s.$dataprocessor_class:""); if (this.templates.grid_row_class){var p = this.templates.grid_row_class.call(this, s.start_date, s.end_date, s); if (p){k += " " + p}}if (this.getState().selected_task == s.id){k += " gantt_selected"}var a = document.createElement("div"); a.className = "gantt_row" + k; a.style.height = this.config.row_height + "px"; a.style.lineHeight = (gantt.config.row_height) + "px"; a.setAttribute(this.config.task_attribute, s.id); this._waiAria.taskRowAttr(s, a); a.innerHTML = e.join(""); return a}; gantt.open = function(a){gantt._set_item_state(a, true); this.callEvent("onTaskOpened", [a])}; gantt.close = function(a){gantt._set_item_state(a, false); this.callEvent("onTaskClosed", [a])}; gantt._set_item_state = function(b, a){if (b && this._pull[b]){this._pull[b].$open = a; gantt._refresh_on_toggle_element(b)}}; gantt._refresh_on_toggle_element = function(a){this.refreshData()}; gantt._is_grid_visible = function(){return(this.config.grid_width && this.config.show_grid)}; gantt._get_grid_width = function(){if (this._is_grid_visible()){if (this._is_chart_visible()){return this.config.grid_width} else{return this._x}} else{return 0}}; gantt.moveTask = function(e, c, n){var d = arguments[3]; if (d){if (d === e){return}n = this.getParent(d); c = this.getTaskIndex(d)}if (e == n){return}n = n || this.config.root_id; var a = this.getTask(e); var g = this.getParent(a.id); var b = this.getChildren(this.getParent(a.id)); var k = this.getChildren(n); if (c == - 1){c = k.length + 1}if (g == n){var m = this.getTaskIndex(e); if (m == c){return}}if (this.callEvent("onBeforeTaskMove", [e, n, c]) === false){return}this._replace_branch_child(g, e); k = this.getChildren(n); var f = k[c]; if (!f){k.push(e)} else{k = k.slice(0, c).concat([e]).concat(k.slice(c))}this.setParent(a, n); this._branches[n] = k; var l = this.calculateTaskLevel(a) - a.$level; a.$level += l; var j = this._getTaskTree(e); for (var h = 0; h < j.length; h++){var o = this._pull[j[h]]; o.$level += l}if (c * 1 > 0){if (d){a.$drop_target = (this.getTaskIndex(e) > this.getTaskIndex(d)?"next:":"") + d} else{a.$drop_target = "next:" + gantt.getPrevSibling(e)}} else{if (k[c * 1 + 1]){a.$drop_target = k[c * 1 + 1]} else{a.$drop_target = n}}if (!this.callEvent("onAfterTaskMove", [e, n, c])){return}this.refreshData()}; gantt._init_dnd = function(){var a = new gantt._DnD(this.$grid_data, {updates_per_second:60}); if (this.defined(this.config.dnd_sensitivity)){a.config.sensitivity = this.config.dnd_sensitivity}a.attachEvent("onBeforeDragStart", this.bind(function(f, d){var c = this._locateHTML(d); if (!c){return false}if (this.hideQuickInfo){this._hideQuickInfo()}var g = this.locate(d); var b = gantt.getTask(g); if (gantt._is_readonly(b)){return false}a.config.initial_open_state = b.$open; if (!this.callEvent("onRowDragStart", [g, d.target || d.srcElement, d])){return false}}, this)); a.attachEvent("onAfterDragStart", this.bind(function(f, d){var c = this._locateHTML(d); a.config.marker.innerHTML = c.outerHTML; a.config.id = this.locate(d); var b = this.getTask(a.config.id); a.config.index = this.getTaskIndex(a.config.id); a.config.parent = b.parent; b.$open = false; b.$transparent = true; this.refreshData()}, this)); a.lastTaskOfLevel = function(g){var e = gantt._order, f = gantt._pull, d = null; for (var c = 0, b = e.length; c < b; c++){if (f[e[c]].$level == g){d = f[e[c]]}}return d?d.id:null}; a._getGridPos = this.bind(function(d){var g = this._get_position(this.$grid_data); var b = g.x; var f = d.pos.y - 10; if (f < g.y){f = g.y}var c = gantt.getTaskCount() * gantt.config.row_height; if (f > g.y + c - this.config.row_height){f = g.y + c - this.config.row_height}g.x = b; g.y = f; return g}, this); a._getTargetY = this.bind(function(b){var d = this._get_position(this.$grid_data); var c = b.pageY - d.y + gantt.getScrollState().y; if (c < 0){c = 0}return c}, this); a._getTaskByY = this.bind(function(d, b){d = d || 0; if (gantt.config.smart_rendering){d += this.$grid_data.scrollTop}var c = Math.floor(d / this.config.row_height); c = b < c?c - 1:c; if (c > this._order.length - 1){return null}return this._order[c]}, this); a.attachEvent("onDragMove", this.bind(function(f, j){var n = a.config; var l = a._getGridPos(j); n.marker.style.left = l.x + 10 + "px"; n.marker.style.top = l.y + "px"; var o = this.getTask(a.config.id); var k = a._getTargetY(j); var c = a._getTaskByY(k, gantt.getGlobalTaskIndex(o.id)); if (!this.isTaskExists(c)){c = a.lastTaskOfLevel(gantt.config.order_branch_free?o.$level:0); if (c == a.config.id){c = null}}function m(e, p){return(!(gantt.isChildOf(i.id, p.id)) && (e.$level == p.$level || gantt.config.order_branch_free))}if (this.isTaskExists(c)){var i = this.getTask(c); if (gantt.getGlobalTaskIndex(i.id) * this.config.row_height + this.config.row_height / 2 < k){var h = this.getGlobalTaskIndex(i.id); var g = this._pull[this._order[h + 1]]; if (g){if (g.id != o.id){i = g} else{if (this.config.order_branch_free){if (!(this.isChildOf(o.id, i.id) && this.getChildren(i.id).length == 1)){return} else{this.moveTask(o.id, this.getTaskIndex(i.id) + 1, this.getParent(i.id)); return}} else{return}}} else{g = this._pull[this._order[h]]; if (m(g, o) && g.id != o.id){this.moveTask(o.id, - 1, this.getParent(g.id)); return}}} else{if (this.config.order_branch_free){if (i.id != o.id && m(i, o)){if (!this.hasChild(i.id)){this.moveTask(o.id, - 1, i.id); return} else{if (this.getGlobalTaskIndex(i.id)){return}}}}}var h = this.getGlobalTaskIndex(i.id), d = this._pull[this._order[h - 1]]; var b = 1; while ((!d || d.id == i.id) && h - b >= 0){d = this._pull[this._order[h - b]]; b++}if (o.id == i.id){return}if (m(i, o) && o.id != i.id){this.moveTask(o.id, 0, 0, i.id)} else{if (i.$level == o.$level - 1 && !gantt.getChildren(i.id).length){this.moveTask(o.id, 0, i.id)} else{if (d && (m(d, o)) && (o.id != d.id)){this.moveTask(o.id, - 1, this.getParent(d.id))}}}}return true}, this)); a.attachEvent("onDragEnd", this.bind(function(){var b = this.getTask(a.config.id); b.$transparent = false; b.$open = a.config.initial_open_state; if (this.callEvent("onBeforeRowDragEnd", [a.config.id, a.config.parent, a.config.index]) === false){this.moveTask(a.config.id, a.config.index, a.config.parent); b.$drop_target = null} else{this.callEvent("onRowDragEnd", [a.config.id, b.$drop_target])}this.refreshData()}, this))}; gantt.getGridColumns = function(){return this.config.columns}; gantt._has_children = function(a){return this.getChildren(a).length > 0}; (function(){var d = new RegExp("<(?:.|\n)*?>", "gm"); var b = new RegExp(" +", "gm"); function f(h){return(h + "").replace(d, " ").replace(b, " ")}var e = new RegExp("'", "gm"); function g(h){return(h + "").replace(e, "&#39;")}gantt._waiAria = {getAttributeString:function(h){var j = [" "]; for (var k in h){var l = g(f(h[k])); j.push(k + "='" + l + "'")}j.push(" "); return j.join(" ")}, getTimelineCellAttr:function(h){return gantt._waiAria.getAttributeString({"aria-label":h})}, _taskCommonAttr:function(h, i){i.setAttribute("aria-label", f(gantt.templates.tooltip_text(h.start_date, h.end_date, h))); if (gantt._is_readonly(h)){i.setAttribute("aria-readonly", true)}if (h.$dataprocessor_class){i.setAttribute("aria-busy", true)}i.setAttribute("aria-selected", (gantt.getState().selected_task == h.id || (gantt.isSelectedTask && gantt.isSelectedTask(h.id)))?"true":"false")}, setTaskBarAttr:function(h, i){this._taskCommonAttr(h, i); if (!gantt._is_readonly(h) && gantt.config.drag_move){if (h.id != gantt.getState().drag_id){i.setAttribute("aria-grabbed", false)} else{i.setAttribute("aria-grabbed", true)}}}, taskRowAttr:function(h, i){this._taskCommonAttr(h, i); if (!gantt._is_readonly(h) && gantt.config.order_branch){i.setAttribute("aria-grabbed", false)}i.setAttribute("role", "row"); i.setAttribute("aria-level", h.$level); if (gantt._has_children(h.id)){i.setAttribute("aria-expanded", h.$open?"true":"false")}}, linkAttr:function(l, m){var j = gantt.config.links; var i = l.type == j.finish_to_start || l.type == j.start_to_start; var h = l.type == j.start_to_start || l.type == j.start_to_finish; var k = gantt.locale.labels.link + " " + gantt.templates.drag_link(l.source, h, l.target, i); m.setAttribute("aria-label", f(k)); if (gantt._is_readonly(l)){m.setAttribute("aria-readonly", true)}}, gridSeparatorAttr:function(h){h.setAttribute("role", "separator")}, lightboxHiddenAttr:function(h){h.setAttribute("aria-hidden", "true")}, lightboxVisibleAttr:function(h){h.setAttribute("aria-hidden", "false")}, lightboxAttr:function(h){h.setAttribute("role", "dialog"); h.setAttribute("aria-hidden", "true"); h.firstChild.setAttribute("role", "heading")}, lightboxButtonAttrString:function(h){return this.getAttributeString({role:"button", "aria-label":gantt.locale.labels[h], tabindex:"0"})}, lightboxHeader:function(i, h){i.setAttribute("aria-label", h)}, lightboxSelectAttrString:function(i){var h = ""; switch (i){case"%Y":h = gantt.locale.labels.years; break; case"%m":h = gantt.locale.labels.months; break; case"%d":h = gantt.locale.labels.days; break; case"%H:%i":h = gantt.locale.labels.hours + gantt.locale.labels.minutes; break; default:break}return gantt._waiAria.getAttributeString({"aria-label":h})}, lightboxDurationInputAttrString:function(h){return this.getAttributeString({"aria-label":gantt.locale.labels.column_duration, "aria-valuemin":"0"})}, gridAttrString:function(){return[" role='treegrid'", gantt.config.multiselect?"aria-multiselectable='true'":"aria-multiselectable='false'", " "].join(" ")}, gridScaleRowAttrString:function(){return"role='row'"}, gridScaleCellAttrString:function(k, j){var i = ""; if (k.name == "add"){i = this.getAttributeString({role:"button", "aria-label":gantt.locale.labels.new_task})} else{var h = {role:"columnheader", "aria-label":j}; if (gantt._sort && gantt._sort.name == k.name){if (gantt._sort.direction == "asc"){h["aria-sort"] = "ascending"} else{h["aria-sort"] = "descending"}}i = this.getAttributeString(h)}return i}, gridDataAttrString:function(){return"role='rowgroup'"}, gridCellAttrString:function(i, h){return this.getAttributeString({role:"gridcell", "aria-label":h})}, gridAddButtonAttrString:function(h){return this.getAttributeString({role:"button", "aria-label":gantt.locale.labels.new_task})}, messageButtonAttrString:function(h){return"tabindex='0' role='button' aria-label='" + h + "'"}, messageInfoAttr:function(h){h.setAttribute("role", "alert")}, messageModalAttr:function(i, h){i.setAttribute("role", "dialog"); if (h){i.setAttribute("aria-labelledby", h)}}, quickInfoAttr:function(h){h.setAttribute("role", "dialog")}, quickInfoHeaderAttrString:function(){return" role='heading' "}, quickInfoHeader:function(i, h){i.setAttribute("aria-label", h)}, quickInfoButtonAttrString:function(h){return gantt._waiAria.getAttributeString({role:"button", "aria-label":h, tabindex:"0"})}, tooltipAttr:function(h){h.setAttribute("role", "tooltip")}, tooltipVisibleAttr:function(h){h.setAttribute("aria-hidden", "false")}, tooltipHiddenAttr:function(h){h.setAttribute("aria-hidden", "true")}}; function a(){return !gantt.config.wai_aria_attributes}for (var c in gantt._waiAria){gantt._waiAria[c] = (function(h){return function(){if (a()){return""}return h.apply(this, arguments)}})(gantt._waiAria[c])}})(); gantt._scale_helpers = {getSum:function(b, e, d){if (d === undefined){d = b.length - 1}if (e === undefined){e = 0}var c = 0; for (var a = e; a <= d; a++){c += b[a]}return c}, setSumWidth:function(f, e, h, g){var d = e.width; if (g === undefined){g = d.length - 1}if (h === undefined){h = 0}var b = g - h + 1; if (h > d.length - 1 || b <= 0 || g > d.length - 1){return}var a = this.getSum(d, h, g); var c = f - a; this.adjustSize(c, d, h, g); this.adjustSize( - c, d, g + 1); e.full_width = this.getSum(d)}, splitSize:function(c, d){var a = []; for (var b = 0; b < d; b++){a[b] = 0}this.adjustSize(c, a); return a}, adjustSize:function(a, d, g, h){if (!g){g = 0}if (h === undefined){h = d.length - 1}var b = h - g + 1; var f = this.getSum(d, g, h); var c = 0; for (var e = g; e <= h; e++){var j = Math.floor(a * (f?(d[e] / f):(1 / b))); f -= d[e]; a -= j; b--; d[e] += j; c += j}d[d.length - 1] += a}, sortScales:function(b){function c(f, e){var g = new Date(1970, 0, 1); return gantt.date.add(g, e, f) - g}b.sort(function(e, d){if (c(e.unit, e.step) < c(d.unit, d.step)){return 1} else{if (c(e.unit, e.step) > c(d.unit, d.step)){return - 1} else{return 0}}}); for (var a = 0; a < b.length; a++){b[a].index = a}}, primaryScale:function(){gantt._init_template("date_scale"); return{unit:gantt.config.scale_unit, step:gantt.config.step, template:gantt.templates.date_scale, date:gantt.config.date_scale, css:gantt.templates.scale_cell_class}}, prepareConfigs:function(g, j, b, f){var h = this.splitSize(f, g.length); var k = b; var e = []; for (var c = g.length - 1; c >= 0; c--){var a = (c == g.length - 1); var d = this.initScaleConfig(g[c]); if (a){this.processIgnores(d)}this.initColSizes(d, j, k, h[c]); this.limitVisibleRange(d); if (a){k = d.full_width}e.unshift(d)}for (var c = 0; c < e.length - 1; c++){this.alineScaleColumns(e[e.length - 1], e[c])}for (var c = 0; c < e.length; c++){this.setPosSettings(e[c])}return e}, setPosSettings:function(b){for (var c = 0, a = b.trace_x.length; c < a; c++){b.left.push((b.width[c - 1] || 0) + (b.left[c - 1] || 0))}}, _ignore_time_config:function(b, e){if (this.config.skip_off_time){var d = true; var a = b; for (var c = 0; c < e.step; c++){if (c){a = gantt.date.add(b, c, e.unit)}d = d && !this.isWorkTime(a, e.unit)}return d}return false}, processIgnores:function(a){a.ignore_x = {}; a.display_count = a.count}, initColSizes:function(c, a, b, f){var e = b; c.height = f; var h = c.display_count === undefined?c.count:c.display_count; if (!h){h = 1}c.col_width = Math.floor(e / h); if (a){if (c.col_width < a){c.col_width = a; e = c.col_width * h}}c.width = []; var g = c.ignore_x || {}; for (var d = 0; d < c.trace_x.length; d++){if (g[c.trace_x[d].valueOf()] || (c.display_count == c.count)){c.width[d] = 0} else{c.width[d] = 1}}this.adjustSize(e - this.getSum(c.width), c.width); c.full_width = this.getSum(c.width)}, initScaleConfig:function(b){var a = gantt.mixin({count:0, col_width:0, full_width:0, height:0, width:[], left:[], trace_x:[], trace_indexes:{}}, b); this.eachColumn(b.unit, b.step, function(c){a.count++; a.trace_x.push(new Date(c)); a.trace_indexes[c.valueOf()] = a.trace_x.length - 1}); return a}, iterateScales:function(l, j, h, i, k){var f = j.trace_x; var g = l.trace_x; var b = h || 0; var c = i || (g.length - 1); var e = 0; for (var d = 1; d < f.length; d++){var a = (l.trace_indexes[ + f[d]]); if (a !== undefined && a <= c){if (k){k.apply(this, [e, d, b, a])}b = a; e = d; continue}}}, alineScaleColumns:function(a, b, d, c){this.iterateScales(a, b, d, c, function(j, e, i, g){var f = this.getSum(a.width, i, g - 1); var h = this.getSum(b.width, j, e - 1); if (h != f){this.setSumWidth(f, b, j, e - 1)}})}, eachColumn:function(d, c, g){var f = new Date(gantt._min_date), b = new Date(gantt._max_date); if (gantt.date[d + "_start"]){f = gantt.date[d + "_start"](f)}var e = new Date(f); if ( + e >= + b){b = gantt.date.add(e, c, d)}while ( + e < + b){g.call(this, new Date(e)); var a = e.getTimezoneOffset(); e = gantt.date.add(e, c, d); e = gantt._correct_dst_change(e, a, c, d); if (gantt.date[d + "_start"]){e = gantt.date[d + "_start"](e)}}}, limitVisibleRange:function(h){var a = h.trace_x; var e = 0, m = h.width.length - 1; var k = 0; if ( + a[0] < + gantt._min_date && e != m){var c = Math.floor(h.width[0] * ((a[1] - gantt._min_date) / (a[1] - a[0]))); k += h.width[0] - c; h.width[0] = c; a[0] = new Date(gantt._min_date)}var l = a.length - 1; var b = a[l]; var j = gantt.date.add(b, h.step, h.unit); if ( + j > + gantt._max_date && l > 0){var c = h.width[l] - Math.floor(h.width[l] * ((j - gantt._max_date) / (j - b))); k += h.width[l] - c; h.width[l] = c}if (k){var g = this.getSum(h.width); var d = 0; for (var f = 0; f < h.width.length; f++){var n = Math.floor(k * (h.width[f] / g)); h.width[f] += n; d += n}this.adjustSize(k - d, h.width)}}}; gantt._tasks_dnd = {drag:null, _events:{before_start:{}, before_finish:{}, after_finish:{}}, _handlers:{}, init:function(){this.clear_drag_state(); var c = gantt.config.drag_mode; this.set_actions(); var a = {before_start:"onBeforeTaskDrag", before_finish:"onBeforeTaskChanged", after_finish:"onAfterTaskDrag"}; for (var b in this._events){for (var d in c){this._events[b][d] = a[b]}}this._handlers[c.move] = this._move; this._handlers[c.resize] = this._resize; this._handlers[c.progress] = this._resize_progress}, set_actions:function(){var a = gantt.$task_data; gantt.event(a, "mousemove", gantt.bind(function(b){this.on_mouse_move(b || event)}, this)); gantt.event(a, "mousedown", gantt.bind(function(b){this.on_mouse_down(b || event)}, this)); gantt.event(a, "mouseup", gantt.bind(function(b){this.on_mouse_up(b || event)}, this))}, clear_drag_state:function(){this.drag = {id:null, mode:null, pos:null, start_x:null, start_y:null, obj:null, left:null}}, _resize:function(e, b, c){var a = gantt.config; var d = this._drag_task_coords(e, c); if (c.left){e.start_date = gantt.dateFromPos(d.start + b); if (!e.start_date){e.start_date = new Date(gantt.getState().min_date)}} else{e.end_date = gantt.dateFromPos(d.end + b); if (!e.end_date){e.end_date = new Date(gantt.getState().max_date)}}if (e.end_date - e.start_date < a.min_duration){if (c.left){e.start_date = gantt.calculateEndDate(e.end_date, - 1)} else{e.end_date = gantt.calculateEndDate(e.start_date, 1)}}gantt._init_task_timing(e)}, _resize_progress:function(d, a, b){var c = this._drag_task_coords(d, b); var e = Math.max(0, b.pos.x - c.start); d.progress = Math.min(1, e / (c.end - c.start))}, _move:function(e, a, c){var d = this._drag_task_coords(e, c); var f = gantt.dateFromPos(d.start + a), b = gantt.dateFromPos(d.end + a); if (!f){e.start_date = new Date(gantt.getState().min_date); e.end_date = gantt.dateFromPos(gantt.posFromDate(e.start_date) + (d.end - d.start))} else{if (!b){e.end_date = new Date(gantt.getState().max_date); e.start_date = gantt.dateFromPos(gantt.posFromDate(e.end_date) - (d.end - d.start))} else{e.start_date = f; e.end_date = b}}}, _drag_task_coords:function(b, c){var d = c.obj_s_x = c.obj_s_x || gantt.posFromDate(b.start_date); var a = c.obj_e_x = c.obj_e_x || gantt.posFromDate(b.end_date); return{start:d, end:a}}, on_mouse_move:function(b){if (this.drag.start_drag){this._start_dnd(b)}var a = this.drag; if (a.mode){if (!gantt._checkTimeout(this, 40)){return}this._update_on_move(b)}}, _update_on_move:function(g){var d = this.drag; if (d.mode){var i = gantt._get_mouse_pos(g); if (d.pos && d.pos.x == i.x){return}d.pos = i; var b = gantt.dateFromPos(i.x); if (!b || isNaN(b.getTime())){return}var a = i.x - d.start_x; var f = gantt.getTask(d.id); if (this._handlers[d.mode]){var c = gantt.mixin({}, f); var h = gantt.mixin({}, f); this._handlers[d.mode].apply(this, [h, a, d]); gantt.mixin(f, h, true); gantt.callEvent("onTaskDrag", [f.id, d.mode, h, c, g]); gantt.mixin(f, h, true); gantt._update_parents(d.id); gantt.refreshTask(d.id)}}}, on_mouse_down:function(d, f){if (d.button == 2){return}var h = gantt.locate(d); var a = null; if (gantt.isTaskExists(h)){a = gantt.getTask(h)}if (gantt._is_readonly(a) || this.drag.mode){return}this.clear_drag_state(); f = f || (d.target || d.srcElement); var c = gantt._getClassName(f); if (!c || !this._get_drag_mode(c)){if (f.parentNode){return this.on_mouse_down(d, f.parentNode)} else{return}}var b = this._get_drag_mode(c); if (!b){if (gantt.checkEvent("onMouseDown") && gantt.callEvent("onMouseDown", [c.split(" ")[0]])){if (f.parentNode){return this.on_mouse_down(d, f.parentNode)}}} else{if (b.mode && b.mode != gantt.config.drag_mode.ignore && gantt.config["drag_" + b.mode]){h = gantt.locate(f); a = gantt.copy(gantt.getTask(h) || {}); if (gantt._is_readonly(a)){this.clear_drag_state(); return false}if (gantt._is_flex_task(a) && b.mode != gantt.config.drag_mode.progress){this.clear_drag_state(); return}b.id = h; var g = gantt._get_mouse_pos(d); b.start_x = g.x; b.start_y = g.y; b.obj = a; this.drag.start_drag = b} else{this.clear_drag_state()}}}, _fix_dnd_scale_time:function(c, d){var f = gantt._tasks.unit, e = gantt._tasks.step; if (!gantt.config.round_dnd_dates){f = "minute"; e = gantt.config.time_step}function b(g){if (!gantt.isWorkTime(g.start_date)){g.start_date = gantt.calculateEndDate(g.start_date, - 1, gantt.config.duration_unit)}}function a(g){if (!gantt.isWorkTime(new Date(g.end_date - 1))){g.end_date = gantt.calculateEndDate(g.end_date, 1, gantt.config.duration_unit)}}if (d.mode == gantt.config.drag_mode.resize){if (d.left){c.start_date = gantt.roundDate({date:c.start_date, unit:f, step:e}); b(c)} else{c.end_date = gantt.roundDate({date:c.end_date, unit:f, step:e}); a(c)}} else{if (d.mode == gantt.config.drag_mode.move){c.start_date = gantt.roundDate({date:c.start_date, unit:f, step:e}); b(c); c.end_date = gantt.calculateEndDate(c.start_date, c.duration, gantt.config.duration_unit)}}}, _fix_working_times:function(a, b){var b = b || {mode:gantt.config.drag_mode.move}; if (gantt.config.work_time && gantt.config.correct_work_time){if (b.mode == gantt.config.drag_mode.resize){if (b.left){a.start_date = gantt.getClosestWorkTime({date:a.start_date, dir:"future"})} else{a.end_date = gantt.getClosestWorkTime({date:a.end_date, dir:"past"})}} else{if (b.mode == gantt.config.drag_mode.move){gantt.correctTaskWorkTime(a)}}}}, on_mouse_up:function(d){var a = this.drag; if (a.mode && a.id){var b = gantt.getTask(a.id); if (gantt.config.work_time && gantt.config.correct_work_time){this._fix_working_times(b, a)}this._fix_dnd_scale_time(b, a); gantt._init_task_timing(b); if (!this._fireEvent("before_finish", a.mode, [a.id, a.mode, gantt.copy(a.obj), d])){a.obj._dhx_changed = false; gantt.mixin(b, a.obj, true); gantt.updateTask(b.id)} else{var c = a.id; gantt._init_task_timing(b); this.clear_drag_state(); gantt.updateTask(b.id); this._fireEvent("after_finish", a.mode, [c, a.mode, d])}}this.clear_drag_state()}, _get_drag_mode:function(c){var d = gantt.config.drag_mode; var a = (c || "").split(" "); var e = a[0]; var b = {mode:null, left:null}; switch (e){case"gantt_task_line":case"gantt_task_content":b.mode = d.move; break; case"gantt_task_drag":b.mode = d.resize; if (a[1] && a[1].indexOf("left", a[1].length - "left".length) !== - 1){b.left = true} else{b.left = false}break; case"gantt_task_progress_drag":b.mode = d.progress; break; case"gantt_link_control":case"gantt_link_point":b.mode = d.ignore; break; default:b = null; break}return b}, _start_dnd:function(c){var b = this.drag = this.drag.start_drag; delete b.start_drag; var a = gantt.config; var d = b.id; if (!a["drag_" + b.mode] || !gantt.callEvent("onBeforeDrag", [d, b.mode, c]) || !this._fireEvent("before_start", b.mode, [d, b.mode, c])){this.clear_drag_state()} else{delete b.start_drag; gantt.callEvent("onTaskDragStart", [])}}, _fireEvent:function(b, d, c){gantt.assert(this._events[b], "Invalid stage:{" + b + "}"); var a = this._events[b][d]; gantt.assert(a, "Unknown after drop mode:{" + d + "}"); gantt.assert(c, "Invalid event arguments"); if (!gantt.checkEvent(a)){return true}return gantt.callEvent(a, c)}}; gantt.roundTaskDates = function(a){var b = gantt._tasks_dnd.drag; if (!b){b = {mode:gantt.config.drag_mode.move}}gantt._tasks_dnd._fix_dnd_scale_time(a, b)}; gantt._render_link = function(d){var c = this.getLink(d); var b = gantt._get_link_renderers(); for (var a = 0; a < b.length; a++){b[a].render_item(c)}}; gantt._get_link_type = function(b, a){var c = null; if (b && a){c = gantt.config.links.start_to_start} else{if (!b && a){c = gantt.config.links.finish_to_start} else{if (!b && !a){c = gantt.config.links.finish_to_finish} else{if (b && !a){c = gantt.config.links.start_to_finish}}}}return c}; gantt.isLinkAllowed = function(f, e, b, a){var d = null; if (typeof (f) == "object"){d = f} else{d = {source:f, target:e, type:this._get_link_type(b, a)}}if (!d){return false}if (!(d.source && d.target && d.type)){return false}if (d.source == d.target){return false}var c = true; if (this.checkEvent("onLinkValidation")){c = this.callEvent("onLinkValidation", [d])}return c}; gantt._render_link_element = function(h){var f = this._path_builder.get_points(h); var c = gantt._drawer; var l = c.get_lines(f); var a = document.createElement("div"); var e = "gantt_task_link"; if (h.color){e += " gantt_link_inline_color"}var g = this.templates.link_class?this.templates.link_class(h):""; if (g){e += " " + g}if (this.config.highlight_critical_path && this.isCriticalLink){if (this.isCriticalLink(h)){e += " gantt_critical_link"}}a.className = e; a.setAttribute(gantt.config.link_attribute, h.id); for (var d = 0; d < l.length; d++){if (d == l.length - 1){l[d].size -= gantt.config.link_arrow_size}var b = c.render_line(l[d], l[d + 1]); if (h.color){b.firstChild.style.backgroundColor = h.color}a.appendChild(b)}var j = l[l.length - 1].direction; var k = gantt._render_link_arrow(f[f.length - 1], j); if (h.color){k.style.borderColor = h.color}a.appendChild(k); gantt._waiAria.linkAttr(h, a); return a}; gantt._render_link_arrow = function(h, g){var a = document.createElement("div"); var d = gantt._drawer; var f = h.y; var c = h.x; var i = gantt.config.link_arrow_size; var b = gantt.config.row_height; var e = "gantt_link_arrow gantt_link_arrow_" + g; switch (g){case d.dirs.right:f -= (i - b) / 2; c -= i; break; case d.dirs.left:f -= (i - b) / 2; break; case d.dirs.up:c -= i; break; case d.dirs.down:f += i * 2; c -= i; break; default:break}a.style.cssText = ["top:" + f + "px", "left:" + c + "px"].join(";"); a.className = e; return a}; gantt._drawer = {current_pos:null, dirs:{left:"left", right:"right", up:"up", down:"down"}, path:[], clear:function(){this.current_pos = null; this.path = []}, point:function(a){this.current_pos = gantt.copy(a)}, get_lines:function(b){this.clear(); this.point(b[0]); for (var a = 1; a < b.length; a++){this.line_to(b[a])}return this.get_path()}, line_to:function(d){var b = gantt.copy(d); var c = this.current_pos; var a = this._get_line(c, b); this.path.push(a); this.current_pos = b}, get_path:function(){return this.path}, get_wrapper_sizes:function(b){var d, c = gantt.config.link_wrapper_width, a = gantt.config.link_line_width, e = b.y + (gantt.config.row_height - c) / 2; switch (b.direction){case this.dirs.left:d = {top:e, height:c, lineHeight:c, left:b.x - b.size - c / 2, width:b.size + c}; break; case this.dirs.right:d = {top:e, lineHeight:c, height:c, left:b.x - c / 2, width:b.size + c}; break; case this.dirs.up:d = {top:e - b.size, lineHeight:b.size + c, height:b.size + c, left:b.x - c / 2, width:c}; break; case this.dirs.down:d = {top:e, lineHeight:b.size + c, height:b.size + c, left:b.x - c / 2, width:c}; break; default:break}return d}, get_line_sizes:function(b){var e, a = gantt.config.link_line_width, d = gantt.config.link_wrapper_width, c = b.size + a; switch (b.direction){case this.dirs.left:case this.dirs.right:e = {height:a, width:c, marginTop:(d - a) / 2, marginLeft:(d - a) / 2}; break; case this.dirs.up:case this.dirs.down:e = {height:c, width:a, marginTop:(d - a) / 2, marginLeft:(d - a) / 2}; break; default:break}return e}, render_line:function(b){var e = this.get_wrapper_sizes(b); var d = document.createElement("div"); d.style.cssText = ["top:" + e.top + "px", "left:" + e.left + "px", "height:" + e.height + "px", "width:" + e.width + "px"].join(";"); d.className = "gantt_line_wrapper"; var c = this.get_line_sizes(b); var a = document.createElement("div"); a.style.cssText = ["height:" + c.height + "px", "width:" + c.width + "px", "margin-top:" + c.marginTop + "px", "margin-left:" + c.marginLeft + "px"].join(";"); a.className = "gantt_link_line_" + b.direction; d.appendChild(a); return d}, _get_line:function(d, c){var b = this.get_direction(d, c); var a = {x:d.x, y:d.y, direction:this.get_direction(d, c)}; if (b == this.dirs.left || b == this.dirs.right){a.size = Math.abs(d.x - c.x)} else{a.size = Math.abs(d.y - c.y)}return a}, get_direction:function(c, b){var a = 0; if (b.x < c.x){a = this.dirs.left} else{if (b.x > c.x){a = this.dirs.right} else{if (b.y > c.y){a = this.dirs.down} else{a = this.dirs.up}}}return a}}; gantt._y_from_ind = function(a){return(a) * gantt.config.row_height}; gantt._path_builder = {path:[], clear:function(){this.path = []}, current:function(){return this.path[this.path.length - 1]}, point:function(a){if (!a){return this.current()}this.path.push(gantt.copy(a)); return a}, point_to:function(d, c, a){if (!a){a = gantt.copy(this.point())} else{a = {x:a.x, y:a.y}}var b = gantt._drawer.dirs; switch (d){case (b.left):a.x -= c; break; case (b.right):a.x += c; break; case (b.up):a.y -= c; break; case (b.down):a.y += c; break; default:break}return this.point(a)}, get_points:function(d){var g = this.get_endpoint(d); var h = gantt.config; var f = g.e_y - g.y; var i = g.e_x - g.x; var b = gantt._drawer.dirs; this.clear(); this.point({x:g.x, y:g.y}); var e = 2 * h.link_arrow_size; var c = (g.e_x > g.x); if (d.type == gantt.config.links.start_to_start){this.point_to(b.left, e); if (c){this.point_to(b.down, f); this.point_to(b.right, i)} else{this.point_to(b.right, i); this.point_to(b.down, f)}this.point_to(b.right, e)} else{if (d.type == gantt.config.links.finish_to_start){c = (g.e_x > (g.x + 2 * e)); this.point_to(b.right, e); if (c){i -= e; this.point_to(b.down, f); this.point_to(b.right, i)} else{i -= 2 * e; var a = f > 0?1: - 1; this.point_to(b.down, a * (h.row_height / 2)); this.point_to(b.right, i); this.point_to(b.down, a * (Math.abs(f) - (h.row_height / 2))); this.point_to(b.right, e)}} else{if (d.type == gantt.config.links.finish_to_finish){this.point_to(b.right, e); if (c){this.point_to(b.right, i); this.point_to(b.down, f)} else{this.point_to(b.down, f); this.point_to(b.right, i)}this.point_to(b.left, e)} else{if (d.type == gantt.config.links.start_to_finish){c = (g.e_x > (g.x - 2 * e)); this.point_to(b.left, e); if (!c){i += e; this.point_to(b.down, f); this.point_to(b.right, i)} else{i += 2 * e; var a = f > 0?1: - 1; this.point_to(b.down, a * (h.row_height / 2)); this.point_to(b.right, i); this.point_to(b.down, a * (Math.abs(f) - (h.row_height / 2))); this.point_to(b.left, e)}}}}}return this.path}, get_endpoint:function(d){var c = gantt.config.links; var b = false, a = false; if (d.type == c.start_to_start){b = a = true} else{if (d.type == c.finish_to_finish){b = a = false} else{if (d.type == c.finish_to_start){b = false; a = true} else{if (d.type == c.start_to_finish){b = true; a = false} else{gantt.assert(false, "Invalid link type")}}}}var f = gantt._get_task_visible_pos(gantt._pull[d.source], b); var e = gantt._get_task_visible_pos(gantt._pull[d.target], a); return{x:f.x, e_x:e.x, y:f.y, e_y:e.y}}}; gantt._init_links_dnd = function(){var a = new gantt._DnD(this.$task_bars, {sensitivity:0, updates_per_second:60}), k = "task_left", c = "task_right", l = "gantt_link_point", o = "gantt_link_control"; a.attachEvent("onBeforeDragStart", gantt.bind(function(v, u){var s = (u.target || u.srcElement); f(); if (gantt.getState().drag_id){return false}if (gantt._locate_css(s, l)){if (gantt._locate_css(s, k)){gantt._link_source_task_start = true}var q = gantt._link_source_task = this.locate(u); var r = gantt.getTask(q); if (gantt._is_readonly(r)){f(); return false}var p = 0; if (gantt._get_safe_type(r.type) == gantt.config.types.milestone){p = (gantt._get_visible_milestone_width() - gantt._get_milestone_width()) / 2}this._dir_start = g(r, !!gantt._link_source_task_start, p); return true} else{return false}}, this)); a.attachEvent("onAfterDragStart", gantt.bind(function(q, p){if (this.config.touch){this._show_link_points = true; this.refreshData()}h(a.config.marker)}, this)); function g(r, p, q){var s = gantt._get_task_pos(r, !!p); s.y += gantt._get_task_height() / 2; q = q || 0; s.x += (p? - 1:1) * q; return s}a.attachEvent("onDragMove", gantt.bind(function(r, w){var B = a.config; var A = a.getPosition(w); i(B.marker, A); var x = gantt._is_link_drop_area(w); var D = gantt._link_target_task; var u = gantt._link_landing; var s = gantt._link_target_task_start; var z = gantt.locate(w), y = true; if (x){y = !gantt._locate_css(w, c); x = !!z}gantt._link_target_task = z; gantt._link_landing = x; gantt._link_target_task_start = y; if (x){var C = gantt.getTask(z); var q = gantt._locate_css(w, o); var p = 0; if (q){p = Math.floor(q.offsetWidth / 2)}this._dir_end = g(C, !!gantt._link_target_task_start, p)} else{this._dir_end = gantt._get_mouse_pos(w)}var v = !(u == x && D == z && s == y); if (v){if (D){gantt.refreshTask(D, false)}if (z){gantt.refreshTask(z, false)}}if (v){h(B.marker)}b(this._dir_start.x, this._dir_start.y, this._dir_end.x, this._dir_end.y); return true}, this)); a.attachEvent("onDragEnd", gantt.bind(function(){var q = j(); if (q.from && q.to && q.from != q.to){var p = gantt._get_link_type(q.from_start, q.to_start); var r = {source:q.from, target:q.to, type:p}; if (r.type && gantt.isLinkAllowed(r)){gantt.addLink(r)}}f(); if (this.config.touch){this._show_link_points = false; this.refreshData()} else{if (q.from){gantt.refreshTask(q.from, false)}if (q.to){gantt.refreshTask(q.to, false)}}m()}, this)); function h(p){var t = j(); var r = ["gantt_link_tooltip"]; if (t.from && t.to){if (gantt.isLinkAllowed(t.from, t.to, t.from_start, t.to_start)){r.push("gantt_allowed_link")} else{r.push("gantt_invalid_link")}}var s = gantt.templates.drag_link_class(t.from, t.from_start, t.to, t.to_start); if (s){r.push(s)}var q = "<div class='" + s + "'>" + gantt.templates.drag_link(t.from, t.from_start, t.to, t.to_start) + "</div>"; p.innerHTML = q}function i(p, q){p.style.left = q.x + 5 + "px"; p.style.top = q.y + 5 + "px"}function j(){return{from:gantt._link_source_task, to:gantt._link_target_task, from_start:gantt._link_source_task_start, to_start:gantt._link_target_task_start}}function f(){gantt._link_source_task = gantt._link_source_task_start = gantt._link_target_task = null; gantt._link_target_task_start = true}function b(D, A, z, v){var q = d(); var C = j(); var t = ["gantt_link_direction"]; if (gantt.templates.link_direction_class){t.push(gantt.templates.link_direction_class(C.from, C.from_start, C.to, C.to_start))}var y = Math.sqrt((Math.pow(z - D, 2)) + (Math.pow(v - A, 2))); y = Math.max(0, y - 3); if (!y){return}q.className = t.join(" "); var x = (v - A) / (z - D), s = Math.atan(x); if (n(D, z, A, v) == 2){s += Math.PI} else{if (n(D, z, A, v) == 3){s -= Math.PI}}var w = Math.sin(s), F = Math.cos(s), B = Math.round(A), r = Math.round(D); var p = ["-webkit-transform: rotate(" + s + "rad)", "-moz-transform: rotate(" + s + "rad)", "-ms-transform: rotate(" + s + "rad)", "-o-transform: rotate(" + s + "rad)", "transform: rotate(" + s + "rad)", "width:" + Math.round(y) + "px"]; if (window.navigator.userAgent.indexOf("MSIE 8.0") != - 1){p.push('-ms-filter: "' + e(w, F) + '"'); var E = Math.abs(Math.round(D - z)), u = Math.abs(Math.round(v - A)); switch (n(D, z, A, v)){case 1:B -= u; break; case 2:r -= E; B -= u; break; case 3:r -= E; break; default:break}}p.push("top:" + B + "px"); p.push("left:" + r + "px"); q.style.cssText = p.join(";")}function e(p, q){return"progid:DXImageTransform.Microsoft.Matrix(M11 = " + q + ",M12 = -" + p + ",M21 = " + p + ",M22 = " + q + ",SizingMethod = 'auto expand')"}function n(s, q, r, p){if (q >= s){if (p <= r){return 1} else{return 4}} else{if (p <= r){return 2} else{return 3}}}function d(){if (!a._direction){a._direction = document.createElement("div"); gantt.$task_links.appendChild(a._direction)}return a._direction}function m(){if (a._direction){if (a._direction.parentNode){a._direction.parentNode.removeChild(a._direction)}a._direction = null}}gantt._is_link_drop_area = function(p){return !!gantt._locate_css(p, o)}}; gantt._get_link_state = function(){return{link_landing_area:this._link_landing, link_target_id:this._link_target_task, link_target_start:this._link_target_task_start, link_source_id:this._link_source_task, link_source_start:this._link_source_task_start}}; gantt._task_renderer = function(d, c, b, a){if (!this._task_area_pulls){this._task_area_pulls = {}}if (!this._task_area_renderers){this._task_area_renderers = {}}if (this._task_area_renderers[d]){return this._task_area_renderers[d]}if (!c){this.assert(false, "Invalid renderer call")}if (b){b.setAttribute(this.config.layer_attribute, true)}this._task_area_renderers[d] = {render_item:function(f, e){e = e || b; if (a){if (!a(f)){this.remove_item(f.id); return}}var g = c.call(gantt, f); this.append(f, g, e)}, clear:function(e){this.rendered = gantt._task_area_pulls[d] = {}; this.clear_container(e)}, clear_container:function(e){e = e || b; if (e){e.innerHTML = ""}}, render_items:function(g, f){f = f || b; var e = document.createDocumentFragment(); this.clear(f); for (var h = 0, j = g.length; h < j; h++){this.render_item(g[h], e)}f.appendChild(e)}, append:function(g, f, e){if (!f){if (this.rendered[g.id]){this.remove_item(g.id)}return}if (this.rendered[g.id] && this.rendered[g.id].parentNode){this.replace_item(g.id, f)} else{e.appendChild(f)}this.rendered[g.id] = f}, replace_item:function(e, f){var g = this.rendered[e]; if (g && g.parentNode){g.parentNode.replaceChild(f, g)}this.rendered[e] = f}, remove_item:function(e){this.hide(e); delete this.rendered[e]}, hide:function(e){var f = this.rendered[e]; if (f && f.parentNode){f.parentNode.removeChild(f)}}, restore:function(e){var f = this.rendered[e.id]; if (f){if (!f.parentNode){this.append(e, f, b)}} else{this.render_item(e, b)}}, change_id:function(f, e){this.rendered[e] = this.rendered[f]; delete this.rendered[f]}, rendered:this._task_area_pulls[d], node:b, unload:function(){this.clear(); delete gantt._task_area_renderers[d]; delete gantt._task_area_pulls[d]}}; return this._task_area_renderers[d]}; gantt._clear_renderers = function(){for (var a in this._task_area_renderers){this._task_renderer(a).unload()}}; gantt._is_layer = function(a){return(a && a.hasAttribute && a.hasAttribute(this.config.layer_attribute))}; gantt._show_link_points = false; gantt._init_tasks = function(){this._tasks = {col_width:this.config.columnWidth, width:[], full_width:0, trace_x:[], rendered:{}}; this._click.gantt_task_link = this.bind(function(f, d){var g = this.locate(f, gantt.config.link_attribute); if (g){this.callEvent("onLinkClick", [g, f])}}, this); this._click.gantt_scale_cell = this.bind(function(i, d){var j = gantt._get_mouse_pos(i); var g = gantt.dateFromPos(j.x); var h = Math.floor(gantt._day_index_by_date(g)); var f = gantt._tasks.trace_x[h]; gantt.callEvent("onScaleClick", [i, f])}, this); this._dbl_click.gantt_task_link = this.bind(function(f, g, d){var g = this.locate(f, gantt.config.link_attribute); this._delete_link_handler(g, f)}, this); this._dbl_click.gantt_link_point = this.bind(function(h, i, d){var i = this.locate(h), f = this.getTask(i); var g = null; if (d.parentNode && gantt._getClassName(d.parentNode)){if (gantt._getClassName(d.parentNode).indexOf("_left") > - 1){g = f.$target[0]} else{g = f.$source[0]}}if (g){this._delete_link_handler(g, h)}return false}, this); this._tasks_dnd.init(); this._init_links_dnd(); this._link_layers.clear(); var b = this.addLinkLayer({renderer:this._render_link_element, container:this.$task_links, filter:gantt._create_filter([gantt._filter_link, gantt._is_chart_visible].concat(this._get_link_filters()))}); this._linkRenderer = this._link_layers.getRenderer(b); this._task_layers.clear(); var c = this.addTaskLayer({renderer:this._render_task_element, container:this.$task_bars, filter:gantt._create_filter([gantt._filter_task, gantt._is_chart_visible].concat(this._get_task_filters()))}); this._taskRenderer = this._task_layers.getRenderer(c); this.addTaskLayer({renderer:this._render_grid_item, container:this.$grid_data, filter:gantt._create_filter([gantt._filter_task, gantt._is_grid_visible].concat(this._get_task_filters()))}); this.addTaskLayer({renderer:this._render_bg_line, container:this.$task_bg, filter:gantt._create_filter([gantt._filter_task, gantt._is_chart_visible, gantt._is_std_background].concat(this._get_task_filters()))}); function a(f, h, d, g){for (var e = 0; e < f.length; e++){f[e].change_id(h, d); f[e].render_item(g)}}if (this._onTaskIdChange){this.detachEvent(this._onTaskIdChange)}this._onTaskIdChange = this.attachEvent("onTaskIdChange", function(f, d){var e = this._get_task_renderers(); a(e, f, d, this.getTask(d))}); if (this._onLinkIdChange){this.detachEvent(this._onLinkIdChange)}this._onLinkIdChange = this.attachEvent("onLinkIdChange", function(f, d){var e = this._get_link_renderers(); a(e, f, d, this.getLink(d))})}; gantt._get_task_filters = function(){return[]}; gantt._get_link_filters = function(){return[]}; gantt._is_chart_visible = function(){return !!this.config.show_chart}; gantt._filter_task = function(d, b){var c = null, a = null; if (this.config.start_date && this.config.end_date){c = this.config.start_date.valueOf(); a = this.config.end_date.valueOf(); if ( + b.start_date > a || + b.end_date < + c){return false}}return true}; gantt._filter_link = function(b, a){if (!this.config.show_links){return false}if (!(gantt.isTaskVisible(a.source) && gantt.isTaskVisible(a.target)) || gantt._isAllowedUnscheduledTask(gantt.getTask(a.source)) || gantt._isAllowedUnscheduledTask(gantt.getTask(a.target))){return false}return this.callEvent("onBeforeLinkDisplay", [b, a])}; gantt._is_std_background = function(){return !this.config.static_background}; gantt._delete_link_handler = function(f, c){if (f && this.callEvent("onLinkDblClick", [f, c])){var b = gantt.getLink(f); if (gantt._is_readonly(b)){return}var d = ""; var a = gantt.locale.labels.link + " " + this.templates.link_description(this.getLink(f)) + " " + gantt.locale.labels.confirm_link_deleting; window.setTimeout(function(){gantt._dhtmlx_confirm(a, d, function(){gantt.deleteLink(f)})}, (gantt.config.touch?300:1))}}; gantt.getTaskNode = function(a){return this._taskRenderer.rendered[a]}; gantt.getLinkNode = function(a){return this._linkRenderer.rendered[a]}; gantt._get_tasks_data = function(){var d = []; var a = this._get_data_range(); for (var b = 0; b < a.length; b++){var c = this._pull[a[b]]; c.$index = b; this.resetProjectDates(c); d.push(c)}return d}; gantt._get_data_range = function(){return this._order}; gantt._get_links_data = function(){return this._links.slice()}; gantt._render_data = function(){this.callEvent("onBeforeDataRender", []); if (!this._order_synced){this._sync_order()} else{this._order_synced = false}var d = this._get_tasks_data(); var b = this._get_task_renderers(); for (var c = 0; c < b.length; c++){b[c].clear()}var a = gantt._get_links_data(); b = this._get_link_renderers(); for (var c = 0; c < b.length; c++){b[c].clear()}this._update_layout_sizes(); this._scroll_resize(); var b = this._get_task_renderers(); for (var c = 0; c < b.length; c++){b[c].render_items(d)}var a = gantt._get_links_data(); b = this._get_link_renderers(); for (var c = 0; c < b.length; c++){b[c].render_items(a)}this.callEvent("onDataRender", [])}; gantt._update_layout_sizes = function(){var c = this._tasks; c.bar_height = this._get_task_height(); var b = Math.max(gantt._y - (gantt._scroll_sizes().x?gantt._scroll_sizes().scroll_size + 1:0) - 1, 0); this.$task_data.style.height = Math.max(b - this.config.scale_height, 0) + "px"; if (gantt.config.smart_rendering){this.$task_bg.style.height = gantt.config.row_height * this.getVisibleTaskCount() + "px"} else{this.$task_bg.style.height = ""}this.$task_bg.style.backgroundImage = ""; var h = this.$task_data.childNodes; for (var e = 0, a = h.length; e < a; e++){var g = h[e]; if (this._is_layer(g) && g.style){g.style.width = c.full_width + "px"}}if (this._is_grid_visible()){var d = this.getGridColumns(); var f = 0; for (var e = 0; e < d.length; e++){f += d[e].width}this.$grid_data.style.width = Math.max(f - 1, 0) + "px"}}; gantt._scale_range_unit = function(){var a = this.config.scale_unit; if (this.config.scale_offset_minimal){var b = this._get_scales(); a = b[b.length - 1].unit}return a}; gantt._init_tasks_range = function(){var c = this._scale_range_unit(); if (this.config.start_date && this.config.end_date){this._min_date = this.date[c + "_start"](new Date(this.config.start_date)); var a = new Date(this.config.end_date); var d = this.date[c + "_start"](new Date(a)); if ( + a != + d){a = this.date.add(d, 1, c)} else{a = d}this._max_date = a; return}this._get_tasks_data(); var b = this.getSubtaskDates(); this._min_date = b.start_date; this._max_date = b.end_date; if (!(this._max_date && this._max_date)){this._min_date = new Date(); this._max_date = new Date(this._min_date)}this._min_date = this.date[c + "_start"](this._min_date); this._min_date = this.calculateEndDate(this.date[c + "_start"](this._min_date), - 1, c); this._max_date = this.date[c + "_start"](this._max_date); this._max_date = this.calculateEndDate(this._max_date, 2, c)}; gantt._prepare_scale_html = function(s, o, m){var e = []; var r = null, n = null, h = null; if (s.template || s.date){n = s.template || this.date.date_to_str(s.date)}var g = 0, b = s.count - 1; if (this.config.smart_scales && (!isNaN(o) && !isNaN(m))){g = this._findBinary(s.left, o); b = this._findBinary(s.left, m) + 1}h = s.css || function(){}; if (!s.css && this.config.inherit_scale_class){h = gantt.templates.scale_cell_class}for (var p = g; p < b; p++){if (!s.trace_x[p]){break}r = new Date(s.trace_x[p]); var l = n.call(this, r), k = s.width[p], j = s.height - (this.config.smart_scales?(s.index?1:0):0), f = s.left[p], q = "", t = "", c = ""; if (k){var u = this.config.smart_scales?("position:absolute;left:" + f + "px"):""; q = "width:" + (k) + "px;height:" + j + "px;" + u; c = "gantt_scale_cell" + (p == s.count - 1?" gantt_last_cell":""); t = h.call(this, r); if (t){c += " " + t}var d = gantt._waiAria.getTimelineCellAttr(l); var a = "<div class='" + c + "'" + d + " style='" + q + "'>" + l + "</div>"; e.push(a)} else{}}return e.join("")}; gantt._get_scales = function(){var a = this._scale_helpers; var b = [a.primaryScale()].concat(this.config.subscales); a.sortScales(b); return b}; gantt._get_scale_chunk_html = function(h, f, g){var e = []; var d = this.templates.scale_row_class; for (var c = 0; c < h.length; c++){var a = "gantt_scale_line"; var b = d(h[c]); if (b){a += " " + b}e.push('<div class="' + a + '" style="height:' + (h[c].height) + "px;position:relative;line-height:" + (h[c].height) + 'px">' + this._prepare_scale_html(h[c], f, g) + "</div>")}return e.join("")}; gantt._refreshScales = function(){if (!this.config.smart_scales){return}var b = this._scales; var a = gantt.getScrollState().x; this.$task_scale.innerHTML = this._get_scale_chunk_html(b, a, a + this._x - this._get_grid_width())}; gantt.attachEvent("onGanttScroll", function(d, a, c, b){if (gantt.config.smart_scales){if (d != c){gantt._refreshScales()}}}); gantt.attachEvent("onGanttRender", function(){if (gantt.config.smart_scales){gantt._refreshScales()}}); gantt._render_tasks_scales = function(){this._init_tasks_range(); this._scroll_resize(); this._set_sizes(); var i = "", e = 0, a = 0, j = 0; if (this._is_chart_visible()){var c = this._scale_helpers; var k = this._get_scales(); j = (this.config.scale_height - 1); var d = this._get_resize_options(); var b = d.x?Math.max(this.config.autosize_min_width, 0):(Math.max(this._x - this._get_grid_width() - 2, 0)); var g = c.prepareConfigs(k, this.config.min_column_width, b, j); var h = this._tasks = g[g.length - 1]; this._scales = g; i = this._get_scale_chunk_html(g, 0, this._x - this._get_grid_width()); var f = this._scroll_sizes(); e = h.full_width + (this._scroll_sizes().y?f.scroll_size:0) + "px"; a = h.full_width + "px"; j += "px"}if (this._is_chart_visible()){this.$task.style.display = ""} else{this.$task.style.display = "none"}this.$task_scale.style.height = j; this.$task_data.style.width = this.$task_scale.style.width = e; this.$task_scale.innerHTML = i}; gantt._render_bg_line = function(i){var f = gantt._tasks; var e = f.count; var l = document.createElement("div"); if (gantt.config.show_task_cells){for (var c = 0; c < e; c++){var a = f.width[c], b = ""; if (a > 0){var h = document.createElement("div"); h.style.width = (a) + "px"; b = "gantt_task_cell" + (c == e - 1?" gantt_last_cell":""); g = this.templates.task_cell_class(i, f.trace_x[c]); if (g){b += " " + g}h.className = b; l.appendChild(h)}}}var k = i.$index % 2 !== 0; var g = gantt.templates.task_row_class(i.start_date, i.end_date, i); var d = "gantt_task_row" + (k?" odd":"") + (g?" " + g:""); if (this.getState().selected_task == i.id){d += " gantt_selected"}l.className = d; if (gantt.config.smart_rendering){l.style.position = "absolute"; l.style.top = this.getTaskTop(i.id) + "px"; l.style.width = "100%"}l.style.height = (gantt.config.row_height) + "px"; l.setAttribute(this.config.task_attribute, i.id); return l}; gantt._adjust_scales = function(){if (this.config.fit_tasks){var b = + this._min_date, a = + this._max_date; this._init_tasks_range(); if ( + this._min_date != b || + this._max_date != a){this.render(); this.callEvent("onScaleAdjusted", []); return true}}return false}; gantt.refreshTask = function(d, a){var e = this._get_task_renderers(); var b = this.getTask(d); if (b && this.isTaskVisible(d)){for (var c = 0; c < e.length; c++){e[c].render_item(b)}if (a !== undefined && !a){return}for (var c = 0; c < b.$source.length; c++){gantt.refreshLink(b.$source[c])}for (var c = 0; c < b.$target.length; c++){gantt.refreshLink(b.$target[c])}} else{}}; gantt.refreshLink = function(c){if (this.isLinkExists(c)){this._render_link(c)} else{var b = this._get_link_renderers(); for (var a = 0; a < b.length; a++){b[a].remove_item(c)}}}; gantt._combine_item_class = function(c, i, f){var d = [c]; if (i){d.push(i)}var a = gantt.getState(); var b = this.getTask(f); if (this._get_safe_type(b.type) == this.config.types.milestone){d.push("gantt_milestone")}if (this._get_safe_type(b.type) == this.config.types.project){d.push("gantt_project")}if (this._is_flex_task(b)){d.push("gantt_dependent_task")}if (this.config.select_task && f == a.selected_task){d.push("gantt_selected")}if (f == a.drag_id){d.push("gantt_drag_" + a.drag_mode); if (a.touch_drag){d.push("gantt_touch_" + a.drag_mode)}}var j = gantt._get_link_state(); if (j.link_source_id == f){d.push("gantt_link_source")}if (j.link_target_id == f){d.push("gantt_link_target")}if (this.config.highlight_critical_path && this.isCriticalTask){if (this.isCriticalTask(b)){d.push("gantt_critical_task")}}if (j.link_landing_area && (j.link_target_id && j.link_source_id) && (j.link_target_id != j.link_source_id)){var k = j.link_source_id; var h = j.link_source_start; var e = j.link_target_start; var g = gantt.isLinkAllowed(k, f, h, e); var l = ""; if (g){if (e){l = "link_start_allow"} else{l = "link_finish_allow"}} else{if (e){l = "link_start_deny"} else{l = "link_finish_deny"}}d.push(l)}return d.join(" ")}; gantt._render_pair = function(c, b, a, d){var e = gantt.getState(); if ( + a.end_date <= + e.max_date){c.appendChild(d(b + " task_right"))}if ( + a.start_date >= + e.min_date){c.appendChild(d(b + " task_left"))}}; gantt._get_task_height = function(){var a = this.config.task_height; if (a == "full"){a = this.config.row_height - 5}a = Math.min(a, this.config.row_height); return Math.max(a, 0)}; gantt._get_milestone_width = function(){return this._get_task_height()}; gantt._get_visible_milestone_width = function(){var a = gantt._get_task_height(); return Math.sqrt(2 * a * a)}; gantt.getTaskPosition = function(e, c, g){var b = this.posFromDate(c || e.start_date); var d = this.posFromDate(g || e.end_date); d = Math.max(b, d); var f = this.getTaskTop(e.id); var a = gantt._get_task_height(); return{left:b, top:f, height:a, width:Math.max((d - b), 0)}}; gantt._get_task_width = function(b, c, a){return Math.round(this._get_task_pos(b, false).x - this._get_task_pos(b, true).x)}; gantt._is_readonly = function(a){if (a && a[this.config.editable_property]){return false} else{return(a && a[this.config.readonly_property]) || this.config.readonly}}; gantt._task_default_render = function(c){if (this._isAllowedUnscheduledTask(c)){return}var i = this._get_task_pos(c); var e = this.config; var k = this._get_task_height(); var j = Math.floor((this.config.row_height - k) / 2); if (this._get_safe_type(c.type) == e.types.milestone && e.link_line_width > 1){j += 1}var a = document.createElement("div"); var b = gantt._get_task_width(c); var h = this._get_safe_type(c.type); a.setAttribute(this.config.task_attribute, c.id); if (e.show_progress && h != this.config.types.milestone){this._render_task_progress(c, a, b)}var f = gantt._render_task_content(c, b); if (c.textColor){f.style.color = c.textColor}a.appendChild(f); var d = this._combine_item_class("gantt_task_line", this.templates.task_class(c.start_date, c.end_date, c), c.id); if (c.color || c.progressColor || c.textColor){d += " gantt_task_inline_color"}a.className = d; var l = ["left:" + i.x + "px", "top:" + (j + i.y) + "px", "height:" + k + "px", "line-height:" + k + "px", "width:" + b + "px"]; if (c.color){l.push("background-color:" + c.color)}if (c.textColor){l.push("color:" + c.textColor)}a.style.cssText = l.join(";"); var g = this._render_leftside_content(c); if (g){a.appendChild(g)}g = this._render_rightside_content(c); if (g){a.appendChild(g)}gantt._waiAria.setTaskBarAttr(c, a); if (!this._is_readonly(c)){if (e.drag_resize && !this._is_flex_task(c) && h != this.config.types.milestone){gantt._render_pair(a, "gantt_task_drag", c, function(m){var n = document.createElement("div"); n.className = m; return n})}if (e.drag_links && this.config.show_links){gantt._render_pair(a, "gantt_link_control", c, function(o){var n = document.createElement("div"); n.className = o; n.style.cssText = ["height:" + k + "px", "line-height:" + k + "px"].join(";"); var m = document.createElement("div"); m.className = "gantt_link_point"; m.style.display = gantt._show_link_points?"block":""; n.appendChild(m); return n})}}return a}; gantt._render_task_element = function(a){var b = this.config.type_renderers; var d = b[this._get_safe_type(a.type)], c = this._task_default_render; if (!d){d = c}return d.call(this, a, this.bind(c, this))}; gantt._render_side_content = function(b, c, a){if (!c){return null}var e = c(b.start_date, b.end_date, b); if (!e){return null}var d = document.createElement("div"); d.className = "gantt_side_content " + a; d.innerHTML = e; return d}; gantt._render_leftside_content = function(a){var b = "gantt_left " + gantt._get_link_crossing_css(true, a); return gantt._render_side_content(a, this.templates.leftside_text, b)}; gantt._render_rightside_content = function(a){var b = "gantt_right " + gantt._get_link_crossing_css(false, a); return gantt._render_side_content(a, this.templates.rightside_text, b)}; gantt._get_conditions = function(a){if (a){return{$source:[gantt.config.links.start_to_start], $target:[gantt.config.links.start_to_start, gantt.config.links.finish_to_start]}} else{return{$source:[gantt.config.links.finish_to_start, gantt.config.links.finish_to_finish], $target:[gantt.config.links.finish_to_finish]}}}; gantt._get_link_crossing_css = function(g, b){var d = gantt._get_conditions(g); for (var c in d){var a = b[c]; for (var f = 0; f < a.length; f++){var e = gantt.getLink(a[f]); for (var h = 0; h < d[c].length; h++){if (e.type == d[c][h]){return"gantt_link_crossing"}}}}return""}; gantt._render_task_content = function(a, b){var c = document.createElement("div"); if (this._get_safe_type(a.type) != this.config.types.milestone){c.innerHTML = this.templates.task_text(a.start_date, a.end_date, a)}c.className = "gantt_task_content"; return c}; gantt._render_task_progress = function(b, c, f){var a = b.progress * 1 || 0; f = Math.max(f - 2, 0); var g = document.createElement("div"); var e = Math.round(f * a); e = Math.min(f, e); if (b.progressColor){g.style.backgroundColor = b.progressColor; g.style.opacity = 1}g.style.width = e + "px"; g.className = "gantt_task_progress"; g.innerHTML = this.templates.progress_text(b.start_date, b.end_date, b); c.appendChild(g); if (this.config.drag_progress && !gantt._is_readonly(b)){var d = document.createElement("div"); d.style.left = e + "px"; d.className = "gantt_task_progress_drag"; g.appendChild(d); c.appendChild(d)}}; gantt._get_line = function(b){var a = {second:1, minute:60, hour:60 * 60, day:60 * 60 * 24, week:60 * 60 * 24 * 7, month:60 * 60 * 24 * 30, quarter:60 * 60 * 24 * 30 * 3, year:60 * 60 * 24 * 365}; return a[b] || a.hour}; gantt.dateFromPos = function(a){var g = this._tasks; if (a < 0 || a > g.full_width || !g.full_width){return null}var e = this._findBinary(this._tasks.left, a); var h = this._tasks.left[e]; var f = g.width[e] || g.col_width; var c = 0; if (f){c = (a - h) / f}var d = 0; if (c){d = gantt._get_coll_duration(g, g.trace_x[e])}var b = new Date(g.trace_x[e].valueOf() + Math.round(c * d)); return b}; gantt.posFromDate = function(b){if (!this._is_chart_visible()){return 0}var c = gantt._day_index_by_date(b); this.assert(c >= 0, "Invalid day index"); var a = Math.floor(c); var e = c % 1; var d = gantt._tasks.left[Math.min(a, gantt._tasks.width.length - 1)]; if (a == gantt._tasks.width.length){d += gantt._tasks.width[gantt._tasks.width.length - 1]}if (e){if (a < gantt._tasks.width.length){d += gantt._tasks.width[a] * (e % 1)} else{d += 1}}return d}; gantt._day_index_by_date = function(b){var f = new Date(b).valueOf(); var e = gantt._tasks.trace_x, d = gantt._tasks.ignore_x; if (f <= this._min_date){return 0}if (f >= this._max_date){return e.length}var c = gantt._findBinary(e, f); var a = + gantt._tasks.trace_x[c]; while (d[a]){a = gantt._tasks.trace_x[++c]}if (!a){return 0}return c + ((b - e[c]) / gantt._get_coll_duration(gantt._tasks, e[c]))}; gantt._findBinary = function(g, f){var a = 0, e = g.length - 1, b, d, c; while (a <= e){b = Math.floor((a + e) / 2); d = + g[b]; c = + g[b - 1]; if (d < f){a = b + 1; continue}if (d > f){if (!(!isNaN(c) && c < f)){e = b - 1; continue} else{return b - 1}}return b}return g.length - 1}; gantt._get_coll_duration = function(b, a){return gantt.date.add(a, b.step, b.unit) - a}; gantt._get_x_pos = function(c, b){b = b !== false; var a = gantt.posFromDate(b?c.start_date:c.end_date)}; gantt.getTaskTop = function(a){return this._y_from_ind(this.getGlobalTaskIndex(a))}; gantt._get_task_coord = function(d, b, f){b = b !== false; f = f || 0; var c = (this._get_safe_type(d.type) == this.config.types.milestone); var e = null; if (b || c){e = (d.start_date || this._default_task_date(d))} else{e = (d.end_date || this.calculateEndDate(this._default_task_date(d)))}var a = this.posFromDate(e), g = this.getTaskTop(d.id); if (c){if (b){a -= f} else{a += f}}return{x:a, y:g}}; gantt._get_task_pos = function(c, a){a = a !== false; var b = gantt._get_milestone_width() / 2; return this._get_task_coord(c, a, b)}; gantt._get_task_visible_pos = function(c, a){a = a !== false; var b = gantt._get_visible_milestone_width() / 2; return this._get_task_coord(c, a, b)}; gantt._correct_shift = function(b, a){return b -= ((new Date(gantt._min_date)).getTimezoneOffset() - (new Date(b)).getTimezoneOffset()) * 60000 * (a? - 1:1)}; gantt._get_mouse_pos = function(b){if (b.pageX || b.pageY){var e = {x:b.pageX, y:b.pageY}}var c = gantt.env.isIE?document.documentElement:document.body; var e = {x:b.clientX + c.scrollLeft - c.clientLeft, y:b.clientY + c.scrollTop - c.clientTop}; var a = gantt._get_position(gantt.$task_data); e.x = e.x - a.x + gantt.$task_data.scrollLeft; e.y = e.y - a.y + gantt.$task_data.scrollTop; return e}; gantt._is_layer = function(a){return(a && a.hasAttribute && a.hasAttribute(this.config.layer_attribute))}; gantt.attachEvent("onGanttReady", function(){gantt._task_layers.add(); gantt._link_layers.add()}); gantt._layers = {prepareConfig:function(a){if (typeof a == "function"){a = {renderer:a}}var b = a.id = gantt.uid(); if (!a.container){a.container = document.createElement("div")}return a}, create:function(a, b){return{tempCollection:[], renderers:{}, container:a, getRenderers:function(){var d = []; for (var c in this.renderers){d.push(this.renderers[c])}return d}, getRenderer:function(c){return this.renderers[c]}, add:function(g){if (g){this.tempCollection.push(g)}if (!this.container()){return}var d = this.container(); var j = this.tempCollection; for (var f = 0; f < j.length; f++){var g = j[f]; var h = g.container, k = g.id, e = g.topmost; if (!h.parentNode){if (e){d.appendChild(h)} else{var c = b?b():d.firstChild; if (c){d.insertBefore(h, c)} else{d.appendChild(h)}}}this.renderers[k] = gantt._task_renderer(k, g.renderer, h, g.filter); this.tempCollection.splice(f, 1); f--}}, remove:function(c){this.renderers[c].unload(); delete this.renderers[c]}, clear:function(){for (var c in this.renderers){this.renderers[c].unload()}this.renderers = {}}}}}; gantt._create_filter = function(a){if (!(a instanceof Array)){a = Array.prototype.slice.call(arguments, 0)}return function(f){var e = true; for (var d = 0, b = a.length; d < b; d++){var c = a[d]; if (c){e = e && (c.apply(gantt, [f.id, f]) !== false)}}return e}}; gantt._add_generic_layer = function(b, a){return function(c){if (c.filter === undefined){c.filter = gantt._create_filter(a)}c = gantt._layers.prepareConfig(c); b.add(c); return c.id}}; gantt._task_layers = gantt._layers.create(function(){return gantt.$task_data}, function(){return gantt.$task_links}); gantt._link_layers = gantt._layers.create(function(){return gantt.$task_data}); gantt.addTaskLayer = gantt._add_generic_layer(gantt._task_layers, [gantt._filter_task, gantt._is_chart_visible].concat(gantt._get_task_filters())); gantt.removeTaskLayer = function(a){gantt._task_layers.remove(a)}; gantt.addLinkLayer = gantt._add_generic_layer(gantt._link_layers, [gantt._filter_link, gantt._is_chart_visible].concat(gantt._get_link_filters())); gantt.removeLinkLayer = function(a){gantt._link_layers.remove(a)}; gantt._get_task_renderers = function(){return this._task_layers.getRenderers()}; gantt._get_link_renderers = function(){return this._link_layers.getRenderers()}; gantt._pull = {}; gantt._branches = {}; gantt._order = []; gantt._lpull = {}; gantt._links = []; gantt._order_full = []; gantt.load = function(b, c, e){this._load_url = b; this.assert(arguments.length, "Invalid load arguments"); var d = "json", a = null; if (arguments.length >= 3){d = c; a = e} else{if (typeof arguments[1] == "string"){d = arguments[1]} else{if (typeof arguments[1] == "function"){a = arguments[1]}}}this._load_type = d; this.callEvent("onLoadStart", [b, d]); this.ajax.get(b, gantt.bind(function(f){this.on_load(f, d); this.callEvent("onLoadEnd", [b, d]); if (typeof a == "function"){a.call(this)}}, this))}; gantt.parse = function(b, a){this.on_load({xmlDoc:{responseText:b}}, a)}; gantt.serialize = function(a){a = a || "json"; return this[a].serialize()}; gantt.on_load = function(d, b){this.callEvent("onBeforeParse", []); if (!b){b = "json"}this.assert(this[b], "Invalid data type:'" + b + "'"); var a = d.xmlDoc.responseText; var c = this[b].parse(a, d); this._process_loading(c)}; gantt._load_task = function(a){this._init_task(a); if (this.callEvent("onTaskLoading", [a])){this._pull[a.id] = a; return true}return false}; gantt._build_pull = function(e){var b = null, c = []; for (var d = 0, a = e.length; d < a; d++){b = e[d]; if (this._load_task(b)){c.push(b)}}return c}; gantt._build_hierarchy = function(d){var b = null; for (var c = 0, a = d.length; c < a; c++){b = d[c]; this.setParent(b, this.getParent(b) || this.config.root_id)}for (var c = 0, a = d.length; c < a; c++){b = d[c]; this._add_branch(b); b.$level = this.calculateTaskLevel(b)}}; gantt._process_loading = function(b){if (b.collections){this._load_collections(b.collections)}var a = this._build_pull(b.data); this._build_hierarchy(a); this._sync_order(); this._order_synced = true; this._init_links(b.links || (b.collections?b.collections.links:[])); this.callEvent("onParse", []); this.render(); if (this.config.initial_scroll){var c = (this._order[0] || this.config.root_id); if (c){this.showTask(c)}}}; gantt._init_links = function(a){if (a){for (var b = 0; b < a.length; b++){if (a[b]){var c = this._init_link(a[b]); this._lpull[c.id] = c}}}this._sync_links()}; gantt._load_collections = function(c){var i = false; for (var h in c){if (c.hasOwnProperty(h)){i = true; var f = c[h]; var e = this.serverList[h]; if (!e){continue}e.splice(0, e.length); for (var a = 0; a < f.length; a++){var d = f[a]; var b = this.copy(d); b.key = b.value; for (var g in d){if (d.hasOwnProperty(g)){if (g == "value" || g == "label"){continue}b[g] = d[g]}}e.push(b)}}}if (i){this.callEvent("onOptionsLoad", [])}}; gantt._sync_order = function(a){this._order = []; this._order_full = []; this._order_search = {}; this._sync_order_item({parent:this.config.root_id, $open:true, $ignore:true, id:this.config.root_id}); if (!a){this._scroll_resize(); this._set_sizes()}}; gantt.attachEvent("onBeforeTaskDisplay", function(b, a){return !a.$ignore}); gantt._sync_order_item = function(c, d){if (c.id !== gantt.config.root_id){this._order_full.push(c.id); if (!d && this._filter_task(c.id, c) && this.callEvent("onBeforeTaskDisplay", [c.id, c])){this._order.push(c.id); this._order_search[c.id] = this._order.length - 1}}var b = this.getChildren(c.id); if (b){for (var a = 0; a < b.length; a++){this._sync_order_item(this._pull[b[a]], d || !c.$open)}}}; gantt.getTaskCount = function(){return this._order_full.length}; gantt.getLinkCount = function(){return this._links.length}; gantt.getVisibleTaskCount = function(){return this._order.length}; gantt.getTaskIndex = function(c){var b = this.getChildren(this.getParent(c)); for (var a = 0; a < b.length; a++){if (b[a] == c){return a}}return - 1}; gantt.getGlobalTaskIndex = function(b){this.assert(b, "Invalid argument"); var a = this._order_search[b]; if (a !== undefined){return a} else{return - 1}}; gantt._get_visible_order = gantt.getGlobalTaskIndex; gantt.eachTask = function(f, c, e){c = c || this.config.root_id; e = e || this; var b = this.getChildren(c); if (b){for (var a = 0; a < b.length; a++){var d = this._pull[b[a]]; f.call(e, d); if (this.hasChild(d.id)){this.eachTask(f, d.id, e)}}}}; gantt._eachParent = function(d, c, b){b = b || this; var a = c; while (this.getParent(a)){if (!this.isTaskExists(this.getParent(a))){break}a = this.getTask(this.getParent(a)); d.call(b, a)}}; gantt.json = {parse:function(a){gantt.assert(a, "Invalid data"); if (typeof a == "string"){if (window.JSON){a = JSON.parse(a)} else{gantt.assert(false, "JSON is not supported")}}if (a.dhx_security){gantt.security_key = a.dhx_security}return a}, _copyLink:function(b){var c = {}; for (var a in b){c[a] = b[a]}return c}, _copyObject:function(b){var c = {}; for (var a in b){if (a.charAt(0) == "$"){continue}c[a] = b[a]; if (c[a] instanceof Date){c[a] = gantt.templates.xml_format(c[a])}}return c}, serialize:function(){var b = []; var a = []; gantt.eachTask(function(c){gantt.resetProjectDates(c); b.push(this._copyObject(c))}, gantt.config.root_id, this); a = gantt._links.slice(); return{data:b, links:a}}}; gantt.xml = {_xmlNodeToJSON:function(d, a){var c = {}; for (var b = 0; b < d.attributes.length; b++){c[d.attributes[b].name] = d.attributes[b].value}if (!a){for (var b = 0; b < d.childNodes.length; b++){var e = d.childNodes[b]; if (e.nodeType == 1){c[e.tagName] = e.firstChild?e.firstChild.nodeValue:""}}if (!c.text){c.text = d.firstChild?d.firstChild.nodeValue:""}}return c}, _getCollections:function(n){var g = {}; var a = gantt.ajax.xpath("//coll_options", n); for (var e = 0; e < a.length; e++){var l = a[e].getAttribute("for"); var f = g[l] = []; var p = gantt.ajax.xpath(".//item", a[e]); for (var c = 0; c < p.length; c++){var m = p[c]; var o = m.attributes; var d = {key:p[c].getAttribute("value"), label:p[c].getAttribute("label")}; for (var b = 0; b < o.length; b++){var h = o[b]; if (h.nodeName == "value" || h.nodeName == "label"){continue}d[h.nodeName] = h.nodeValue}f.push(d)}}return g}, _getXML:function(e, b, d){d = d || "data"; if (!b.getXMLTopNode){b = gantt.ajax.parse(b)}var c = gantt.ajax.xmltop(d, b.xmlDoc); if (c.tagName != d){throw"Invalid XML data"}var a = c.getAttribute("dhx_security"); if (a){gantt.security_key = a}return c}, parse:function(f, a){a = this._getXML(f, a); var e = {}; var b = e.data = []; var c = gantt.ajax.xpath("//task", a); for (var d = 0; d < c.length; d++){b[d] = this._xmlNodeToJSON(c[d])}e.collections = this._getCollections(a); return e}, _copyLink:function(a){return"<item id='" + a.id + "' source='" + a.source + "' target='" + a.target + "' type='" + a.type + "' />"}, _copyObject:function(a){return"<task id='" + a.id + "' parent='" + (a.parent || "") + "' start_date='" + a.start_date + "' duration='" + a.duration + "' open='" + (!!a.open) + "' progress='" + a.progress + "' end_date='" + a.end_date + "'><![CDATA[" + a.text + "]]></task>"}, serialize:function(){var e = []; var b = []; var d = gantt.json.serialize(); for (var c = 0, a = d.data.length; c < a; c++){e.push(this._copyObject(d.data[c]))}for (var c = 0, a = d.links.length; c < a; c++){b.push(this._copyLink(d.links[c]))}return"<data>" + e.join("") + "<coll_options for='links'>" + b.join("") + "</coll_options></data>"}}; gantt.oldxml = {parse:function(h, a){a = gantt.xml._getXML(h, a, "projects"); var g = {collections:{links:[]}}; var b = g.data = []; var c = gantt.ajax.xpath("//task", a); for (var d = 0; d < c.length; d++){b[d] = gantt.xml._xmlNodeToJSON(c[d]); var e = c[d].parentNode; if (e.tagName == "project"){b[d].parent = "project-" + e.getAttribute("id")} else{b[d].parent = e.parentNode.getAttribute("id")}}c = gantt.ajax.xpath("//project", a); for (var d = 0; d < c.length; d++){var f = gantt.xml._xmlNodeToJSON(c[d], true); f.id = "project-" + f.id; b.push(f)}for (var d = 0; d < b.length; d++){var f = b[d]; f.start_date = f.startdate || f.est; f.end_date = f.enddate; f.text = f.name; f.duration = f.duration / 8; f.open = 1; if (!f.duration && !f.end_date){f.duration = 1}if (f.predecessortasks){g.collections.links.push({target:f.id, source:f.predecessortasks, type:gantt.config.links.finish_to_start})}}return g}, serialize:function(){gantt.message("Serialization to 'old XML' is not implemented")}}; gantt.serverList = function(a, b){if (b){this.serverList[a] = b.slice(0)} else{if (!this.serverList[a]){this.serverList[a] = []}}return this.serverList[a]}; gantt._working_time_helper = {units:["year", "month", "week", "day", "hour", "minute"], default_calendar:function(){return{hours:[0, 17], dates:{"0":false, "6":false}}}, _working_units_cache:{_cache:{}, get:function(e, d){var a = - 1; var c = this._cache; if (c && c[e]){var b = c[e]; var f = d.getTime(); if (b[f] !== undefined){a = b[f]}}return a}, put:function(c, b, d){if (!c || !b){return false}var a = this._cache; var e = b.getTime(); d = !!d; if (!a){return false}if (!a[c]){a[c] = {}}a[c][e] = d; return true}, clear:function(){this._cache = {}}}, _get_unit_order:function(c){for (var b = 0, a = this.units.length; b < a; b++){if (this.units[b] == c){return b}}}, _timestamp:function(a){var b = null; if ((a.day || a.day === 0)){b = a.day} else{if (a.date){b = Date.UTC(a.date.getFullYear(), a.date.getMonth(), a.date.getDate())}}return b}, set_time:function(b){var a = b.hours !== undefined?b.hours:true; var c = this._timestamp(b); if (c !== null){this.get_calendar().dates[c] = a} else{this.get_calendar().hours = a}this._working_units_cache.clear()}, get_calendar:function(){if (!(gantt.config.worktimes && gantt.config.worktimes.global)){this.reset_calendar()}return gantt.config.worktimes.global}, reset_calendar:function(){gantt.config.worktimes = {}; gantt.config.worktimes.global = this.default_calendar()}, unset_time:function(a){if (!a){this.reset_calendar()} else{var b = this._timestamp(a); if (b !== null){delete this.get_calendar().dates[b]}}this._working_units_cache.clear()}, is_working_unit:function(c, d, b){if (!gantt.config.work_time){return true}var a = this._working_units_cache.get(d, c); if (a == - 1){a = this._check_is_working_unit(c, d, b); this._working_units_cache.put(d, c, a)}return a}, _check_is_working_unit:function(b, c, a){if (a === undefined){a = this._get_unit_order(c)}if (a === undefined){return true}if (a){if (!this.is_working_unit(b, this.units[a - 1], a - 1)){return false}}if (!this["is_work_" + c]){return true}return this["is_work_" + c](b)}, is_work_day:function(a){var b = this.get_working_hours(a); if (b instanceof Array){return b.length > 0}return false}, is_work_hour:function(c){var b = this.get_working_hours(c); var a = c.getHours(); for (var d = 0; d < b.length; d += 2){if (b[d + 1] === undefined){return b[d] == a} else{if (a >= b[d] && a < b[d + 1]){return true}}}return false}, get_working_hours:function(b){var c = this._timestamp({date:b}); var a = true; var d = this.get_calendar(); if (d.dates[c] !== undefined){a = d.dates[c]} else{if (d.dates[b.getDay()] !== undefined){a = d.dates[b.getDay()]}}if (a === true){return d.hours} else{if (a){return a}}return[]}, intern_dates_pull:{}, next_date:function(f, e, d){var b = + f, a = e + "_" + d; var c = this.intern_dates_pull[a]; if (!c){c = this.intern_dates_pull[a] = {}}if (!c[b]){c[b] = gantt.date.add(f, d, e)}return c[b]}, get_work_units_between_generic:function(g, f, d, c){var e = new Date(g), a = new Date(f), c = c || 1; var b = 0; while (e.valueOf() < a.valueOf()){if (this.is_working_unit(e, d)){b++}e = this.next_date(e, d, c)}return b}, get_hours_per_day:function(b){var a = this.get_working_hours(b); var d = 0; for (var c = 0; c < a.length; c += 2){d += ((a[c + 1] - a[c]) || 0)}return d}, get_work_hours_for_range:function(e, d){var b = 0; var c = new Date(e), a = new Date(d); while (c.valueOf() < a.valueOf()){if (this.is_working_unit(c, "day")){b += this.get_hours_per_day(c)}c = this.next_date(c, "day", 1)}return b}, get_work_units_between_hours:function(k, l, m, e){var c = new Date(k), g = new Date(l), e = e || 1; var b = new Date(c); var f = gantt.date.add(gantt.date.day_start(new Date(c)), 1, "day"); if (g.valueOf() <= f.valueOf()){return this.get_work_units_between_generic(k, l, m, e)} else{var d = gantt.date.day_start(new Date(g)); var j = g; var a = this.get_work_units_between_generic(b, f, m, e); var h = this.get_work_units_between_generic(d, j, m, e); var i = this.get_work_hours_for_range(f, d); i = Math.floor(((i / e) + a + h)); return i}}, get_work_units_between:function(d, c, b, a){if (!b){return false}if (b == "hour"){return this.get_work_units_between_hours(d, c, b, a)} else{return this.get_work_units_between_generic(d, c, b, a)}}, is_work_units_between:function(f, e, c, b){if (!c){return false}var d = new Date(f), a = new Date(e), b = b || 1; while (d.valueOf() < a.valueOf()){if (this.is_working_unit(d, c)){return true}d = this.next_date(d, c, b)}return false}, add_worktime:function(g, e, d, c){if (!d){return false}var f = new Date(g), b = 0, c = c || 1, e = e * 1; if (!gantt.config.work_time){return gantt.date.add(f, c * e, d)} else{while (b < e){var a = this.next_date(f, d, c); if (this.is_working_unit(c > 0?new Date(a.valueOf() - 1):new Date(a.valueOf() + 1), d)){b++}f = a}return f}}, get_closest_worktime:function(d){if (this.is_working_unit(d.date, d.unit)){return d.date}var h = d.unit; var k = gantt.date[h + "_start"](d.date); var j = new Date(k), b = new Date(k), f = true, e = 3000, g = 0, a = (d.dir == "any" || !d.dir); var c = 1; if (d.dir == "past"){c = - 1}while (!this.is_working_unit(k, h)){if (a){k = f?j:b; c = c * ( - 1)}var i = k.getTimezoneOffset(); k = gantt.date.add(k, c, h); k = gantt._correct_dst_change(k, i, c, h); if (gantt.date[h + "_start"]){k = gantt.date[h + "_start"](k)}if (a){if (f){j = k} else{b = k}}f = !f; g++; if (g > e){gantt.assert(false, "Invalid working time check"); return false}}if (k == b || d.dir == "past"){k = gantt.date.add(k, 1, h)}return k}}; gantt._working_time_helper.reset_calendar(); gantt.getTask = function(b){gantt.assert(b, "Invalid argument for gantt.getTask"); var a = this._pull[b]; gantt.assert(a, "Task not found id=" + b); return a}; gantt.getTaskByTime = function(h, g){var e = this._pull, d = [], f = 0, b = 0; if (!(h || g)){for (var c in e){d.push(e[c])}} else{h = + h || - Infinity; g = + g || Infinity; for (var c in e){var a = e[c]; if ( + a.start_date < g && + a.end_date > h){d.push(a)}}}return d}; gantt.isTaskExists = function(a){return gantt.defined(this._pull[a])}; gantt.isUnscheduledTask = function(a){return(!!a.unscheduled || !a.start_date)}; gantt._isAllowedUnscheduledTask = function(a){return !!(a.unscheduled && gantt.config.show_unscheduled)}; gantt.isTaskVisible = function(b){if (!this._pull[b]){return false}var a = this._pull[b]; if (!(( + a.start_date < + this._max_date && + a.end_date > + this._min_date) || gantt._isAllowedUnscheduledTask(a))){return false}if (this._order_search[b] !== undefined){return true}return false}; gantt.updateTask = function(b, a){if (!gantt.defined(a)){a = this.getTask(b)}if (this.callEvent("onBeforeTaskUpdate", [b, a]) === false){return false}this._pull[a.id] = a; if (!this._is_parent_sync(a)){this._resync_parent(a)}if (this._isAllowedUnscheduledTask(a)){this._init_task(a); this._sync_links()}this._update_parents(a.id); this.refreshTask(a.id); this.callEvent("onAfterTaskUpdate", [b, a]); this._sync_order(); this._adjust_scales()}; gantt._add_branch = function(b, c){var a = this.getParent(b); if (!this.hasChild(a)){this._branches[a] = []}var e = this.getChildren(a); var g = false; for (var d = 0, f = e.length; d < f; d++){if (e[d] == b.id){g = true; break}}if (!g){if (c * 1 == c){e.splice(c, 0, b.id)} else{e.push(b.id)}}this._sync_parent(b)}; gantt._move_branch = function(a, c, b){this.setParent(a, b); this._sync_parent(a); this._replace_branch_child(c, a.id); if (this.isTaskExists(b) || b == this.config.root_id){this._add_branch(a)} else{delete this._branches[a.id]}a.$level = this.calculateTaskLevel(a); this.eachTask(function(d){d.$level = this.calculateTaskLevel(d)}, a.id); this._sync_order()}; gantt._resync_parent = function(a){this._move_branch(a, a.$rendered_parent, this.getParent(a))}; gantt._sync_parent = function(a){a.$rendered_parent = this.getParent(a)}; gantt._is_parent_sync = function(a){return(a.$rendered_parent == this.getParent(a))}; gantt._replace_branch_child = function(e, a, b){var d = this.getChildren(e); if (d){var f = []; for (var c = 0; c < d.length; c++){if (d[c] != a){f.push(d[c])} else{if (b){f.push(b)}}}this._branches[e] = f}this._sync_order()}; gantt.addTask = function(c, b, a){if (!gantt.defined(b)){b = this.getParent(c) || 0}if (!this.isTaskExists(b)){b = 0}this.setParent(c, b); c = this._init_task(c); if (this.callEvent("onBeforeTaskAdd", [c.id, c]) === false){return false}this._pull[c.id] = c; this._add_branch(c, a); this.callEvent("onAfterTaskAdd", [c.id, c]); this.refreshData(); this._adjust_scales(); return c.id}; gantt._default_task_date = function(c, d){var b = (d && d != this.config.root_id)?this.getTask(d):false, a = ""; if (b){a = b.start_date} else{var e = this._order[0]; a = e?(this.getTask(e).start_date?this.getTask(e).start_date:(this.getTask(e).end_date?this.calculateEndDate(this.getTask(e).end_date, - this.config.duration_step):"")):this.config.start_date || this.getState().min_date}gantt.assert(a, "Invalid dates"); return new Date(a)}; gantt._set_default_task_timing = function(a){a.start_date = a.start_date || gantt._default_task_date(a, this.getParent(a)); a.duration = a.duration || this.config.duration_step; a.end_date = a.end_date || this.calculateEndDate(a.start_date, a.duration)}; gantt.createTask = function(c, b, a){c = c || {}; if (!gantt.defined(c.id)){c.id = gantt.uid()}if (!c.start_date){c.start_date = gantt._default_task_date(c, b)}if (c.text === undefined){c.text = gantt.locale.labels.new_task}if (c.duration === undefined){c.duration = 1}if (b){this.setParent(c, b); var d = this.getTask(b); d.$open = true}if (!this.callEvent("onTaskCreated", [c])){return null}if (this.config.details_on_create){c.$new = true; this._pull[c.id] = this._init_task(c); this._add_branch(c, a); c.$level = this.calculateTaskLevel(c); this.selectTask(c.id); this.refreshData(); this.showLightbox(c.id)} else{if (this.addTask(c, b, a)){this.showTask(c.id); this.selectTask(c.id)}}return c.id}; gantt.deleteTask = function(a){return this._deleteTask(a)}; gantt._getChildLinks = function(f){var e = this.getTask(f); if (!e){return[]}var b = e.$source.concat(e.$target); var a = this.getChildren(e.id); for (var d = 0; d < a.length; d++){b = b.concat(this._getChildLinks(a[d]))}var c = {}; for (var d = 0; d < b.length; d++){c[b[d]] = true}b = []; for (var d in c){b.push(d)}return b}; gantt._getTaskTree = function(e){var d = this.getTask(e); if (!d){return[]}var b = []; var a = this.getChildren(d.id); for (var c = 0; c < a.length; c++){b.push(a[c]); b = b.concat(this._getTaskTree(a[c]))}return b}; gantt._deleteRelatedLinks = function(d, c){var a = (this._dp && !c); var b = ""; var f = a?this._dp.updateMode != "off":false; if (a){b = this._dp.updateMode; this._dp.setUpdateMode("off")}for (var e = 0; e < d.length; e++){if (a){this._dp.setGanttMode("links"); this._dp.setUpdated(d[e], true, "deleted")}this._deleteLink(d[e], true)}if (a){this._dp.setUpdateMode(b); if (f){this._dp.sendAllData()}}}; gantt._deleteRelatedTasks = function(g, d){var b = (this._dp && !d); var c = ""; if (b){c = this._dp.updateMode; this._dp.setGanttMode("tasks"); this._dp.setUpdateMode("off")}var a = this._getTaskTree(g); for (var e = 0; e < a.length; e++){var f = a[e]; this._unset_task(f); if (b){this._dp.setUpdated(f, true, "deleted")}}if (b){this._dp.setUpdateMode(c)}}; gantt._unset_task = function(b){var a = this.getTask(b); this._update_flags(b, null); delete this._pull[b]; this._move_branch(a, this.getParent(a), null)}; gantt._deleteTask = function(d, b){var c = this.getTask(d); if (!b && this.callEvent("onBeforeTaskDelete", [d, c]) === false){return false}var a = gantt._getChildLinks(d); this._deleteRelatedTasks(d, b); this._deleteRelatedLinks(a, b); this._unset_task(d); if (!b){this.callEvent("onAfterTaskDelete", [d, c]); this.refreshData()}return true}; gantt.clearAll = function(){this._clear_data(); this.callEvent("onClear", []); this.refreshData()}; gantt._clear_data = function(){this._pull = {}; this._branches = {}; this._order = []; this._order_full = []; this._lpull = {}; this._links = []; this._update_flags(); this.userdata = {}}; gantt._update_flags = function(b, a){if (b === undefined){this._lightbox_id = this._selected_task = null; if (this._tasks_dnd.drag){this._tasks_dnd.drag.id = null}} else{if (this._lightbox_id == b){this._lightbox_id = a}if (this._selected_task == b){this._selected_task = a}if (this._tasks_dnd.drag && this._tasks_dnd.drag.id == b){this._tasks_dnd.drag.id = a}}}; gantt.changeTaskId = function(g, a){var f = this._pull[a] = this._pull[g]; this._pull[a].id = a; delete this._pull[g]; this._update_flags(g, a); this._replace_branch_child(this.getParent(f), g, a); for (var h in this._pull){var c = this._pull[h]; if (this.getParent(c) == g){this.setParent(c, a); this._resync_parent(c)}}var b = this._get_task_links(f); for (var d = 0; d < b.length; d++){var e = this.getLink(b[d]); if (e.source == g){e.source = a}if (e.target == g){e.target = a}}this.callEvent("onTaskIdChange", [g, a])}; gantt._get_task_links = function(b){var a = []; if (b.$source){a = a.concat(b.$source)}if (b.$target){a = a.concat(b.$target)}return a}; gantt._get_duration_unit = function(){return(gantt._get_line(this.config.duration_unit) * 1000) || this.config.duration_unit}; gantt._get_safe_type = function(a){return"task"}; gantt._get_type_name = function(b){for (var a in this.config.types){if (this.config.types[a] == b){return a}}return"task"}; gantt.getWorkHours = function(a){return this._working_time_helper.get_working_hours(a)}; gantt.setWorkTime = function(a){this._working_time_helper.set_time(a)}; gantt.unsetWorkTime = function(a){this._working_time_helper.unset_time(a)}; gantt.isWorkTime = function(a, c){var b = this._working_time_helper; return b.is_working_unit(a, c || this.config.duration_unit)}; gantt.correctTaskWorkTime = function(a){if (gantt.config.work_time && gantt.config.correct_work_time){if (!gantt.isWorkTime(a.start_date)){a.start_date = gantt.getClosestWorkTime({date:a.start_date, dir:"future"}); a.end_date = gantt.calculateEndDate(a.start_date, a.duration)} else{if (!gantt.isWorkTime(new Date( + a.end_date - 1))){a.end_date = gantt.calculateEndDate(a.start_date, a.duration)}}}}; gantt.getClosestWorkTime = function(a){var b = this._working_time_helper; if (a instanceof Date){a = {date:a}}a.dir = a.dir || "any"; a.unit = a.unit || this.config.duration_unit; return b.get_closest_worktime(a)}; gantt.calculateDuration = function(a, c){var b = this._working_time_helper; return b.get_work_units_between(a, c, this.config.duration_unit, this.config.duration_step)}; gantt._hasDuration = function(a, c){var b = this._working_time_helper; return b.is_work_units_between(a, c, this.config.duration_unit, this.config.duration_step)}; gantt.calculateEndDate = function(e, d, b){var a = this._working_time_helper; var c = d >= 0?1: - 1; return a.add_worktime(e, Math.abs(d), b || this.config.duration_unit, c * this.config.duration_step)}; gantt._init_task = function(a){if (!gantt.defined(a.id)){a.id = gantt.uid()}if (a.start_date){a.start_date = gantt.date.parseDate(a.start_date, "xml_date")}if (a.end_date){a.end_date = gantt.date.parseDate(a.end_date, "xml_date")}var b = null; if (a.duration || a.duration === 0){b = a.duration}if (b){if (a.start_date && !a.end_date){a.end_date = this.calculateEndDate(a.start_date, a.duration)} else{if (!a.start_date && a.end_date){a.start_date = this.calculateEndDate(a.end_date, - a.duration)}}}if (this._isAllowedUnscheduledTask(a)){this._set_default_task_timing(a)}gantt._init_task_timing(a); if (a.start_date && a.end_date){gantt.correctTaskWorkTime(a)}a.$source = []; a.$target = []; if (a.parent === undefined){this.setParent(a, this.config.root_id)}if (!gantt.defined(a.$open)){a.$open = gantt.defined(a.open)?a.open:this.config.open_tree_initially}a.$level = this.calculateTaskLevel(a); return a}; gantt._init_task_timing = function(a){var b = this._get_safe_type(a.type); if (a.$rendered_type === undefined){a.$rendered_type = b} else{if (a.$rendered_type != b){delete a.$no_end; delete a.$no_start; a.$rendered_type = b}}if ((a.$no_end === undefined || a.$no_start === undefined) && b != this.config.types.milestone){if (b == this.config.types.project){a.$no_end = a.$no_start = true; this._set_default_task_timing(a)} else{a.$no_end = !(a.end_date || a.duration); a.$no_start = !a.start_date; if (this._isAllowedUnscheduledTask(a)){a.$no_end = a.$no_start = false}}}if (b == this.config.types.milestone){a.end_date = a.start_date}if (a.start_date && a.end_date){a.duration = this.calculateDuration(a.start_date, a.end_date)}a.duration = a.duration || 0}; gantt._is_flex_task = function(a){return !!(a.$no_end || a.$no_start)}; gantt.resetProjectDates = function(a){if (a.$no_end || a.$no_start){var b = this.getSubtaskDates(a.id); this._assign_project_dates(a, b.start_date, b.end_date)}}; gantt.getSubtaskDates = function(c){var d = null, a = null, b = c !== undefined?c:gantt.config.root_id; this.eachTask(function(e){if (this._get_safe_type(e.type) == gantt.config.types.project || this.isUnscheduledTask(e)){return}if ((e.start_date && !e.$no_start) && (!d || d > e.start_date.valueOf())){d = e.start_date.valueOf()}if ((e.end_date && !e.$no_end) && (!a || a < e.end_date.valueOf())){a = e.end_date.valueOf()}}, b); return{start_date:d?new Date(d):null, end_date:a?new Date(a):null}}; gantt._assign_project_dates = function(a, c, b){if (a.$no_start){if (c && c != Infinity){a.start_date = new Date(c)} else{a.start_date = this._default_task_date(a, this.getParent(a))}}if (a.$no_end){if (b && b != - Infinity){a.end_date = new Date(b)} else{a.end_date = this.calculateEndDate(a.start_date, this.config.duration_step)}}if (a.$no_start || a.$no_end){this._init_task_timing(a)}}; gantt._update_parents = function(e, d){if (!e){return}var c = this.getTask(e); var b = this.getParent(c); var a = true; if (c.$no_start || c.$no_end){var g = c.start_date.valueOf(), f = c.end_date.valueOf(); gantt.resetProjectDates(c); if (g == c.start_date.valueOf() && f == c.end_date.valueOf()){a = false}if (a && !d){this.refreshTask(c.id, true)}}if (a && b && this.isTaskExists(b)){this._update_parents(b, d)}}; gantt.isChildOf = function(d, c){if (!this.isTaskExists(d)){return false}if (c === this.config.root_id){return this.isTaskExists(d)}var b = this.getTask(d); var a = this.getParent(d); while (b && this.isTaskExists(a)){b = this.getTask(a); if (b && b.id == c){return true}a = this.getParent(b)}return false}; gantt.roundDate = function(f){if (f instanceof Date){f = {date:f, unit:gantt._tasks.unit, step:gantt._tasks.step}}var e = f.date, b = f.step, h = f.unit; var g, d, c; if (h == gantt._tasks.unit && b == gantt._tasks.step && + e >= + gantt._min_date && + e <= + gantt._max_date){c = Math.floor(gantt._day_index_by_date(e)); if (!gantt._tasks.trace_x[c]){c -= 1}d = new Date(gantt._tasks.trace_x[c]); g = new Date(d); if (gantt._tasks.trace_x[c + 1]){g = new Date(gantt._tasks.trace_x[c + 1])} else{g = gantt.date.add(d, b, h)}} else{c = Math.floor(gantt._day_index_by_date(e)); g = gantt.date[h + "_start"](new Date(this._min_date)); if (gantt._tasks.trace_x[c]){g = gantt.date[h + "_start"](gantt._tasks.trace_x[c])}while ( + g < + e){g = gantt.date[h + "_start"](gantt.date.add(g, b, h)); var a = g.getTimezoneOffset(); g = gantt._correct_dst_change(g, a, g, h); if (gantt.date[h + "_start"]){g = gantt.date[h + "_start"](g)}}d = gantt.date.add(g, - 1 * b, h)}if (f.dir && f.dir == "future"){return g}if (f.dir && f.dir == "past"){return d}if (Math.abs(e - d) < Math.abs(g - e)){return d} else{return g}}; gantt.attachEvent("onBeforeTaskUpdate", function(b, a){gantt._init_task_timing(a); return true}); gantt.attachEvent("onBeforeTaskAdd", function(b, a){gantt._init_task_timing(a); return true}); gantt.calculateTaskLevel = function(a){var b = 0; this._eachParent(function(){b++}, a); return b}; gantt.sort = function(g, d, h, e){var a = !e; if (!this.isTaskExists(h)){h = this.config.root_id}if (!g){g = "order"}var f = (typeof (g) == "string")?(function(m, l){if (m[g] == l[g]){return 0}var i = m[g] > l[g]; return i?1: - 1}):g; if (d){var j = f; f = function(l, i){return j(i, l)}}var b = this.getChildren(h); if (b){var k = []; for (var c = b.length - 1; c >= 0; c--){k[c] = this._pull[b[c]]}k.sort(f); for (var c = 0; c < k.length; c++){b[c] = k[c].id; this.sort(g, d, b[c], true)}}if (a){this.render()}}; gantt.getNext = function(b){for (var a = 0; a < this._order.length - 1; a++){if (this._order[a] == b){return this._order[a + 1]}}return null}; gantt.getPrev = function(b){for (var a = 1; a < this._order.length; a++){if (this._order[a] == b){return this._order[a - 1]}}return null}; gantt._get_parent_id = function(a){var b = this.config.root_id; if (a){b = a.parent}return b}; gantt.getParent = function(b){var a = null; if (b.id !== undefined){a = b} else{a = gantt.getTask(b)}return this._get_parent_id(a)}; gantt.setParent = function(a, b){a.parent = b}; gantt.getSiblings = function(b){if (!this.isTaskExists(b)){return[]}var a = this.getParent(b); return this.getChildren(a)}; gantt.getNextSibling = function(d){var c = this.getSiblings(d); for (var b = 0, a = c.length; b < a; b++){if (c[b] == d){return c[b + 1] || null}}return null}; gantt.getPrevSibling = function(d){var c = this.getSiblings(d); for (var b = 0, a = c.length; b < a; b++){if (c[b] == d){return c[b - 1] || null}}return null}; gantt._dp_init = function(e){e.setTransactionMode("POST", true); e.serverProcessor += (e.serverProcessor.indexOf("?") != - 1?"&":"?") + "editing=true"; e._serverProcessor = e.serverProcessor; e.styles = {updated:"gantt_updated", order:"gantt_updated", inserted:"gantt_inserted", deleted:"gantt_deleted", invalid:"gantt_invalid", error:"gantt_error", clear:""}; e._methods = ["_row_style", "setCellTextStyle", "_change_id", "_delete_task"]; e.setGanttMode = function(h){var f = e.modes || {}; if (e._ganttMode){f[e._ganttMode] = {_in_progress:e._in_progress, _invalid:e._invalid, updatedRows:e.updatedRows}}var g = f[h]; if (!g){g = f[h] = {_in_progress:{}, _invalid:{}, updatedRows:[]}}e._in_progress = g._in_progress; e._invalid = g._invalid; e.updatedRows = g.updatedRows; e.modes = f; e._ganttMode = h}; this._sendTaskOrder = function(g, f){if (f.$drop_target){e.setGanttMode("tasks"); this.getTask(g).target = f.$drop_target; e.setUpdated(g, true, "order"); delete this.getTask(g).$drop_target}}; this.attachEvent("onAfterTaskAdd", function(g, f){e.setGanttMode("tasks"); e.setUpdated(g, true, "inserted")}); this.attachEvent("onAfterTaskUpdate", function(g, f){e.setGanttMode("tasks"); e.setUpdated(g, true); gantt._sendTaskOrder(g, f)}); function c(j){var f = e.updatedRows.slice(); var h = false; for (var g = 0; g < f.length && !e._in_progress[j]; g++){if (f[g] == j){if (gantt.getUserData(j, "!nativeeditor_status") == "inserted"){h = true}e.setUpdated(j, false)}}return h}this.attachEvent("onAfterTaskDelete", function(h, g){e.setGanttMode("tasks"); var f = !c(h); if (!f){return}e.setUpdated(h, true, "deleted"); if (e.updateMode != "off" && !e._tSend){e.sendAllData()}}); this.attachEvent("onAfterLinkUpdate", function(g, f){e.setGanttMode("links"); e.setUpdated(g, true)}); this.attachEvent("onAfterLinkAdd", function(g, f){e.setGanttMode("links"); e.setUpdated(g, true, "inserted")}); this.attachEvent("onAfterLinkDelete", function(h, g){e.setGanttMode("links"); var f = !c(h); if (!f){return}e.setUpdated(h, true, "deleted")}); this.attachEvent("onRowDragEnd", function(g, f){gantt._sendTaskOrder(g, gantt.getTask(g))}); var d = null, a = null; this.attachEvent("onTaskIdChange", function(n, f){if (!e._waitMode){return}var j = gantt.getChildren(f); if (j.length){d = d || {}; for (var h = 0; h < j.length; h++){var k = this.getTask(j[h]); d[k.id] = k}}var m = this.getTask(f), g = this._get_task_links(m); if (g.length){a = a || {}; for (var h = 0; h < g.length; h++){var l = this.getLink(g[h]); a[l.id] = l}}}); e.attachEvent("onAfterUpdateFinish", function(){if (d || a){gantt.batchUpdate(function(){for (var f in d){gantt.updateTask(d[f].id)}for (var f in a){gantt.updateLink(a[f].id)}d = null; a = null}); if (d){gantt._dp.setGanttMode("tasks")} else{gantt._dp.setGanttMode("links")}}}); e.attachEvent("onBeforeDataSending", function(){var f = this._serverProcessor; if (this._tMode == "REST"){var g = this._ganttMode.substr(0, this._ganttMode.length - 1); f = f.substring(0, f.indexOf("?") > - 1?f.indexOf("?"):f.length); this.serverProcessor = f + (f.slice( - 1) == "/"?"":"/") + g} else{this.serverProcessor = f + gantt._urlSeparator(f) + "gantt_mode=" + this._ganttMode}return true}); this._init_dp_live_update_hooks(e); var b = e.afterUpdate; e.afterUpdate = function(){var g; if (arguments.length == 3){g = arguments[1]} else{g = arguments[4]}var i = e._ganttMode; var f = g.filePath; if (this._tMode != "REST"){if (f.indexOf("gantt_mode=links") != - 1){i = "links"} else{i = "tasks"}} else{if (f.indexOf("/link") > f.indexOf("/task")){i = "links"} else{i = "tasks"}}e.setGanttMode(i); var h = b.apply(e, arguments); e.setGanttMode(i); return h}; e._getRowData = gantt.bind(function(k, f){var g; if (e._ganttMode == "tasks"){g = this.isTaskExists(k)?this.getTask(k):{id:k}} else{g = this.isLinkExists(k)?this.getLink(k):{id:k}}g = gantt.copy(g); var j = {}; for (var h in g){if (h.substr(0, 1) == "$"){continue}var i = g[h]; if (i instanceof Date){j[h] = this.templates.xml_format(i)} else{if (i === null){j[h] = ""} else{j[h] = i}}}if (g.$no_start){g.start_date = ""; g.duration = ""}if (g.$no_end){g.end_date = ""; g.duration = ""}j[e.action_param] = this.getUserData(k, e.action_param); return j}, this); this._change_id = gantt.bind(function(g, f){if (e._ganttMode != "tasks"){this.changeLinkId(g, f)} else{this.changeTaskId(g, f)}}, this); this._row_style = function(g, h){if (e._ganttMode != "tasks"){return}if (!gantt.isTaskExists(g)){return}var f = gantt.getTask(g); f.$dataprocessor_class = h; gantt.refreshTask(g)}; this._delete_task = function(f, g){}; this._dp = e}; gantt.getUserData = function(b, a){if (!this.userdata){this.userdata = {}}if (this.userdata[b] && this.userdata[b][a]){return this.userdata[b][a]}return""}; gantt.setUserData = function(c, a, b){if (!this.userdata){this.userdata = {}}if (!this.userdata[c]){this.userdata[c] = {}}this.userdata[c][a] = b}; gantt._init_link = function(a){if (!gantt.defined(a.id)){a.id = gantt.uid()}return a}; gantt._sync_links = function(){var b = null; for (var c = 0, a = this._order_full.length; c < a; c++){b = this._pull[this._order_full[c]]; b.$source = []; b.$target = []}this._links = []; for (var e in this._lpull){var d = this._lpull[e]; this._links.push(d); if (this._pull[d.source]){this._pull[d.source].$source.push(e)}if (this._pull[d.target]){this._pull[d.target].$target.push(e)}}}; gantt.getLink = function(a){gantt.assert(this._lpull[a], "Link doesn't exist"); return this._lpull[a]}; gantt._get_linked_task = function(d, c){var a = null; var b = c?d.target:d.source; if (gantt.isTaskExists(b)){a = gantt.getTask(b)}var e = c?"target":"source"; gantt.assert(a, "Link " + e + " not found. Task id=" + b + ", link id=" + d.id); return a}; gantt._get_link_target = function(a){return gantt._get_linked_task(a, true)}; gantt._get_link_source = function(a){return gantt._get_linked_task(a, false)}; gantt.getLinks = function(){var a = []; for (var b in gantt._lpull){a.push(gantt._lpull[b])}return a}; gantt.isLinkExists = function(a){return gantt.defined(this._lpull[a])}; gantt.addLink = function(a){a = this._init_link(a); if (this.callEvent("onBeforeLinkAdd", [a.id, a]) === false){return false}this._lpull[a.id] = a; this._sync_links(); this._render_link(a.id); this.callEvent("onAfterLinkAdd", [a.id, a]); return a.id}; gantt.updateLink = function(b, a){if (!gantt.defined(a)){a = this.getLink(b)}if (this.callEvent("onBeforeLinkUpdate", [b, a]) === false){return false}this._lpull[b] = a; this._sync_links(); this._render_link(b); this.callEvent("onAfterLinkUpdate", [b, a]); return true}; gantt.deleteLink = function(a){return this._deleteLink(a)}; gantt._deleteLink = function(c, a){var b = this.getLink(c); if (!a && this.callEvent("onBeforeLinkDelete", [c, b]) === false){return false}delete this._lpull[c]; this._sync_links(); this.refreshLink(c); if (!a){this.callEvent("onAfterLinkDelete", [c, b])}return true}; gantt.changeLinkId = function(b, a){if (this._lpull[b]){this._lpull[a] = this._lpull[b]; this._lpull[a].id = a; delete this._lpull[b]; this._sync_links(); this.callEvent("onLinkIdChange", [b, a])}}; gantt.getChildren = function(a){return gantt.defined(this._branches[a])?this._branches[a]:[]}; gantt.hasChild = function(a){return(gantt.defined(this._branches[a]) && this._branches[a].length)}; gantt.refreshData = function(){this._render_data()}; gantt._isTask = function(a){return(!a.type || a.type != gantt.config.types.project) && !(a.$no_start || a.$no_end)}; gantt._isProject = function(a){return !this._isTask(a)}; gantt._configure = function(a, d, c){for (var b in d){if (typeof a[b] == "undefined" || c){a[b] = d[b]}}}; gantt._init_skin = function(){gantt._get_skin(false); gantt._init_skin = function(){}}; gantt._get_skin = function(f){var g = gantt.skin; if (!g || f){var b = document.getElementsByTagName("link"); for (var e = 0; e < b.length; e++){var d = b[e].href.match("dhtmlxgantt_([a-z_]+).css"); if (d){if (gantt.skins[d[1]] || !g){g = d[1]; break}}}}gantt.skin = g || "terrace"; var a = gantt.skins[gantt.skin] || gantt.skins.terrace; this._configure(gantt.config, a.config, f); var c = gantt.getGridColumns(); if (c[1] && typeof c[1].width == "undefined"){c[1].width = a._second_column_width}if (c[2] && typeof c[2].width == "undefined"){c[2].width = a._third_column_width}if (a._lightbox_template){gantt._lightbox_template = a._lightbox_template}gantt.resetLightbox()}; gantt.resetSkin = function(){this.skin = ""; this._get_skin(true)}; gantt.skins = {}; gantt._lightbox_methods = {}; gantt._lightbox_template = "<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span></div><div class='gantt_cal_larea'></div>"; gantt.showLightbox = function(c){if (!c || gantt._is_readonly(this.getTask(c))){return}if (!this.callEvent("onBeforeLightbox", [c])){return}var a = this.getTask(c); var b = this.getLightbox(this._get_safe_type(a.type)); this._center_lightbox(b); this.showCover(); this._fill_lightbox(c, b); this._waiAria.lightboxVisibleAttr(b); this.callEvent("onLightbox", [c])}; gantt._get_timepicker_step = function(){if (this.config.round_dnd_dates){var b = gantt._tasks, a = (this._get_line(b.unit) * b.step) / 60; if (a >= 60 * 24 || !this._is_chart_visible()){a = this.config.time_step}return a}return this.config.time_step}; gantt.getLabel = function(e, d){var f = this._get_typed_lightbox_config(); for (var c = 0; c < f.length; c++){if (f[c].map_to == e){var b = f[c].options; for (var a = 0; a < b.length; a++){if (b[a].key == d){return b[a].label}}}}return""}; gantt.updateCollection = function(a, c){c = c.slice(0); var b = gantt.serverList(a); if (!b){return false}b.splice(0, b.length); b.push.apply(b, c || []); gantt.resetLightbox()}; gantt.getLightboxType = function(){return this._get_safe_type(this._lightbox_type)}; gantt.getLightbox = function(k){if (k === undefined){k = this.getLightboxType()}if (!this._lightbox || this.getLightboxType() != this._get_safe_type(k)){this._lightbox_type = this._get_safe_type(k); var h = document.createElement("DIV"); h.className = "gantt_cal_light"; var r = this._is_lightbox_timepicker(); if (gantt.config.wide_form || r){h.className += " gantt_cal_light_wide"}if (r){gantt.config.wide_form = true; h.className += " gantt_cal_light_full"}h.style.visibility = "hidden"; var e = this._lightbox_template; var b; var j = this.config.buttons_left; for (var c = 0; c < j.length; c++){var f = this.config._migrate_buttons[j[c]]?this.config._migrate_buttons[j[c]]:j[c]; b = this._waiAria.lightboxButtonAttrString(f); e += "<div " + b + " class='gantt_btn_set gantt_left_btn_set " + f + "_set'><div dhx_button='1' class='" + f + "'></div><div>" + this.locale.labels[f] + "</div></div>"}j = this.config.buttons_right; for (var c = 0; c < j.length; c++){var f = this.config._migrate_buttons[j[c]]?this.config._migrate_buttons[j[c]]:j[c]; b = this._waiAria.lightboxButtonAttrString(f); e += "<div " + b + " class='gantt_btn_set gantt_right_btn_set " + f + "_set' style='float:right;'><div dhx_button='1' class='" + f + "'></div><div>" + this.locale.labels[f] + "</div></div>"}e += "</div>"; h.innerHTML = e; gantt._waiAria.lightboxAttr(h); if (gantt.config.drag_lightbox){h.firstChild.onmousedown = gantt._ready_to_dnd; h.firstChild.onselectstart = function(){return false}; h.firstChild.style.cursor = "pointer"; gantt._init_dnd_events()}document.body.insertBefore(h, document.body.firstChild); this._lightbox = h; var l = this._get_typed_lightbox_config(k); e = this._render_sections(l); var a = h.getElementsByTagName("div"); for (var c = 0; c < a.length; c++){var g = a[c]; if (g.className == "gantt_cal_larea"){g.innerHTML = e; break}}for (var c = 0; c < l.length; c++){var p = l[c]; if (!p.id || !document.getElementById(p.id)){continue}var q = document.getElementById(p.id); var o = q.querySelector("label"); var n = q.nextSibling; if (!n){continue}var m = n.querySelector("input, select, textarea"); if (m){p.inputId = m.id || "input_" + gantt.uid(); if (!m.id){m.id = p.inputId}o.setAttribute("for", p.inputId)}}this.resizeLightbox(); this._init_lightbox_events(this); h.style.display = "none"; h.style.visibility = "visible"}return this._lightbox}; gantt._render_sections = function(d){var c = ""; for (var b = 0; b < d.length; b++){var f = this.form_blocks[d[b].type]; if (!f){continue}d[b].id = "area_" + this.uid(); var e = d[b].hidden?" style='display:none'":""; var a = ""; if (d[b].button){a = "<div class='gantt_custom_button' index='" + b + "'><div class='gantt_custom_button_" + d[b].button + "'></div><div>" + this.locale.labels["button_" + d[b].button] + "</div></div>"}if (this.config.wide_form){c += "<div class='gantt_wrap_section' " + e + ">"}c += "<div id='" + d[b].id + "' class='gantt_cal_lsection'><label>" + a + this.locale.labels["section_" + d[b].name] + "</label></div>" + f.render.call(this, d[b]); c += "</div>"}return c}; gantt.resizeLightbox = function(){var b = this._lightbox; if (!b){return}var a = b.childNodes[1]; a.style.height = "0px"; a.style.height = a.scrollHeight + "px"; b.style.height = a.scrollHeight + this.config.lightbox_additional_height + "px"; a.style.height = a.scrollHeight + "px"}; gantt._center_lightbox = function(c){if (c){c.style.display = "block"; var a = window.pageYOffset || document.body.scrollTop || document.documentElement.scrollTop; var d = window.pageXOffset || document.body.scrollLeft || document.documentElement.scrollLeft; var b = window.innerHeight || document.documentElement.clientHeight; if (a){c.style.top = Math.round(a + Math.max((b - c.offsetHeight) / 2, 0)) + "px"} else{c.style.top = Math.round(Math.max(((b - c.offsetHeight) / 2), 0) + 9) + "px"}if (document.documentElement.scrollWidth > document.body.offsetWidth){c.style.left = Math.round(d + (document.body.offsetWidth - c.offsetWidth) / 2) + "px"} else{c.style.left = Math.round((document.body.offsetWidth - c.offsetWidth) / 2) + "px"}}}; gantt.showCover = function(){if (this._cover){return}this._cover = document.createElement("DIV"); this._cover.className = "gantt_cal_cover"; var b = ((document.height !== undefined)?document.height:document.body.offsetHeight); var a = ((document.documentElement)?document.documentElement.scrollHeight:0); this._cover.style.height = Math.max(b, a) + "px"; document.body.appendChild(this._cover)}; gantt._init_lightbox_events = function(){gantt.lightbox_events = {}; gantt.lightbox_events.gantt_save_btn = function(a){gantt._save_lightbox()}; gantt.lightbox_events.gantt_delete_btn = function(a){if (!gantt.callEvent("onLightboxDelete", [gantt._lightbox_id])){return}if (gantt.isTaskExists(gantt._lightbox_id)){gantt.$click.buttons["delete"](gantt._lightbox_id)} else{gantt.hideLightbox()}}; gantt.lightbox_events.gantt_cancel_btn = function(a){gantt._cancel_lightbox()}; gantt.lightbox_events["default"] = function(d, g){if (g.getAttribute("dhx_button")){gantt.callEvent("onLightboxButton", [g.className, g, d])} else{var a, f, c; var b = gantt._getClassName(g); if (b.indexOf("gantt_custom_button") != - 1){if (b.indexOf("gantt_custom_button_") != - 1){a = g.parentNode.getAttribute("index"); c = g.parentNode.parentNode} else{a = g.getAttribute("index"); c = g.parentNode; g = g.firstChild}}var h = gantt._get_typed_lightbox_config(); if (a){f = gantt.form_blocks[h[a].type]; f.button_click(a, g, c, c.nextSibling)}}}; this.event(gantt.getLightbox(), "click", function(c){c = c || window.event; var d = c.target?c.target:c.srcElement; var a = gantt._getClassName(d); if (!a){d = d.previousSibling; a = gantt._getClassName(d)}if (d && a && a.indexOf("gantt_btn_set") === 0){d = d.firstChild; a = gantt._getClassName(d)}if (d && a){var b = gantt.defined(gantt.lightbox_events[d.className])?gantt.lightbox_events[d.className]:gantt.lightbox_events["default"]; return b(c, d)}return false}); gantt.getLightbox().onkeydown = function(d){var b = d || window.event; var c = d.target || d.srcElement; var a = !!(gantt._getClassName(c).indexOf("gantt_btn_set") > - 1); switch ((d || b).keyCode){case 32:if ((d || b).shiftKey){return}if (a && c.click){c.click()}break; case gantt.keys.edit_save:if ((d || b).shiftKey){return}if (a && c.click){c.click()} else{gantt._save_lightbox()}break; case gantt.keys.edit_cancel:gantt._cancel_lightbox(); break; default:break}}}; gantt._cancel_lightbox = function(){var a = this.getLightboxValues(); this.callEvent("onLightboxCancel", [this._lightbox_id, a.$new]); if (gantt.isTaskExists(a.id) && a.$new){this._deleteTask(a.id, true)}this.refreshData(); this.hideLightbox()}; gantt._save_lightbox = function(){var a = this.getLightboxValues(); if (!this.callEvent("onLightboxSave", [this._lightbox_id, a, !!a.$new])){return}if (a.$new){delete a.$new; this._replace_branch_child(this.getParent(a.id), a.id); this.addTask(a)} else{if (this.isTaskExists(a.id)){this.mixin(this.getTask(a.id), a, true); this.updateTask(a.id)}}this.refreshData(); this.hideLightbox()}; gantt._resolve_default_mapping = function(c){var b = c.map_to; var a = {time:true, time_optional:true, duration:true, duration_optional:true}; if (a[c.type]){if (c.map_to == "auto"){b = {start_date:"start_date", end_date:"end_date", duration:"duration"}} else{if (typeof (c.map_to) === "string"){b = {start_date:c.map_to}}}}return b}; gantt.getLightboxValues = function(){var b = {}; if (gantt.isTaskExists(this._lightbox_id)){b = this.mixin({}, this.getTask(this._lightbox_id))}var g = this._get_typed_lightbox_config(); for (var d = 0; d < g.length; d++){var e = document.getElementById(g[d].id); e = (e?e.nextSibling:e); var h = this.form_blocks[g[d].type]; if (!h){continue}var c = h.get_value.call(this, e, b, g[d]); var a = gantt._resolve_default_mapping(g[d]); if (typeof a == "string" && a != "auto"){b[a] = c} else{if (typeof a == "object"){for (var f in a){if (a[f]){b[a[f]] = c[f]}}}}}return b}; gantt.hideLightbox = function(){var a = this.getLightbox(); if (a){a.style.display = "none"}this._waiAria.lightboxHiddenAttr(a); this._lightbox_id = null; this.hideCover(); this.callEvent("onAfterLightbox", [])}; gantt.hideCover = function(){if (this._cover){this._cover.parentNode.removeChild(this._cover)}this._cover = null}; gantt.resetLightbox = function(){if (gantt._lightbox && !gantt._custom_lightbox){gantt._lightbox.parentNode.removeChild(gantt._lightbox)}gantt._lightbox = null}; gantt._set_lightbox_values = function(f, h){var b = f; var m = h.getElementsByTagName("span"); var a = []; if (gantt.templates.lightbox_header){a.push(""); a.push(gantt.templates.lightbox_header(b.start_date, b.end_date, b)); m[1].innerHTML = ""; m[2].innerHTML = gantt.templates.lightbox_header(b.start_date, b.end_date, b)} else{a.push(this.templates.task_time(b.start_date, b.end_date, b)); a.push((this.templates.task_text(b.start_date, b.end_date, b) || "").substr(0, 70)); m[1].innerHTML = this.templates.task_time(b.start_date, b.end_date, b); m[2].innerHTML = (this.templates.task_text(b.start_date, b.end_date, b) || "").substr(0, 70)}m[1].innerHTML = a[0]; m[2].innerHTML = a[1]; gantt._waiAria.lightboxHeader(h, a.join(" ")); var j = this._get_typed_lightbox_config(this.getLightboxType()); for (var g = 0; g < j.length; g++){var l = j[g]; if (!this.form_blocks[l.type]){continue}var d = document.getElementById(l.id).nextSibling; var e = this.form_blocks[l.type]; var c = gantt._resolve_default_mapping(j[g]); var k = this.defined(b[c])?b[c]:l.default_value; e.set_value.call(gantt, d, k, b, l); if (l.focus){e.focus.call(gantt, d)}}if (f.id){gantt._lightbox_id = f.id}}; gantt._fill_lightbox = function(c, b){var a = this.getTask(c); this._set_lightbox_values(a, b)}; gantt.getLightboxSection = function(c){var b = this._get_typed_lightbox_config(); var d = 0; for (d; d < b.length; d++){if (b[d].name == c){break}}var g = b[d]; if (!g){return null}if (!this._lightbox){this.getLightbox()}var h = document.getElementById(g.id); var f = h.nextSibling; var a = {section:g, header:h, node:f, getValue:function(i){return gantt.form_blocks[g.type].get_value.call(gantt, f, (i || {}), g)}, setValue:function(j, i){return gantt.form_blocks[g.type].set_value.call(gantt, f, j, (i || {}), g)}}; var e = this._lightbox_methods["get_" + g.type + "_control"]; return e?e(a):a}; gantt._lightbox_methods.get_template_control = function(a){a.control = a.node; return a}; gantt._lightbox_methods.get_select_control = function(a){a.control = a.node.getElementsByTagName("select")[0]; return a}; gantt._lightbox_methods.get_textarea_control = function(a){a.control = a.node.getElementsByTagName("textarea")[0]; return a}; gantt._lightbox_methods.get_time_control = function(a){a.control = a.node.getElementsByTagName("select"); return a}; gantt._init_dnd_events = function(){this.event(document.body, "mousemove", gantt._move_while_dnd); this.event(document.body, "mouseup", gantt._finish_dnd); gantt._init_dnd_events = function(){}}; gantt._move_while_dnd = function(c){if (gantt._dnd_start_lb){if (!document.gantt_unselectable){document.body.className += " gantt_unselectable"; document.gantt_unselectable = true}var b = gantt.getLightbox(); var a = (c && c.target)?[c.pageX, c.pageY]:[event.clientX, event.clientY]; b.style.top = gantt._lb_start[1] + a[1] - gantt._dnd_start_lb[1] + "px"; b.style.left = gantt._lb_start[0] + a[0] - gantt._dnd_start_lb[0] + "px"}}; gantt._ready_to_dnd = function(b){var a = gantt.getLightbox(); gantt._lb_start = [parseInt(a.style.left, 10), parseInt(a.style.top, 10)]; gantt._dnd_start_lb = (b && b.target)?[b.pageX, b.pageY]:[event.clientX, event.clientY]}; gantt._finish_dnd = function(){if (gantt._lb_start){gantt._lb_start = gantt._dnd_start_lb = false; document.body.className = document.body.className.replace(" gantt_unselectable", ""); document.gantt_unselectable = false}}; gantt._focus = function(b, a){if (b && b.focus){if (gantt.config.touch){} else{try{if (a && b.select){b.select()}b.focus()} catch (c){}}}}; gantt.form_blocks = {getTimePicker:function(q, v){var b = q.time_format; if (!b){var b = ["%d", "%m", "%Y"]; if (gantt._get_line(gantt._tasks.unit) < gantt._get_line("day")){b.push("%H:%i")}}q._time_format_order = {size:0}; var e = this.config; var o = this.date.date_part(new Date(gantt._min_date.valueOf())); var h = 24 * 60, g = 0; if (gantt.config.limit_time_select){h = 60 * e.last_hour + 1; g = 60 * e.first_hour; o.setHours(e.first_hour)}var j = ""; for (var r = 0; r < b.length; r++){var x = b[r]; if (r > 0){j += " "}var c = ""; switch (x){case"%Y":q._time_format_order[2] = r; q._time_format_order.size++; var n, d, u, s; if (q.year_range){if (!isNaN(q.year_range)){n = q.year_range} else{if (q.year_range.push){u = q.year_range[0]; s = q.year_range[1]}}}n = n || 10; d = d || Math.floor(n / 2); u = u || o.getFullYear() - d; s = s || u + n; for (var w = u; w < s; w++){c += "<option value='" + (w) + "'>" + (w) + "</option>"}break; case"%m":q._time_format_order[1] = r; q._time_format_order.size++; for (var w = 0; w < 12; w++){c += "<option value='" + w + "'>" + this.locale.date.month_full[w] + "</option>"}break; case"%d":q._time_format_order[0] = r; q._time_format_order.size++; for (var w = 1; w < 32; w++){c += "<option value='" + w + "'>" + w + "</option>"}break; case"%H:%i":q._time_format_order[3] = r; q._time_format_order.size++; var w = g; var k = o.getDate(); q._time_values = []; while (w < h){var f = this.templates.time_picker(o); c += "<option value='" + w + "'>" + f + "</option>"; q._time_values.push(w); o.setTime(o.valueOf() + this._get_timepicker_step() * 60 * 1000); var m = (o.getDate() != k)?1:0; w = m * 24 * 60 + o.getHours() * 60 + o.getMinutes()}break; default:break}if (c){var a = gantt._waiAria.lightboxSelectAttrString(x); var l = q.readonly?"disabled='disabled'":""; var t = v?" style='display:none' ":""; j += "<select " + l + t + a + ">" + c + "</select>"}}return j}, _fill_lightbox_select:function(f, e, h, g, a){f[e + g[0]].value = h.getDate(); f[e + g[1]].value = h.getMonth(); f[e + g[2]].value = h.getFullYear(); if (gantt.defined(g[3])){var c = h.getHours() * 60 + h.getMinutes(); c = Math.round(c / gantt._get_timepicker_step()) * gantt._get_timepicker_step(); var b = f[e + g[3]]; b.value = c; b.setAttribute("data-value", c)}}, template:{render:function(b){var a = (b.height || "30") + "px"; return"<div class='gantt_cal_ltext gantt_cal_template' style='height:" + a + ";'></div>"}, set_value:function(c, d, b, a){c.innerHTML = d || ""}, get_value:function(c, b, a){return c.innerHTML || ""}, focus:function(a){}}, textarea:{render:function(b){var a = (b.height || "130") + "px"; return"<div class='gantt_cal_ltext' style='height:" + a + ";'><textarea></textarea></div>"}, set_value:function(b, c, a){this.form_blocks.textarea._get_input(b).value = c || ""}, get_value:function(b, a){return this.form_blocks.textarea._get_input(b).value}, focus:function(c){var b = this.form_blocks.textarea._get_input(c); gantt._focus(b, true)}, _get_input:function(a){return a.querySelector("textarea")}}, select:{render:function(d){var a = (d.height || "23") + "px"; var c = "<div class='gantt_cal_ltext' style='height:" + a + ";'><select style='width:100%;'>"; for (var b = 0; b < d.options.length; b++){c += "<option value='" + d.options[b].key + "'>" + d.options[b].label + "</option>"}c += "</select></div>"; return c}, set_value:function(c, e, b, d){var a = c.firstChild; if (!a._dhx_onchange && d.onchange){a.onchange = d.onchange; a._dhx_onchange = true}if (typeof e == "undefined"){e = (a.options[0] || {}).value}a.value = e || ""}, get_value:function(b, a){return b.firstChild.value}, focus:function(c){var b = c.firstChild; gantt._focus(b, true)}}, time:{render:function(a){var c = this.form_blocks.getTimePicker.call(this, a); var b = ["<div style='height:" + (a.height || 30) + "px;padding-top:0px;font-size:inherit;text-align:center;' class='gantt_section_time'>"]; b.push(c); if (a.single_date){c = this.form_blocks.getTimePicker.call(this, a, true); b.push("<span></span>")} else{b.push("<span style='font-weight:normal; font-size:10pt;'> &nbsp;&ndash;&nbsp; </span>")}b.push(c); b.push("</div>"); return b.join("")}, set_value:function(e, m, l, d){var k = d; var n = e.getElementsByTagName("select"); var b = d._time_format_order; var f = d._time_format_size; if (k.auto_end_date){var j = function(){h = new Date(n[b[2]].value, n[b[1]].value, n[b[0]].value, 0, 0); c = gantt.calculateEndDate(h, 1); this.form_blocks._fill_lightbox_select(n, b.size, c, b, k)}; for (var g = 0; g < 4; g++){n[g].onchange = j}}var a = gantt._resolve_default_mapping(d); if (typeof (a) === "string"){a = {start_date:a}}var h = l[a.start_date] || new Date(); var c = l[a.end_date] || gantt.calculateEndDate(h, 1); this.form_blocks._fill_lightbox_select(n, 0, h, b, k); this.form_blocks._fill_lightbox_select(n, b.size, c, b, k)}, get_value:function(e, j, c){var l = e.getElementsByTagName("select"); var a = c._time_format_order; var k = 0, f = 0; if (gantt.defined(a[3])){var d = parseInt(l[a[3]].value, 10); k = Math.floor(d / 60); f = d % 60}var h = new Date(l[a[2]].value, l[a[1]].value, l[a[0]].value, k, f); k = f = 0; if (gantt.defined(a[3])){var d = parseInt(l[a.size + a[3]].value, 10); k = Math.floor(d / 60); f = d % 60}var b = new Date(l[a[2] + a.size].value, l[a[1] + a.size].value, l[a[0] + a.size].value, k, f); if (b <= h){b = gantt.date.add(h, gantt._get_timepicker_step(), "minute")}var g = gantt._resolve_default_mapping(c); var i = {start_date:new Date(h), end_date:new Date(b)}; if (typeof g == "string"){return i.start_date} else{return i}}, focus:function(a){gantt._focus(a.getElementsByTagName("select")[0])}}, duration:{render:function(f){var h = this.form_blocks.getTimePicker.call(this, f); h = "<div class='gantt_time_selects'>" + h + "</div>"; var d = this.locale.labels[this.config.duration_unit + "s"]; var b = f.single_date?' style="display:none"':""; var a = f.readonly?" disabled='disabled'":""; var c = this._waiAria.lightboxDurationInputAttrString(f); var g = "<div class='gantt_duration' " + b + "><input type='button' class='gantt_duration_dec' value='−'" + a + "><input type='text' value='5' class='gantt_duration_value'" + a + " " + c + "><input type='button' class='gantt_duration_inc' value='+'" + a + "> " + d + " <span></span></div>"; var e = "<div style='height:" + (f.height || 30) + "px;padding-top:0px;font-size:inherit;' class='gantt_section_time'>" + h + " " + g + "</div>"; return e}, set_value:function(f, o, n, e){var l = e; var q = f.getElementsByTagName("select"); var k = f.getElementsByTagName("input"); var h = k[1]; var i = [k[0], k[2]]; var m = f.getElementsByTagName("span")[0]; var c = e._time_format_order; function g(){var r = gantt.form_blocks.duration._get_start_date.call(gantt, f, e); var s = gantt.form_blocks.duration._get_duration.call(gantt, f, e); var t = gantt.calculateEndDate(r, s); m.innerHTML = gantt.templates.task_date(t)}function b(r){var s = h.value; s = parseInt(s, 10); if (window.isNaN(s)){s = 0}s += r; if (s < 1){s = 1}h.value = s; g()}i[0].onclick = gantt.bind(function(){b( - 1 * this.config.duration_step)}, this); i[1].onclick = gantt.bind(function(){b(1 * this.config.duration_step)}, this); q[0].onchange = g; q[1].onchange = g; q[2].onchange = g; if (q[3]){q[3].onchange = g}h.onkeydown = gantt.bind(function(s){s = s || window.event; var r = (s.charCode || s.keyCode || s.which); if (r == 40){b( - 1 * this.config.duration_step); return false}if (r == 38){b(1 * this.config.duration_step); return false}window.setTimeout(function(t){g()}, 1)}, this); h.onchange = gantt.bind(function(r){g()}, this); var a = gantt._resolve_default_mapping(e); if (typeof (a) === "string"){a = {start_date:a}}var j = n[a.start_date] || new Date(); var d = n[a.end_date] || gantt.calculateEndDate(j, 1); var p = Math.round(n[a.duration]) || gantt.calculateDuration(j, d); gantt.form_blocks._fill_lightbox_select(q, 0, j, c, l); h.value = p; g()}, _get_start_date:function(f, c){var e = f.getElementsByTagName("select"); var h = c._time_format_order; var a = 0; var d = 0; if (gantt.defined(h[3])){var b = e[h[3]]; var g = parseInt(b.value, 10); if (isNaN(g) && b.hasAttribute("data-value")){g = parseInt(b.getAttribute("data-value"), 10)}a = Math.floor(g / 60); d = g % 60}return new Date(e[h[2]].value, e[h[1]].value, e[h[0]].value, a, d)}, _get_duration:function(b, a){var c = b.getElementsByTagName("input")[1]; c = parseInt(c.value, 10); if (!c || window.isNaN(c)){c = 1}if (c < 0){c *= - 1}return c}, get_value:function(e, d, b){var a = gantt.form_blocks.duration._get_start_date(e, b); var f = gantt.form_blocks.duration._get_duration(e, b); var h = gantt.calculateEndDate(a, f); var g = gantt._resolve_default_mapping(b); var c = {start_date:new Date(a), end_date:new Date(h), duration:f}; if (typeof g == "string"){return c.start_date} else{return c}}, focus:function(a){gantt._focus(a.getElementsByTagName("select")[0])}}, parent:{_filter:function(d, c, b){var f = c.filter || function(){return true}; d = d.slice(0); for (var e = 0; e < d.length; e++){var a = d[e]; if (a.id == b || gantt.isChildOf(a.id, b) || f(a.id, a) === false){d.splice(e, 1); e--}}return d}, _display:function(d, c){var g = [], b = []; if (c){g = gantt.getTaskByTime(); if (d.allow_root){g.unshift({id:gantt.config.root_id, text:d.root_label || ""})}g = this._filter(g, d, c); if (d.sort){g.sort(d.sort)}}var f = d.template || gantt.templates.task_text; for (var e = 0; e < g.length; e++){var a = f.apply(gantt, [g[e].start_date, g[e].end_date, g[e]]); if (a === undefined){a = ""}b.push({key:g[e].id, label:a})}d.options = b; d.map_to = d.map_to || "parent"; return gantt.form_blocks.select.render.apply(this, arguments)}, render:function(a){return gantt.form_blocks.parent._display(a, false)}, set_value:function(d, e, c, b){var a = document.createElement("div"); a.innerHTML = gantt.form_blocks.parent._display(b, c.id); var f = a.removeChild(a.firstChild); d.onselect = null; d.parentNode.replaceChild(f, d); return gantt.form_blocks.select.set_value.apply(gantt, [f, e, c, b])}, get_value:function(){return gantt.form_blocks.select.get_value.apply(gantt, arguments)}, focus:function(){return gantt.form_blocks.select.focus.apply(gantt, arguments)}}}; gantt._is_lightbox_timepicker = function(){var b = this._get_typed_lightbox_config(); for (var a = 0; a < b.length; a++){if (b[a].name == "time" && b[a].type == "time"){return true}}return false}; gantt._dhtmlx_confirm = function(c, d, e, a){if (!c){return e()}var b = {text:c}; if (d){b.title = d}if (a){b.ok = a}if (e){b.callback = function(f){if (f){e()}}}gantt.confirm(b)}; gantt._get_typed_lightbox_config = function(a){if (a === undefined){a = this.getLightboxType()}var b = this._get_type_name(a); if (gantt.config.lightbox[b + "_sections"]){return gantt.config.lightbox[b + "_sections"]} else{return gantt.config.lightbox.sections}}; gantt._silent_redraw_lightbox = function(d){var f = this.getLightboxType(); if (this.getState().lightbox){var b = this.getState().lightbox; var g = this.getLightboxValues(), a = this.copy(this.getTask(b)); this.resetLightbox(); var c = this.mixin(a, g, true); var e = this.getLightbox(d?d:undefined); this._center_lightbox(this.getLightbox()); this._set_lightbox_values(c, e)} else{this.resetLightbox(); this.getLightbox(d?d:undefined)}this.callEvent("onLightboxChange", [f, this.getLightboxType()])}; gantt._extend_to_optional = function(a){var b = a; var c = {render:b.render, focus:b.focus, set_value:function(g, h, d, j){var e = gantt._resolve_default_mapping(j); if (!d[e.start_date] || (e.start_date == "start_date" && this._isAllowedUnscheduledTask(d))){c.disable(g, j); var k = {}; for (var f in e){k[e[f]] = d[f]}return b.set_value.call(gantt, g, h, k, j)} else{c.enable(g, j); return b.set_value.call(gantt, g, h, d, j)}}, get_value:function(e, d, f){if (f.disabled){return{start_date:null}} else{return b.get_value.call(gantt, e, d, f)}}, update_block:function(f, g){gantt.callEvent("onSectionToggle", [gantt._lightbox_id, g]); f.style.display = g.disabled?"none":"block"; if (g.button){var d = f.previousSibling.firstChild.firstChild, h = gantt.locale.labels; var e = g.disabled?h[g.name + "_enable_button"]:h[g.name + "_disable_button"]; d.nextSibling.innerHTML = e}gantt.resizeLightbox()}, disable:function(d, e){e.disabled = true; c.update_block(d, e)}, enable:function(d, e){e.disabled = false; c.update_block(d, e)}, button_click:function(f, g, h, d){if (gantt.callEvent("onSectionButton", [gantt._lightbox_id, h]) === false){return}var e = gantt._get_typed_lightbox_config()[f]; if (e.disabled){c.enable(d, e)} else{c.disable(d, e)}}}; return c}; gantt.form_blocks.duration_optional = gantt._extend_to_optional(gantt.form_blocks.duration); gantt.form_blocks.time_optional = gantt._extend_to_optional(gantt.form_blocks.time); gantt.dataProcessor = function(a){this.serverProcessor = a; this.action_param = "!nativeeditor_status"; this.object = null; this.updatedRows = []; this.autoUpdate = true; this.updateMode = "cell"; this._tMode = "GET"; this._headers = null; this._payload = null; this.post_delim = "_"; this._waitMode = 0; this._in_progress = {}; this._invalid = {}; this.mandatoryFields = []; this.messages = []; this.styles = {updated:"font-weight:bold;", inserted:"font-weight:bold;", deleted:"text-decoration : line-through;", invalid:"background-color:FFE0E0;", invalid_cell:"border-bottom:2px solid red;", error:"color:red;", clear:"font-weight:normal;text-decoration:none;"}; this.enableUTFencoding(true); gantt._eventable(this); return this}; gantt.dataProcessor.prototype = {setTransactionMode:function(b, a){if (typeof b == "object"){this._tMode = b.mode || this._tMode; this._headers = this._headers || b.headers; this._payload = this._payload || b.payload} else{this._tMode = b; this._tSend = a}if (this._tMode == "REST"){this._tSend = false; this._endnm = true}}, escape:function(a){if (this._utf){return encodeURIComponent(a)} else{return escape(a)}}, enableUTFencoding:function(a){this._utf = !!a}, setDataColumns:function(a){this._columns = (typeof a == "string")?a.split(","):a}, getSyncState:function(){return !this.updatedRows.length}, enableDataNames:function(a){this._endnm = !!a}, enablePartialDataSend:function(a){this._changed = !!a}, setUpdateMode:function(b, a){this.autoUpdate = (b == "cell"); this.updateMode = b; this.dnd = a}, ignore:function(b, a){this._silent_mode = true; b.call(a || window); this._silent_mode = false}, setUpdated:function(d, c, e){if (this._silent_mode){return}var b = this.findRow(d); e = e || "updated"; var a = this.obj.getUserData(d, this.action_param); if (a && e == "updated"){e = a}if (c){this.set_invalid(d, false); this.updatedRows[b] = d; this.obj.setUserData(d, this.action_param, e); if (this._in_progress[d]){this._in_progress[d] = "wait"}} else{if (!this.is_invalid(d)){this.updatedRows.splice(b, 1); this.obj.setUserData(d, this.action_param, "")}}if (!c){this._clearUpdateFlag(d)}this.markRow(d, c, e); if (c && this.autoUpdate){this.sendData(d)}}, _clearUpdateFlag:function(a){}, markRow:function(f, c, e){var d = ""; var b = this.is_invalid(f); if (b){d = this.styles[b]; c = true}if (this.callEvent("onRowMark", [f, c, e, b])){d = this.styles[c?e:"clear"] + d; this.obj[this._methods[0]](f, d); if (b && b.details){d += this.styles[b + "_cell"]; for (var a = 0; a < b.details.length; a++){if (b.details[a]){this.obj[this._methods[1]](f, a, d)}}}}}, getState:function(a){return this.obj.getUserData(a, this.action_param)}, is_invalid:function(a){return this._invalid[a]}, set_invalid:function(c, b, a){if (a){b = {value:b, details:a, toString:function(){return this.value.toString()}}}this._invalid[c] = b}, checkBeforeUpdate:function(a){return true}, sendData:function(a){if (this._waitMode && (this.obj.mytype == "tree" || this.obj._h2)){return}if (this.obj.editStop){this.obj.editStop()}if (typeof a == "undefined" || this._tSend){return this.sendAllData()}if (this._in_progress[a]){return false}this.messages = []; if (!this.checkBeforeUpdate(a) && this.callEvent("onValidationError", [a, this.messages])){return false}this._beforeSendData(this._getRowData(a), a)}, _beforeSendData:function(a, b){if (!this.callEvent("onBeforeUpdate", [b, this.getState(b), a])){return false}this._sendData(a, b)}, serialize:function(d, e){if (typeof d == "string"){return d}if (typeof e != "undefined"){return this.serialize_one(d, "")} else{var a = []; var c = []; for (var b in d){if (d.hasOwnProperty(b)){a.push(this.serialize_one(d[b], b + this.post_delim)); c.push(b)}}a.push("ids=" + this.escape(c.join(","))); if (gantt.security_key){a.push("dhx_security=" + gantt.security_key)}return a.join("&")}}, serialize_one:function(d, b){if (typeof d == "string"){return d}var a = []; for (var c in d){if (d.hasOwnProperty(c)){if ((c == "id" || c == this.action_param) && this._tMode == "REST"){continue}a.push(this.escape((b || "") + c) + "=" + this.escape(d[c]))}}return a.join("&")}, _sendData:function(e, f){if (!e){return}if (!this.callEvent("onBeforeDataSending", f?[f, this.getState(f), e]:[null, null, e])){return false}if (f){this._in_progress[f] = (new Date()).valueOf()}var i = this; var h = function(k){var m = []; if (f){m.push(f)} else{if (e){for (var l in e){m.push(l)}}}return i.afterUpdate(i, k, m)}; var b = this.serverProcessor + (this._user?(gantt._urlSeparator(this.serverProcessor) + ["dhx_user=" + this._user, "dhx_version=" + this.obj.getUserData(0, "version")].join("&")):""); if (this._tMode == "GET"){gantt.ajax.get(b + ((b.indexOf("?") != - 1)?"&":"?") + this.serialize(e, f), h)} else{if (this._tMode == "POST"){gantt.ajax.post(b, this.serialize(e, f), h)} else{if (this._tMode == "REST"){var c = this.getState(f); var d = b.replace(/(\&|\?)editing\=true/, ""); var g = ""; var a = "post"; if (c == "inserted"){g = this.serialize(e, f)} else{if (c == "deleted"){a = "DELETE"; d = d + (d.slice( - 1) == "/"?"":"/") + f} else{a = "PUT"; g = this.serialize(e, f); d = d + (d.slice( - 1) == "/"?"":"/") + f}}if (this._payload){for (var j in this._payload){d = d + this._urlSeparator(d) + this.escape(j) + "=" + this.escape(this._payload[j])}}gantt.ajax.query({url:d, method:a, headers:this._headers, data:g, callback:h})}}}this._waitMode++}, sendAllData:function(){if (!this.updatedRows.length){return}this.messages = []; var b = true; for (var a = 0; a < this.updatedRows.length; a++){b &= this.checkBeforeUpdate(this.updatedRows[a])}if (!b && !this.callEvent("onValidationError", ["", this.messages])){return false}if (this._tSend){this._sendData(this._getAllData())} else{for (var a = 0; a < this.updatedRows.length; a++){if (!this._in_progress[this.updatedRows[a]]){if (this.is_invalid(this.updatedRows[a])){continue}this._beforeSendData(this._getRowData(this.updatedRows[a]), this.updatedRows[a]); if (this._waitMode && (this.obj.mytype == "tree" || this.obj._h2)){return}}}}}, _getAllData:function(d){var b = {}; var a = false; for (var c = 0; c < this.updatedRows.length; c++){var e = this.updatedRows[c]; if (this._in_progress[e] || this.is_invalid(e)){continue}if (!this.callEvent("onBeforeUpdate", [e, this.getState(e), this._getRowData(e)])){continue}b[e] = this._getRowData(e, e + this.post_delim); a = true; this._in_progress[e] = (new Date()).valueOf()}return a?b:null}, setVerificator:function(b, a){this.mandatoryFields[b] = a || (function(c){return(c !== "")})}, clearVerificator:function(a){this.mandatoryFields[a] = false}, findRow:function(b){var a = 0; for (a = 0; a < this.updatedRows.length; a++){if (b == this.updatedRows[a]){break}}return a}, defineAction:function(a, b){if (!this._uActions){this._uActions = []}this._uActions[a] = b}, afterUpdateCallback:function(b, g, f, e){var a = b; var d = (f != "error" && f != "invalid"); if (!d){this.set_invalid(b, f)}if ((this._uActions) && (this._uActions[f]) && (!this._uActions[f](e))){return(delete this._in_progress[a])}if (this._in_progress[a] != "wait"){this.setUpdated(b, false)}var c = b; switch (f){case"inserted":case"insert":if (g != b){this.setUpdated(b, false); this.obj[this._methods[2]](b, g); b = g}break; case"delete":case"deleted":this.obj.setUserData(b, this.action_param, "true_deleted"); this.obj[this._methods[3]](b); delete this._in_progress[a]; return this.callEvent("onAfterUpdate", [b, f, g, e])}if (this._in_progress[a] != "wait"){if (d){this.obj.setUserData(b, this.action_param, "")}delete this._in_progress[a]} else{delete this._in_progress[a]; this.setUpdated(g, true, this.obj.getUserData(b, this.action_param))}this.callEvent("onAfterUpdate", [c, f, g, e])}, afterUpdate:function(j, h, a){if (window.JSON){var n; try{n = JSON.parse(h.xmlDoc.responseText)} catch (k){if (!h.xmlDoc.responseText.length){n = {}}}if (n){var d = n.action || this.getState(a) || "updated"; var b = n.sid || a[0]; var c = n.tid || a[0]; j.afterUpdateCallback(b, c, d, n); j.finalizeUpdate(); return}}var m = gantt.ajax.xmltop("data", h.xmlDoc); if (!m){return this.cleanUpdate(a)}var l = gantt.ajax.xpath("//data/action", m); if (!l.length){return this.cleanUpdate(a)}for (var g = 0; g < l.length; g++){var f = l[g]; var d = f.getAttribute("type"); var b = f.getAttribute("sid"); var c = f.getAttribute("tid"); j.afterUpdateCallback(b, c, d, f)}j.finalizeUpdate()}, cleanUpdate:function(b){if (b){for (var a = 0; a < b.length; a++){delete this._in_progress[b[a]]}}}, finalizeUpdate:function(){if (this._waitMode){this._waitMode--}if ((this.obj.mytype == "tree" || this.obj._h2) && this.updatedRows.length){this.sendData()}this.callEvent("onAfterUpdateFinish", []); if (!this.updatedRows.length){this.callEvent("onFullSync", [])}}, init:function(a){this.obj = a; if (this.obj._dp_init){this.obj._dp_init(this)}}, setOnAfterUpdate:function(a){this.attachEvent("onAfterUpdate", a)}, enableDebug:function(a){}, setOnBeforeUpdateHandler:function(a){this.attachEvent("onBeforeDataSending", a)}, setAutoUpdate:function(c, b){c = c || 2000; this._user = b || (new Date()).valueOf(); this._need_update = false; this._update_busy = false; this.attachEvent("onAfterUpdate", function(d, f, g, e){this.afterAutoUpdate(d, f, g, e)}); this.attachEvent("onFullSync", function(){this.fullSync()}); var a = this; window.setInterval(function(){a.loadUpdate()}, c)}, afterAutoUpdate:function(a, c, d, b){if (c == "collision"){this._need_update = true; return false} else{return true}}, fullSync:function(){if (this._need_update){this._need_update = false; this.loadUpdate()}return true}, getUpdates:function(a, b){if (this._update_busy){return false} else{this._update_busy = true}gantt.ajax.get(a, b)}, _v:function(a){if (a.firstChild){return a.firstChild.nodeValue}return""}, _a:function(a){var c = []; for (var b = 0; b < a.length; b++){c[b] = this._v(a[b])}return c}, loadUpdate:function(){var b = this; var a = this.obj.getUserData(0, "version"); var c = this.serverProcessor + gantt._urlSeparator(this.serverProcessor) + ["dhx_user=" + this._user, "dhx_version=" + a].join("&"); c = c.replace("editing=true&", ""); this.getUpdates(c, function(g){var f = gantt.ajax.xpath("//userdata", g); b.obj.setUserData(0, "version", b._v(f[0])); var d = gantt.ajax.xpath("//update", g); if (d.length){b._silent_mode = true; for (var h = 0; h < d.length; h++){var e = d[h].getAttribute("status"); var k = d[h].getAttribute("id"); var j = d[h].getAttribute("parent"); switch (e){case"inserted":b.callEvent("insertCallback", [d[h], k, j]); break; case"updated":b.callEvent("updateCallback", [d[h], k, j]); break; case"deleted":b.callEvent("deleteCallback", [d[h], k, j]); break}}b._silent_mode = false}b._update_busy = false; b = null})}}; gantt._init_dp_live_update_hooks = function(a){a.attachEvent("insertCallback", gantt._insert_callback); a.attachEvent("updateCallback", gantt._update_callback); a.attachEvent("deleteCallback", gantt._delete_callback)}; gantt._update_callback = function(e, f){var d = e.data || gantt.xml._xmlNodeToJSON(e.firstChild); if (!gantt.isTaskExists(f)){return}var a = gantt.getTask(f); for (var b in d){var c = d[b]; switch (b){case"id":continue; case"start_date":case"end_date":c = gantt.templates.xml_date(c); break; case"duration":a.end_date = gantt.calculateEndDate(a.start_date, c); break}a[b] = c}gantt.updateTask(f); gantt.refreshData()}; gantt._insert_callback = function(d, f, b, e){var c = d.data || gantt.xml._xmlNodeToJSON(d.firstChild), a = {add:gantt.addTask, isExist:gantt.isTaskExists}; if (e == "links"){a.add = gantt.addLink; a.isExist = gantt.isLinkExists}if (a.isExist.call(gantt, f)){return}c.id = f; a.add.call(gantt, c)}; gantt._delete_callback = function(c, e, b, d){var a = {"delete":gantt.deleteTask, isExist:gantt.isTaskExists}; if (d == "links"){a["delete"] = gantt.deleteLink; a.isExist = gantt.isLinkExists}if (a.isExist.call(gantt, e)){a["delete"].call(gantt, e)}}; gantt.assert = function(a, b){if (!a){if (gantt.config.show_errors && gantt.callEvent("onError", [b]) !== false){gantt.message({type:"error", text:b, expire: - 1})}}}; gantt.init = function(a, c, b){this.callEvent("onBeforeGanttReady", []); if (c && b){this.config.start_date = this._min_date = new Date(c); this.config.end_date = this._max_date = new Date(b)}this._init_skin(); this.date.init(); if (!this.config.scroll_size){this.config.scroll_size = this._detectScrollSize()}gantt.event(window, "resize", this._on_resize); this.init = function(d){if (this.$container && this.$container.parentNode){this.$container.parentNode.removeChild(this.$container); this.$container = null}this._reinit(d)}; this._reinit(a)}; gantt._reinit = function(a){this._init_html_area(a); this._set_sizes(); this._clear_renderers(); this.resetLightbox(); this._update_flags(); this._init_touch_events(); this._init_templates(); this._init_grid(); this._init_tasks(); this._set_scroll_events(); gantt.event(this.$container, "click", this._on_click); gantt.event(this.$container, "dblclick", this._on_dblclick); gantt.event(this.$container, "mousemove", this._on_mousemove); gantt.event(this.$container, "contextmenu", this._on_contextmenu); this.callEvent("onGanttReady", []); this.render()}; gantt._init_html_area = function(d){if (typeof d == "string"){this._obj = document.getElementById(d)} else{this._obj = d}this.assert(this._obj, "Invalid html container: " + d); var a = this._waiAria.gridAttrString(); var c = this._waiAria.gridDataAttrString(); var b = "<div class='gantt_container'><div class='gantt_grid' " + a + "></div><div class='gantt_task'></div>"; b += "<div class='gantt_ver_scroll'><div></div></div><div class='gantt_hor_scroll'><div></div></div></div>"; this._obj.innerHTML = b; this.$container = this._obj.firstChild; var e = this.$container.childNodes; this.$grid = e[0]; this.$task = e[1]; this.$scroll_ver = e[2]; this.$scroll_hor = e[3]; this.$grid.innerHTML = "<div class='gantt_grid_scale' " + gantt._waiAria.gridScaleRowAttrString() + "></div><div class='gantt_grid_data' " + c + "></div>"; this.$grid_scale = this.$grid.childNodes[0]; this.$grid_data = this.$grid.childNodes[1]; this.$task.innerHTML = "<div class='gantt_task_scale'></div><div class='gantt_data_area'><div class='gantt_task_bg'></div><div class='gantt_links_area'></div><div class='gantt_bars_area'></div></div>"; this.$task_scale = this.$task.childNodes[0]; this.$task_data = this.$task.childNodes[1]; this.$task_bg = this.$task_data.childNodes[0]; this.$task_links = this.$task_data.childNodes[1]; this.$task_bars = this.$task_data.childNodes[2]}; gantt.$click = {buttons:{edit:function(a){gantt.showLightbox(a)}, "delete":function(c){var a = gantt.locale.labels.confirm_deleting; var b = gantt.locale.labels.confirm_deleting_title; gantt._dhtmlx_confirm(a, b, function(){if (!gantt.isTaskExists(c)){gantt.hideLightbox(); return}var d = gantt.getTask(c); if (d.$new){gantt._deleteTask(c, true); gantt.refreshData()} else{gantt.deleteTask(c)}gantt.hideLightbox()})}}}; gantt._calculate_content_height = function(){var b = this.config.scale_height, c = this._order.length * this.config.row_height, a = this._scroll_hor?this.config.scroll_size + 1:0; if (!(this._is_grid_visible() || this._is_chart_visible())){return 0} else{return b + c + 2 + a}}; gantt._calculate_content_width = function(){var b = this._get_grid_width(), a = this._tasks?this._tasks.full_width:0, c = this._scroll_ver?this.config.scroll_size + 1:0; if (!this._is_chart_visible()){a = 0}if (!this._is_grid_visible()){b = 0}return b + a + 1}; gantt._get_resize_options = function(){var a = {x:false, y:false}; if (this.config.autosize == "xy"){a.x = a.y = true} else{if (this.config.autosize == "y" || this.config.autosize === true){a.y = true} else{if (this.config.autosize == "x"){a.x = true}}}return a}; gantt._clean_el_size = function(a){return((a || "").toString().replace("px", "") * 1 || 0)}; gantt._get_box_styles = function(){var e = null; if (window.getComputedStyle){e = window.getComputedStyle(this._obj, null)} else{e = {width:this._obj.clientWidth, height:this._obj.clientHeight}}var b = ["width", "height", "paddingTop", "paddingBottom", "paddingLeft", "paddingRight", "borderLeftWidth", "borderRightWidth", "borderTopWidth", "borderBottomWidth"]; var d = {boxSizing:(e.boxSizing == "border-box")}; if (e.MozBoxSizing){d.boxSizing = (e.MozBoxSizing == "border-box")}for (var a = 0; a < b.length; a++){d[b[a]] = e[b[a]]?this._clean_el_size(e[b[a]]):0}var c = {horPaddings:(d.paddingLeft + d.paddingRight + d.borderLeftWidth + d.borderRightWidth), vertPaddings:(d.paddingTop + d.paddingBottom + d.borderTopWidth + d.borderBottomWidth), borderBox:d.boxSizing, innerWidth:d.width, innerHeight:d.height, outerWidth:d.width, outerHeight:d.height}; if (c.borderBox){c.innerWidth -= c.horPaddings; c.innerHeight -= c.vertPaddings} else{c.outerWidth += c.horPaddings; c.outerHeight += c.vertPaddings}return c}; gantt._do_autosize = function(){var b = this._get_resize_options(); var c = this._get_box_styles(); if (b.y){var a = this._calculate_content_height(); if (c.borderBox){a += c.vertPaddings}this._obj.style.height = a + "px"}if (b.x){var d = this._calculate_content_width(); if (c.borderBox){d += c.horPaddings}this._obj.style.width = d + "px"}}; gantt._set_sizes = function(){this._do_autosize(); var b = this._get_box_styles(); this._y = b.innerHeight; if (this._y < 20){return}this.$grid.style.height = this.$task.style.height = Math.max(this._y - this.$scroll_hor.offsetHeight - 2, 0) + "px"; var a = Math.max((this._y - (this.config.scale_height || 0) - this.$scroll_hor.offsetHeight - 2), 0); this.$grid_data.style.height = this.$task_data.style.height = a + "px"; var c = Math.max(this._get_grid_width() - 1, 0); this.$grid.style.width = c + "px"; this.$grid.style.display = c === 0?"none":""; b = this._get_box_styles(); this._x = b.innerWidth; if (this._x < 20){return}this.$grid_data.style.width = Math.max(this._get_grid_width() - 1, 0) + "px"; this.$task.style.width = Math.max(this._x - this._get_grid_width() - 2, 0) + "px"}; gantt.getScrollState = function(){if (this.$task && this.$task_data){return{x:this.$task.scrollLeft, y:this.$task_data.scrollTop}} else{return null}}; gantt._save_scroll_state = function(a, c){var b = {}; this._cached_scroll_pos = this._cached_scroll_pos || {}; if (a !== undefined){b.x = Math.max(a, 0)}if (c !== undefined){b.y = Math.max(c, 0)}this.mixin(this._cached_scroll_pos, b, true)}; gantt._restore_scroll_state = function(){var a = {x:0, y:0}; if (this._cached_scroll_pos){a.x = this._cached_scroll_pos.x || a.x; a.y = this._cached_scroll_pos.y || a.y}return a}; gantt.scrollTo = function(d, c){var b = this._restore_scroll_state(); if (d * 1 == d){this.$task.scrollLeft = d; this._save_scroll_state(d, undefined)}if (c * 1 == c){this.$scroll_ver.scrollTop = c; this.$task_data.scrollTop = c; this.$grid_data.scrollTop = c; this._save_scroll_state(undefined, this.config.show_chart?this.$task_data.scrollTop:this.$scroll_ver.scrollTop)}var a = gantt._restore_scroll_state(); this.callEvent("onGanttScroll", [b.x, b.y, a.x, a.y])}; gantt.showDate = function(a){var c = this.posFromDate(a); var b = Math.max(c - this.config.task_scroll_offset, 0); this.scrollTo(b)}; gantt.showTask = function(e){var d = this._get_task_pos(this.getTask(e)); var c = Math.max(d.x - this.config.task_scroll_offset, 0); var a = this._scroll_sizes().y; var b; if (!a){b = d.y} else{b = d.y - (a - this.config.row_height) / 2}this.scrollTo(c, b)}; gantt._on_resize = gantt.setSizes = function(){gantt._set_sizes(); gantt._scroll_resize(); gantt._set_sizes()}; gantt.render = function(){this.callEvent("onBeforeGanttRender", []); var d = this.copy(this._restore_scroll_state()); var b = null; if (d){b = gantt.dateFromPos(d.x + this.config.task_scroll_offset)}this._render_grid(); this._render_tasks_scales(); this._scroll_resize(); this._on_resize(); this._render_data(); if (this.config.preserve_scroll && d){var a = gantt._restore_scroll_state(); var c = gantt.dateFromPos(a.x); if (!( + b == + c && a.y == d.y)){if (b){this.showDate(b)}gantt.scrollTo(undefined, d.y)}}this.callEvent("onGanttRender", [])}; gantt._set_scroll_events = function(){this.event(this.$scroll_hor, "scroll", function(){if ((new Date()) - (gantt._wheel_time || 0) < 100){return true}if (gantt._touch_scroll_active){return}var c = gantt.$scroll_hor.scrollLeft; gantt.scrollTo(c)}); this.event(this.$scroll_ver, "scroll", function(){if (gantt._touch_scroll_active){return}var c = gantt.$scroll_ver.scrollTop; gantt.$grid_data.scrollTop = c; gantt.scrollTo(null, c)}); this.event(this.$task, "scroll", function(){var d = gantt.$task.scrollLeft, c = gantt.$scroll_hor.scrollLeft; if (c != d){gantt.$scroll_hor.scrollLeft = d}}); this.event(this.$task_data, "scroll", function(){var d = gantt.$task_data.scrollTop, c = gantt.$scroll_ver.scrollTop; if (c != d){gantt.$scroll_ver.scrollTop = d}}); var b = gantt.env.isFF; function a(j){var k = gantt._get_resize_options(); gantt._wheel_time = new Date(); var i = b?(j.deltaX * - 20):j.wheelDeltaX * 2; var g = b?(j.deltaY * - 40):j.wheelDelta; if (i && Math.abs(i) > Math.abs(g)){if (k.x){return true}if (!gantt.$scroll_hor || !gantt.$scroll_hor.offsetWidth){return true}var d = i / - 40; var f = gantt.$task.scrollLeft; var c = f + d * 30; gantt.scrollTo(c, null); gantt.$scroll_hor.scrollLeft = c; if (f == gantt.$task.scrollLeft){return true}} else{if (k.y){return true}if (!gantt.$scroll_ver || !gantt.$scroll_ver.offsetHeight){return true}var d = g / - 40; if (typeof g == "undefined"){d = j.detail}var h = gantt.$scroll_ver.scrollTop; var l = gantt.$scroll_ver.scrollTop + d * 30; if (!gantt.config.prevent_default_scroll && (gantt._cached_scroll_pos && ((gantt._cached_scroll_pos.y == l) || (gantt._cached_scroll_pos.y <= 0 && l <= 0)))){return true}gantt.scrollTo(null, l); gantt.$scroll_ver.scrollTop = l; if (h == gantt.$scroll_ver.scrollTop){return true}}if (j.preventDefault){j.preventDefault()}j.cancelBubble = true; return false}if (b){this.event(gantt.$container, "wheel", a)} else{this.event(gantt.$container, "mousewheel", a)}}; gantt._scroll_resize = function(){if (this._x < 20 || this._y < 20){return}var a = this._scroll_sizes(); if (a.x){this.$scroll_hor.style.display = "block"; this.$scroll_hor.style.height = a.scroll_size + "px"; this.$scroll_hor.style.width = a.x + "px"; this.$scroll_hor.firstChild.style.width = a.x_inner + "px"} else{this.$scroll_hor.style.display = "none"; this.$scroll_hor.style.height = this.$scroll_hor.style.width = "0px"}if (a.y){this.$scroll_ver.style.display = "block"; this.$scroll_ver.style.width = a.scroll_size + "px"; this.$scroll_ver.style.height = a.y + "px"; this.$scroll_ver.style.top = this.config.scale_height + "px"; this.$scroll_ver.firstChild.style.height = a.y_inner + "px"} else{this.$scroll_ver.style.display = "none"; this.$scroll_ver.style.width = this.$scroll_ver.style.height = "0px"}}; gantt._scroll_sizes = function(){var d = this._get_grid_width(); var c = Math.max(this._x - d, 0); var f = Math.max(this._y - this.config.scale_height, 0); var e = this.config.scroll_size + 1; var a = this._get_resize_options(); var i = this.config.row_height * this._order.length; var g = this._scroll_ver = a.y?false:(i > f); var b = Math.max(this._tasks.full_width - (!g?e:0), 0); var j = this._scroll_hor = a.x?false:(b > c); var h = {x:false, y:false, scroll_size:e, x_inner:(b + d + e + 2), y_inner:i}; if (j){h.x = Math.max((this._x - (g?e:2)), 0)}if (g){h.y = Math.max((this._y - (j?e:0) - this.config.scale_height), 0)}return h}; gantt._getClassName = function(b){if (!b){return""}var a = b.className || ""; if (a.baseVal){a = a.baseVal}if (!a.indexOf){a = ""}return gantt._trim(a)}; gantt.locate = function(d){var a = gantt._get_target_node(d); var b = gantt._getClassName(a); if ((b || "").indexOf("gantt_task_cell") >= 0){return null}var c = arguments[1] || this.config.task_attribute; while (a){if (a.getAttribute){var f = a.getAttribute(c); if (f){return f}}a = a.parentNode}return null}; gantt._get_target_node = function(b){var a; if (b.tagName){a = b} else{b = b || window.event; a = b.target || b.srcElement}return a}; gantt._trim = function(b){var a = String.prototype.trim || function(){return this.replace(/^\s+|\s+$/g, "")}; return a.apply(b)}; gantt._locate_css = function(g, d, i){if (i === undefined){i = true}var a = gantt._get_target_node(g); var f = ""; var h = false; while (a){f = gantt._getClassName(a); if (f){var b = f.indexOf(d); if (b >= 0){if (!i){return a}var c = (b === 0) || (!gantt._trim(f.charAt(b - 1))); var j = ((b + d.length >= f.length)) || (!gantt._trim(f.charAt(b + d.length))); if (c && j){return a}}}a = a.parentNode}return null}; gantt._locateHTML = function(c, b){var a = gantt._get_target_node(c); b = b || this.config.task_attribute; while (a){if (a.getAttribute){var d = a.getAttribute(b); if (d){return a}}a = a.parentNode}return null}; gantt.getTaskRowNode = function(e){var b = this.$grid_data.childNodes; var c = this.config.task_attribute; for (var a = 0; a < b.length; a++){if (b[a].getAttribute){var d = b[a].getAttribute(c); if (d == e){return b[a]}}}return null}; gantt.getState = function(){return{drag_id:this._tasks_dnd.drag?this._tasks_dnd.drag.id:undefined, drag_mode:this._tasks_dnd.drag?this._tasks_dnd.drag.mode:undefined, drag_from_start:this._tasks_dnd.drag?this._tasks_dnd.drag.left:undefined, selected_task:this._selected_task, min_date:this._min_date?new Date(this._min_date):undefined, max_date:this._max_date?new Date(this._max_date):undefined, lightbox:this._lightbox_id, touch_drag:this._touch_drag, scale_unit:this._tasks?this._tasks.unit:undefined, scale_step:this._tasks?this._tasks.step:undefined}}; gantt._checkTimeout = function(b, a){if (!a){return true}var c = 1000 / a; if (c < 1){return true}if (b._on_timeout){return false}setTimeout(function(){delete b._on_timeout}, c); b._on_timeout = true; return true}; gantt.selectTask = function(a){if (!this.config.select_task){return false}if (a){if (this._selected_task == a){return this._selected_task}if (!this.callEvent("onBeforeTaskSelected", [a])){return false}this.unselectTask(); this._selected_task = a; this.refreshTask(a); this.callEvent("onTaskSelected", [a])}return this._selected_task}; gantt.unselectTask = function(a){var a = a || this._selected_task; if (!a){return}this._selected_task = null; this.refreshTask(a); this.callEvent("onTaskUnselected", [a])}; gantt.getSelectedId = function(){return this.defined(this._selected_task)?this._selected_task:null}; gantt.changeLightboxType = function(a){if (this.getLightboxType() == a){return true}gantt._silent_redraw_lightbox(a)}; gantt._is_render_active = function(){return !this._skip_render}; gantt._correct_dst_change = function(a, e, c, b){var d = gantt._get_line(b) * c; if (d > 60 * 60 && d < 60 * 60 * 24){var f = a.getTimezoneOffset() - e; if (f){a = gantt.date.add(a, f, "minute")}}return a}; (function(){var a = {}; gantt._disableMethod = function(b, c){c = typeof c == "function"?c:function(){}; if (!a[b]){a[b] = this[b]; this[b] = c}}; gantt._restoreMethod = function(b){if (a[b]){this[b] = a[b]; a[b] = null}}; gantt._disableMethods = function(c){for (var b in c){this._disableMethod(b, c[b])}}; gantt._restoreMethods = function(){for (var b in a){this._restoreMethod(b)}}})(); gantt._batchUpdatePayload = function(b){try{b()} catch (a){window.console.error(a)}}; gantt.batchUpdate = function(g, e){if (!this._is_render_active()){this._batchUpdatePayload(g); return}var f = (this._dp && this._dp.updateMode != "off"); var c; if (f){c = this._dp.updateMode; this._dp.setUpdateMode("off")}var a = {}; var b = {_sync_order:true, _sync_links:true, _adjust_scales:true, render:true, _render_data:true, refreshTask:true, refreshLink:true, resetProjectDates:function(h){a[h.id] = h}}; this._disableMethods(b); this._skip_render = true; this.callEvent("onBeforeBatchUpdate", []); this._batchUpdatePayload(g); this.callEvent("onAfterBatchUpdate", []); this._restoreMethods(); this._sync_order(); this._sync_links(); for (var d in a){this.resetProjectDates(a[d])}this._adjust_scales(); this._skip_render = false; if (!e){this.render()}if (f){this._dp.setUpdateMode(c); this._dp.setGanttMode("tasks"); this._dp.sendData(); this._dp.setGanttMode("links"); this._dp.sendData()}}; gantt.env = {isIE:(navigator.userAgent.indexOf("MSIE") >= 0 || navigator.userAgent.indexOf("Trident") >= 0), isIE6:(!window.XMLHttpRequest && navigator.userAgent.indexOf("MSIE") >= 0), isIE7:(navigator.userAgent.indexOf("MSIE 7.0") >= 0 && navigator.userAgent.indexOf("Trident") < 0), isIE8:(navigator.userAgent.indexOf("MSIE 8.0") >= 0 && navigator.userAgent.indexOf("Trident") >= 0), isOpera:(navigator.userAgent.indexOf("Opera") >= 0), isChrome:(navigator.userAgent.indexOf("Chrome") >= 0), isKHTML:(navigator.userAgent.indexOf("Safari") >= 0 || navigator.userAgent.indexOf("Konqueror") >= 0), isFF:(navigator.userAgent.indexOf("Firefox") >= 0), isIPad:(navigator.userAgent.search(/iPad/gi) >= 0), isEdge:(navigator.userAgent.indexOf("Edge") != - 1)}; gantt.ajax = {cache:true, method:"get", parse:function(a){if (typeof a !== "string"){return a}var b; a = a.replace(/^[\s]+/, ""); if (window.DOMParser && !gantt.env.isIE){b = (new window.DOMParser()).parseFromString(a, "text/xml")} else{if (window.ActiveXObject !== window.undefined){b = new window.ActiveXObject("Microsoft.XMLDOM"); b.async = "false"; b.loadXML(a)}}return b}, xmltop:function(b, d, c){if (typeof d.status == "undefined" || d.status < 400){var a = (!d.responseXML)?gantt.ajax.parse(d.responseText || d):(d.responseXML || d); if (a && a.documentElement !== null && !a.getElementsByTagName("parsererror").length){return a.getElementsByTagName(b)[0]}}if (c !== - 1){gantt.callEvent("onLoadXMLError", ["Incorrect XML", arguments[1], c])}return document.createElement("DIV")}, xpath:function(c, a){if (!a.nodeName){a = a.responseXML || a}if (gantt.env.isIE){return a.selectNodes(c) || []} else{var d = []; var e; var b = (a.ownerDocument || a).evaluate(c, a, null, XPathResult.ANY_TYPE, null); while (true){e = b.iterateNext(); if (e){d.push(e)} else{break}}return d}}, query:function(a){gantt.ajax._call((a.method || "GET"), a.url, a.data || "", (a.async || true), a.callback, null, a.headers)}, get:function(a, b){this._call("GET", a, null, true, b)}, getSync:function(a){return this._call("GET", a, null, false)}, put:function(b, a, c){this._call("PUT", b, a, true, c)}, del:function(b, a, c){this._call("DELETE", b, a, true, c)}, post:function(b, a, c){if (arguments.length == 1){a = ""} else{if (arguments.length == 2 && (typeof (a) == "function" || typeof (window[a]) == "function")){c = a; a = ""} else{a = String(a)}}this._call("POST", b, a, true, c)}, postSync:function(b, a){a = (a === null?"":String(a)); return this._call("POST", b, a, false)}, getLong:function(a, b){this._call("GET", a, null, true, b, {url:a})}, postLong:function(b, a, c){if (arguments.length == 2 && (typeof (a) == "function" || typeof (window[a]))){c = a; a = ""}this._call("POST", b, a, true, c, {url:b, postData:a})}, _call:function(a, b, c, e, g, j, d){var i = (window.XMLHttpRequest && !gantt.env.isIE?new XMLHttpRequest():new ActiveXObject("Microsoft.XMLHTTP")); var f = (navigator.userAgent.match(/AppleWebKit/) !== null && navigator.userAgent.match(/Qt/) !== null && navigator.userAgent.match(/Safari/) !== null); if (!!e){i.onreadystatechange = function(){if ((i.readyState == 4) || (f && i.readyState == 3)){if (i.status != 200 || i.responseText === ""){if (!gantt.callEvent("onAjaxError", [i])){return}}window.setTimeout(function(){if (typeof (g) == "function"){g.apply(window, [{xmlDoc:i, filePath:b}])}if (j){if (typeof (j.postData) != "undefined"){gantt.ajax.postLong(j.url, j.postData, g)} else{gantt.ajax.getLong(j.url, g)}}g = null; i = null}, 1)}}}if (a == "GET" && !this.cache){b += (b.indexOf("?") >= 0?"&":"?") + "dhxr" + new Date().getTime() + "=1"}i.open(a, b, e); if (d){for (var h in d){i.setRequestHeader(h, d[h])}} else{if (a.toUpperCase() == "POST" || a == "PUT" || a == "DELETE"){i.setRequestHeader("Content-Type", "application/x-www-form-urlencoded")} else{if (a == "GET"){c = null}}}i.setRequestHeader("X-Requested-With", "XMLHttpRequest"); i.send(c); if (!e){return{xmlDoc:i, filePath:b}}}}; gantt._urlSeparator = function(a){if (a.indexOf("?") != - 1){return"&"} else{return"?"}}; (function(){var k = null; function m(r, p){var q = r.callback; gantt.modalbox.hide(r.box); k = r.box = null; if (q){q(p)}}function a(s){if (k){s = s || event; var q = s.which || event.keyCode; var p = false; if (gantt.message.keyboard){if (q == 13 || q == 32){var r = s.target || s.srcElement; if (gantt._getClassName(r).indexOf("gantt_popup_button") > - 1 && r.click){r.click()} else{m(k, true); p = true}}if (q == 27){m(k, false); p = true}}if (p){if (s.preventDefault){s.preventDefault()}return !(s.cancelBubble = true)}return}}if (document.attachEvent){document.attachEvent("onkeydown", a)} else{document.addEventListener("keydown", a, true)}function l(q){if (!l.cover){l.cover = document.createElement("DIV"); l.cover.onkeydown = a; l.cover.className = "dhx_modal_cover"; document.body.appendChild(l.cover)}var p = document.body.scrollHeight; l.cover.style.display = q?"inline-block":"none"}function g(s, p){var q = gantt._waiAria.messageButtonAttrString(s); var r = "gantt_" + s.toLowerCase().replace(/ /g, "_") + "_button dhtmlx_" + s.toLowerCase().replace(/ /g, "_") + "_button"; return"<div " + q + " class='gantt_popup_button dhtmlx_popup_button " + r + "' result='" + p + "' ><div>" + s + "</div></div>"}function c(q){if (!n.area){n.area = document.createElement("DIV"); n.area.className = "gantt_message_area dhtmlx_message_area"; n.area.style[n.position] = "5px"; document.body.appendChild(n.area)}n.hide(q.id); var p = document.createElement("DIV"); p.innerHTML = "<div>" + q.text + "</div>"; p.className = "gantt-info dhtmlx-info gantt-" + q.type + " dhtmlx-" + q.type; p.onclick = function(){n.hide(q.id); q = null}; gantt._waiAria.messageInfoAttr(p); if (n.position == "bottom" && n.area.firstChild){n.area.insertBefore(p, n.area.firstChild)} else{n.area.appendChild(p)}if (q.expire > 0){n.timers[q.id] = window.setTimeout(function(){n.hide(q.id)}, q.expire)}n.pull[q.id] = p; p = null; return q.id}function d(){var p = [].slice.apply(arguments, [0]); for (var q = 0; q < p.length; q++){if (p[q]){return p[q]}}}function h(q, s, v){var u = document.createElement("DIV"); var w = gantt.uid(); gantt._waiAria.messageModalAttr(u, w); u.className = " gantt_modal_box dhtmlx_modal_box gantt-" + q.type + " dhtmlx-" + q.type; u.setAttribute("dhxbox", 1); var p = ""; if (q.width){u.style.width = q.width}if (q.height){u.style.height = q.height}if (q.title){p += '<div class="gantt_popup_title dhtmlx_popup_title">' + q.title + "</div>"}p += '<div class="gantt_popup_text dhtmlx_popup_text" id="' + w + '"><span>' + (q.content?"":q.text) + '</span></div><div  class="gantt_popup_controls dhtmlx_popup_controls">'; if (s){p += g(d(q.ok, gantt.locale.labels.message_ok, "OK"), true)}if (v){p += g(d(q.cancel, gantt.locale.labels.message_cancel, "Cancel"), false)}if (q.buttons){for (var r = 0; r < q.buttons.length; r++){p += g(q.buttons[r], r)}}p += "</div>"; u.innerHTML = p; if (q.content){var t = q.content; if (typeof t == "string"){t = document.getElementById(t)}if (t.style.display == "none"){t.style.display = ""}u.childNodes[q.title?1:0].appendChild(t)}u.onclick = function(z){z = z || event; var y = z.target || z.srcElement; if (!y.className){y = y.parentNode}if (y.className.split(" ")[0] == "gantt_popup_button"){var x = y.getAttribute("result"); x = (x == "true") || (x == "false"?false:x); m(q, x)}}; q.box = u; if (s || v){k = q}return u}function o(q, r, t){var s = q.tagName?q:h(q, r, t); if (!q.hidden){l(true)}document.body.appendChild(s); var p = Math.abs(Math.floor(((window.innerWidth || document.documentElement.offsetWidth) - s.offsetWidth) / 2)); var u = Math.abs(Math.floor(((window.innerHeight || document.documentElement.offsetHeight) - s.offsetHeight) / 2)); if (q.position == "top"){s.style.top = "-3px"} else{s.style.top = u + "px"}s.style.left = p + "px"; s.onkeydown = a; gantt.modalbox.focus(s); if (q.hidden){gantt.modalbox.hide(s)}gantt.callEvent("onMessagePopup", [s]); return s}function j(p){return o(p, true, false)}function b(p){return o(p, true, true)}function f(p){return o(p)}function i(q, p, r){if (typeof q != "object"){if (typeof p == "function"){r = p; p = ""}q = {text:q, type:p, callback:r}}return q}function e(r, q, p, s){if (typeof r != "object"){r = {text:r, type:q, expire:p, id:s}}r.id = r.id || n.uid(); r.expire = r.expire || n.expire; return r}gantt.alert = function(){var p = i.apply(this, arguments); p.type = p.type || "confirm"; return j(p)}; gantt.confirm = function(){var p = i.apply(this, arguments); p.type = p.type || "alert"; return b(p)}; gantt.modalbox = function(){var p = i.apply(this, arguments); p.type = p.type || "alert"; return f(p)}; gantt.modalbox.hide = function(p){while (p && p.getAttribute && !p.getAttribute("dhxbox")){p = p.parentNode}if (p){p.parentNode.removeChild(p); l(false); gantt.callEvent("onAfterMessagePopup", [p])}}; gantt.modalbox.focus = function(p){setTimeout(function(){var q = gantt._getFocusableNodes(p); if (q.length){if (q[0].focus){q[0].focus()}}}, 1)}; var n = gantt.message = function(s, r, q, t){s = e.apply(this, arguments); s.type = s.type || "info"; var p = s.type.split("-")[0]; switch (p){case"alert":return j(s); case"confirm":return b(s); case"modalbox":return f(s); default:return c(s)}}; n.seed = (new Date()).valueOf(); n.uid = function(){return n.seed++}; n.expire = 4000; n.keyboard = true; n.position = "top"; n.pull = {}; n.timers = {}; n.hideAll = function(){for (var p in n.pull){n.hide(p)}}; n.hide = function(q){var p = n.pull[q]; if (p && p.parentNode){window.setTimeout(function(){p.parentNode.removeChild(p); p = null}, 2000); p.className += " hidden"; if (n.timers[q]){window.clearTimeout(n.timers[q])}delete n.pull[q]}}})(); gantt.date = {init:function(){var c = gantt.locale.date.month_short; var b = gantt.locale.date.month_short_hash = {}; for (var a = 0; a < c.length; a++){b[c[a]] = a}var c = gantt.locale.date.month_full; var b = gantt.locale.date.month_full_hash = {}; for (var a = 0; a < c.length; a++){b[c[a]] = a}}, date_part:function(b){var a = new Date(b); b.setHours(0); this.hour_start(b); if (b.getHours() && (b.getDate() < a.getDate() || b.getMonth() < a.getMonth() || b.getFullYear() < a.getFullYear())){b.setTime(b.getTime() + 60 * 60 * 1000 * (24 - b.getHours()))}return b}, time_part:function(a){return(a.valueOf() / 1000 - a.getTimezoneOffset() * 60) % 86400}, week_start:function(b){var a = b.getDay(); if (gantt.config.start_on_monday){if (a === 0){a = 6} else{a--}}return this.date_part(this.add(b, - 1 * a, "day"))}, month_start:function(a){a.setDate(1); return this.date_part(a)}, year_start:function(a){a.setMonth(0); return this.month_start(a)}, day_start:function(a){return this.date_part(a)}, hour_start:function(a){if (a.getMinutes()){a.setMinutes(0)}this.minute_start(a); return a}, minute_start:function(a){if (a.getSeconds()){a.setSeconds(0)}if (a.getMilliseconds()){a.setMilliseconds(0)}return a}, _add_days:function(b, c){var a = new Date(b.valueOf()); a.setDate(a.getDate() + c); if (c >= 0 && (!b.getHours() && a.getHours()) && (a.getDate() <= b.getDate() || a.getMonth() < b.getMonth() || a.getFullYear() < b.getFullYear())){a.setTime(a.getTime() + 60 * 60 * 1000 * (24 - a.getHours()))}return a}, add:function(b, c, d){var a = new Date(b.valueOf()); switch (d){case"day":a = gantt.date._add_days(a, c); break; case"week":a = gantt.date._add_days(a, c * 7); break; case"month":a.setMonth(a.getMonth() + c); break; case"year":a.setYear(a.getFullYear() + c); break; case"hour":a.setTime(a.getTime() + c * 60 * 60 * 1000); break; case"minute":a.setTime(a.getTime() + c * 60 * 1000); break; default:return gantt.date["add_" + d](b, c, d)}return a}, to_fixed:function(a){if (a < 10){return"0" + a}return a}, copy:function(a){return new Date(a.valueOf())}, date_to_str:function(b, a){if (a){return function(e){var d = window.gantt; var c = b.replace(/%[a-zA-Z]/g, function(f){switch (f){case"%d":return d.date.to_fixed(e.getUTCDate()); case"%m":return d.date.to_fixed((e.getUTCMonth() + 1)); case"%j":return e.getUTCDate(); case"%n":return(e.getUTCMonth() + 1); case"%y":return d.date.to_fixed(e.getUTCFullYear() % 100); case"%Y":return e.getUTCFullYear(); case"%D":return d.locale.date.day_short[e.getUTCDay()]; case"%l":return d.locale.date.day_full[e.getUTCDay()]; case"%M":return d.locale.date.month_short[e.getUTCMonth()]; case"%F":return d.locale.date.month_full[e.getUTCMonth()]; case"%h":return d.date.to_fixed((e.getUTCHours() + 11) % 12 + 1); case"%g":return((e.getUTCHours() + 11) % 12 + 1); case"%G":return e.getUTCHours(); case"%H":return d.date.to_fixed(e.getUTCHours()); case"%i":return d.date.to_fixed(e.getUTCMinutes()); case"%a":return(e.getUTCHours() > 11?"pm":"am"); case"%A":return(e.getUTCHours() > 11?"PM":"AM"); case"%s":return d.date.to_fixed(e.getUTCSeconds()); case"%W":return d.date.to_fixed(d.date.getUTCISOWeek(e)); default:return f}}); return c}} else{return function(e){var d = window.gantt; var c = b.replace(/%[a-zA-Z]/g, function(f){switch (f){case"%d":return d.date.to_fixed(e.getDate()); case"%m":return d.date.to_fixed((e.getMonth() + 1)); case"%j":return e.getDate(); case"%n":return(e.getMonth() + 1); case"%y":return d.date.to_fixed(e.getFullYear() % 100); case"%Y":return e.getFullYear(); case"%D":return d.locale.date.day_short[e.getDay()]; case"%l":return d.locale.date.day_full[e.getDay()]; case"%M":return d.locale.date.month_short[e.getMonth()]; case"%F":return d.locale.date.month_full[e.getMonth()]; case"%h":return d.date.to_fixed((e.getHours() + 11) % 12 + 1); case"%g":return((e.getHours() + 11) % 12 + 1); case"%G":return e.getHours(); case"%H":return d.date.to_fixed(e.getHours()); case"%i":return d.date.to_fixed(e.getMinutes()); case"%a":return(e.getHours() > 11?"pm":"am"); case"%A":return(e.getHours() > 11?"PM":"AM"); case"%s":return d.date.to_fixed(e.getSeconds()); case"%W":return d.date.to_fixed(d.date.getISOWeek(e)); default:return f}}); return c}}}, str_to_date:function(c, b){var a = c.match(/%[a-zA-Z]/g); return function(f){var e = window.gantt; var h = [0, 0, 1, 0, 0, 0]; var d = f.match(/[a-zA-Z]+|[0-9]+/g); for (var g = 0; g < a.length; g++){switch (a[g]){case"%j":case"%d":h[2] = d[g] || 1; break; case"%n":case"%m":h[1] = (d[g] || 1) - 1; break; case"%y":h[0] = d[g] * 1 + (d[g] > 50?1900:2000); break; case"%g":case"%G":case"%h":case"%H":h[3] = d[g] || 0; break; case"%i":h[4] = d[g] || 0; break; case"%Y":h[0] = d[g] || 0; break; case"%a":case"%A":h[3] = h[3] % 12 + ((d[g] || "").toLowerCase() == "am"?0:12); break; case"%s":h[5] = d[g] || 0; break; case"%M":h[1] = e.locale.date.month_short_hash[d[g]] || 0; break; case"%F":h[1] = e.locale.date.month_full_hash[d[g]] || 0; break; default:break}}if (b){return new Date(Date.UTC(h[0], h[1], h[2], h[3], h[4], h[5]))} else{return new Date(h[0], h[1], h[2], h[3], h[4], h[5])}}}, getISOWeek:function(c){if (!c){return false}var b = c.getDay(); if (b === 0){b = 7}var d = new Date(c.valueOf()); d.setDate(c.getDate() + (4 - b)); var a = d.getFullYear(); var f = Math.round((d.getTime() - new Date(a, 0, 1).getTime()) / 86400000); var e = 1 + Math.floor(f / 7); return e}, getUTCISOWeek:function(a){return this.getISOWeek(a)}, convert_to_utc:function(a){return new Date(a.getUTCFullYear(), a.getUTCMonth(), a.getUTCDate(), a.getUTCHours(), a.getUTCMinutes(), a.getUTCSeconds())}, parseDate:function(a, b){if (typeof (a) == "string"){if (gantt.defined(b)){if (typeof (b) == "string"){b = gantt.defined(gantt.templates[b])?gantt.templates[b]:gantt.date.str_to_date(b)} else{b = gantt.templates.xml_date}}if (a){a = b(a)} else{a = null}}return a}}; gantt.date.quarter_start = function(c){gantt.date.month_start(c); var a = c.getMonth(), b; if (a >= 9){b = 9} else{if (a >= 6){b = 6} else{if (a >= 3){b = 3} else{b = 0}}}c.setMonth(b); return c}; gantt.date.add_quarter = function(a, b){return gantt.date.add(a, b * 3, "month")}; if (window.jQuery){(function(b){var a = []; b.fn.dhx_gantt = function(d){d = d || {}; if (typeof (d) === "string"){if (a[d]){return a[d].apply(this, [])} else{b.error("Method " + d + " does not exist on jQuery.dhx_gantt")}} else{var c = []; this.each(function(){if (this && this.getAttribute){if (!this.getAttribute("dhxgantt")){for (var e in d){if (e != "data"){gantt.config[e] = d[e]}}gantt.init(this); if (d.data){gantt.parse(d.data)}c.push(gantt)}}}); if (c.length === 1){return c[0]}return c}}})(jQuery)}gantt.locale = {date:{month_full:["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"], month_short:["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"], day_full:["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"], day_short:["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]}, labels:{new_task:"New task", icon_save:"Save", icon_cancel:"Cancel", icon_details:"Details", icon_edit:"Edit", icon_delete:"Delete", confirm_closing:"", confirm_deleting:"Task will be deleted permanently, are you sure?", section_description:"Description", section_time:"Time period", section_type:"Type", column_text:"Task name", column_start_date:"Start time", column_duration:"Duration", column_add:"", link:"Link", confirm_link_deleting:"will be deleted", link_start:" (start)", link_end:" (end)", type_task:"Task", type_project:"Project", type_milestone:"Milestone", minutes:"Minutes", hours:"Hours", days:"Days", weeks:"Week", months:"Months", years:"Years", message_ok:"OK", message_cancel:"Cancel"}}; gantt.skins.skyblue = {config:{grid_width:350, row_height:27, scale_height:27, link_line_width:1, link_arrow_size:8, lightbox_additional_height:75}, _second_column_width:95, _third_column_width:80}; gantt.skins.meadow = {config:{grid_width:350, row_height:27, scale_height:30, link_line_width:2, link_arrow_size:6, lightbox_additional_height:72}, _second_column_width:95, _third_column_width:80}; gantt.skins.terrace = {config:{grid_width:360, row_height:35, scale_height:35, link_line_width:2, link_arrow_size:6, lightbox_additional_height:75}, _second_column_width:90, _third_column_width:70}; gantt.skins.broadway = {config:{grid_width:360, row_height:35, scale_height:35, link_line_width:1, link_arrow_size:7, lightbox_additional_height:86}, _second_column_width:90, _third_column_width:80, _lightbox_template:"<div class='gantt_cal_ltitle'><span class='gantt_mark'>&nbsp;</span><span class='gantt_time'></span><span class='gantt_title'></span><div class='gantt_cancel_btn'></div></div><div class='gantt_cal_larea'></div>", _config_buttons_left:{}, _config_buttons_right:{gantt_delete_btn:"icon_delete", gantt_save_btn:"icon_save"}}; gantt.skins.contrast_black = {config:{grid_width:360, row_height:35, scale_height:35, link_line_width:2, link_arrow_size:6, lightbox_additional_height:75}, _second_column_width:100, _third_column_width:80}; gantt.skins.contrast_white = {config:{grid_width:360, row_height:35, scale_height:35, link_line_width:2, link_arrow_size:6, lightbox_additional_height:75}, _second_column_width:100, _third_column_width:80}; gantt.config.touch_drag = 500; gantt.config.touch = true; gantt.config.touch_feedback = true; gantt.config.touch_feedback_duration = 1; gantt._prevent_touch_scroll = false; gantt._touch_feedback = function(){if (gantt.config.touch_feedback){if (navigator.vibrate){navigator.vibrate(gantt.config.touch_feedback_duration)}}}; gantt._init_touch_events = function(){if (this.config.touch != "force"){this.config.touch = this.config.touch && ((navigator.userAgent.indexOf("Mobile") != - 1) || (navigator.userAgent.indexOf("iPad") != - 1) || (navigator.userAgent.indexOf("Android") != - 1) || (navigator.userAgent.indexOf("Touch") != - 1))}if (this.config.touch){if (window.navigator.msPointerEnabled){this._touch_events(["MSPointerMove", "MSPointerDown", "MSPointerUp"], function(a){if (a.pointerType == a.MSPOINTER_TYPE_MOUSE){return null}return a}, function(a){return(!a || a.pointerType == a.MSPOINTER_TYPE_MOUSE)})} else{this._touch_events(["touchmove", "touchstart", "touchend"], function(a){if (a.touches && a.touches.length > 1){return null}if (a.touches[0]){return{target:a.target, pageX:a.touches[0].pageX, pageY:a.touches[0].pageY, clientX:a.touches[0].clientX, clientY:a.touches[0].clientY}} else{return a}}, function(){return false})}}}; gantt._touch_events = function(h, d, g){var a = 0; var k = false; var l = false; var f = 0; var m = null; var b; var c = null; var j = null; if (!this._gantt_touch_event_ready){this._gantt_touch_event_ready = 1; gantt.event(gantt.$container, h[0], function(r){if (g(r)){return}if (!k){return}if (c){clearTimeout(c)}var q = d(r); if (gantt._tasks_dnd.drag.id || gantt._tasks_dnd.drag.start_drag){gantt._tasks_dnd.on_mouse_move(q); if (r.preventDefault){r.preventDefault()}r.cancelBubble = true; return false}if (!gantt._prevent_touch_scroll){if (q && m){var p = m.pageX - q.pageX; var o = m.pageY - q.pageY; if (!l && (Math.abs(p) > 5 || Math.abs(o) > 5)){gantt._touch_scroll_active = l = true; a = 0; b = gantt.getScrollState()}if (l){gantt.scrollTo(b.x + p, b.y + o); var n = gantt.getScrollState(); if ((b.x != n.x && o > 2 * p) || (b.y != n.y && p > 2 * o)){return e(r)}}}return e(r)}return true})}gantt.event(this.$container, "contextmenu", function(n){if (k){return e(n)}}); gantt.event(this.$container, h[1], function(o){if (g(o)){return}if (o.touches && o.touches.length > 1){k = false; return}k = true; m = d(o); if (m && a){var n = new Date(); if ((n - a) < 500){gantt._on_dblclick(m); e(o)} else{a = n}} else{a = new Date()}c = setTimeout(function(){var p = gantt.locate(m); if (p && !gantt._locate_css(m, "gantt_link_control") && !gantt._locate_css(m, "gantt_grid_data")){gantt._tasks_dnd.on_mouse_down(m); if (gantt._tasks_dnd.drag && gantt._tasks_dnd.drag.start_drag){i(p); gantt._tasks_dnd._start_dnd(m); gantt._touch_drag = true; gantt.refreshTask(p); gantt._touch_feedback()}}c = null}, gantt.config.touch_drag)}); gantt.event(this.$container, h[2], function(o){if (g(o)){return}if (c){clearTimeout(c)}gantt._touch_drag = false; k = false; var n = d(o); gantt._tasks_dnd.on_mouse_up(n); if (j){gantt.refreshTask(gantt.locate(j)); if (j.parentNode){j.parentNode.removeChild(j); gantt._touch_feedback()}}gantt._touch_scroll_active = k = l = false; j = null}); function e(n){if (n && n.preventDefault){n.preventDefault()}(n || event).cancelBubble = true; return false}function i(p){var q = gantt._task_area_pulls; var n = gantt.getTask(p); if (n && gantt.isTaskVisible(p)){for (var o in q){n = q[o][p]; if (n && n.getAttribute("task_id") && n.getAttribute("task_id") == p){var r = n.cloneNode(true); j = n; q[o][p] = r; n.style.display = "none"; r.className += " gantt_drag_move "; n.parentNode.appendChild(r); return r}}}}}; (function(){function a(g, j){var e = gantt.env.isIE?"":"%c"; var i = [e, '"', g, '"', e, " has been deprecated in dhtmlxGantt v4.0 and will stop working in v5.0. Use ", e, '"', j, '"', e, " instead. \nSee more details at http://docs.dhtmlx.com/gantt/migrating.html "].join(""); var h = window.console.warn || window.console.log; var f = [i]; if (!gantt.env.isIE){f = f.concat(["font-weight:bold", "font-weight:normal", "font-weight:bold", "font-weight:normal"])}h.apply(window.console, f)}function d(e){return function(){a("dhtmlx." + e, "gantt." + e); return gantt[e].apply(gantt, arguments)}}if (!window.dhtmlx){window.dhtmlx = {}}var c = ["message", "alert", "confirm", "modalbox", "uid", "copy", "mixin", "defined", "bind", "assert"]; for (var b = 0; b < c.length; b++){if (!window.dhtmlx[c[b]]){dhtmlx[c[b]] = d(c[b])}}if (!window.dataProcessor){window.dataProcessor = function(e){a("new dataProcessor(url)", "new gantt.dataProcessor(url)"); return new gantt.dataProcessor(e)}}})();
